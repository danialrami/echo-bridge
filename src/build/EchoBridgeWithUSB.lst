ARM GAS  /tmp/cch2Dr4w.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"EchoBridgeWithUSB.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy3LedD2Ev,"axG",%progbits,_ZN5daisy3LedD5Ev,comdat
  17              		.align	1
  18              		.weak	_ZN5daisy3LedD2Ev
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	_ZN5daisy3LedD2Ev:
  26              	.LVL0:
  27              	.LFB3971:
  28              		.file 1 "/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** 
   2:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** #pragma once
   3:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** #define DSY_LED_H
   5:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** #include "daisy_core.h"
   6:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** #include "per/gpio.h"
   7:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** 
   8:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** */
  11:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** 
  12:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** namespace daisy
  13:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** {
  14:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** /**
  15:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     @author shensley
  18:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     @date March 2020
  19:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     @ingroup feedback
  20:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** */
  21:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** class Led
  22:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h **** {
  23:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****   public:
  24:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     Led() {}
  25:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     ~Led() {}
  29              		.loc 1 25 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
ARM GAS  /tmp/cch2Dr4w.s 			page 2


  34              		.loc 1 25 13 is_stmt 0 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE3971:
  39              		.weak	_ZN5daisy3LedD1Ev
  40              		.thumb_set _ZN5daisy3LedD1Ev,_ZN5daisy3LedD2Ev
  41              		.section	.text._Z11HandleKnob1f,"ax",%progbits
  42              		.align	1
  43              		.global	_Z11HandleKnob1f
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv5-d16
  49              	_Z11HandleKnob1f:
  50              	.LVL1:
  51              	.LFB5524:
  52              		.file 2 "EchoBridgeWithUSB.cpp"
   1:EchoBridgeWithUSB.cpp **** #include "daisysp.h"
   2:EchoBridgeWithUSB.cpp **** #include "hothouse.h"
   3:EchoBridgeWithUSB.cpp **** #include "IRLoader.h"
   4:EchoBridgeWithUSB.cpp **** #include "shy_fft.h"  // Include the ShyFFT library
   5:EchoBridgeWithUSB.cpp **** #include <string.h>
   6:EchoBridgeWithUSB.cpp **** 
   7:EchoBridgeWithUSB.cpp **** using clevelandmusicco::Hothouse;
   8:EchoBridgeWithUSB.cpp **** using daisy::AudioHandle;
   9:EchoBridgeWithUSB.cpp **** using daisy::Led;
  10:EchoBridgeWithUSB.cpp **** using daisy::SaiHandle;
  11:EchoBridgeWithUSB.cpp **** using daisy::System;
  12:EchoBridgeWithUSB.cpp **** 
  13:EchoBridgeWithUSB.cpp **** // Hothouse hardware
  14:EchoBridgeWithUSB.cpp **** Hothouse hw;
  15:EchoBridgeWithUSB.cpp **** 
  16:EchoBridgeWithUSB.cpp **** // USB/IR loading
  17:EchoBridgeWithUSB.cpp **** IRLoader irLoader;
  18:EchoBridgeWithUSB.cpp **** 
  19:EchoBridgeWithUSB.cpp **** // LEDs - Hothouse pedal only has two LEDs
  20:EchoBridgeWithUSB.cpp **** Led led1;  // LED 1 - Used for freeze status and temporarily for IR loading
  21:EchoBridgeWithUSB.cpp **** Led led2;  // LED 2 - Used for bypass status
  22:EchoBridgeWithUSB.cpp **** 
  23:EchoBridgeWithUSB.cpp **** // State variables
  24:EchoBridgeWithUSB.cpp **** bool bypass = true;
  25:EchoBridgeWithUSB.cpp **** bool freeze = false;
  26:EchoBridgeWithUSB.cpp **** bool usbMounted = false;
  27:EchoBridgeWithUSB.cpp **** bool irLoaded = false;
  28:EchoBridgeWithUSB.cpp **** bool isStereoInput = false; // Flag for stereo detection
  29:EchoBridgeWithUSB.cpp **** 
  30:EchoBridgeWithUSB.cpp **** // Define FFT sizes
  31:EchoBridgeWithUSB.cpp **** static const size_t EARLY_FFT_SIZE = 64;     // Small FFT for early reflections (low latency)
  32:EchoBridgeWithUSB.cpp **** static const size_t LATE_FFT_SIZE = 1024;    // Larger FFT for late reflections (efficiency)
  33:EchoBridgeWithUSB.cpp **** static const size_t MAX_PREDELAY_SAMPLES = 24000; // 500ms at 48kHz
  34:EchoBridgeWithUSB.cpp **** 
  35:EchoBridgeWithUSB.cpp **** // Global SDRAM buffers for late partition
  36:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateInputBuffer[LATE_FFT_SIZE];
  37:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateInputBufferRight[LATE_FFT_SIZE];
  38:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateOutputBuffer[LATE_FFT_SIZE * 2];
  39:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateOutputBufferRight[LATE_FFT_SIZE * 2];
  40:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateTimeIn[LATE_FFT_SIZE];
ARM GAS  /tmp/cch2Dr4w.s 			page 3


  41:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateTimeOut[LATE_FFT_SIZE];
  42:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateFreqReal[LATE_FFT_SIZE];
  43:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateFreqImag[LATE_FFT_SIZE];
  44:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateIrFreqReal[LATE_FFT_SIZE];
  45:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateIrFreqImag[LATE_FFT_SIZE];
  46:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateIrFreqRealRight[LATE_FFT_SIZE];
  47:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_lateIrFreqImagRight[LATE_FFT_SIZE];
  48:EchoBridgeWithUSB.cpp **** 
  49:EchoBridgeWithUSB.cpp **** // Global SDRAM buffers for predelay
  50:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_predelayBuffer[MAX_PREDELAY_SAMPLES];
  51:EchoBridgeWithUSB.cpp **** DSY_SDRAM_BSS float g_predelayBufferRight[MAX_PREDELAY_SAMPLES];
  52:EchoBridgeWithUSB.cpp **** 
  53:EchoBridgeWithUSB.cpp **** // Partitioned Convolution implementation
  54:EchoBridgeWithUSB.cpp **** class PartitionedConvolutionReverb {
  55:EchoBridgeWithUSB.cpp **** private:
  56:EchoBridgeWithUSB.cpp ****     // IR parameters
  57:EchoBridgeWithUSB.cpp ****     float* irBuffer;        // Left/mono IR
  58:EchoBridgeWithUSB.cpp ****     float* irBufferRight;   // Right IR for true stereo
  59:EchoBridgeWithUSB.cpp ****     size_t irLength;
  60:EchoBridgeWithUSB.cpp ****     
  61:EchoBridgeWithUSB.cpp ****     // FFT objects for early and late partitions
  62:EchoBridgeWithUSB.cpp ****     ShyFFT<float, EARLY_FFT_SIZE> earlyFft;
  63:EchoBridgeWithUSB.cpp ****     ShyFFT<float, LATE_FFT_SIZE> lateFft;
  64:EchoBridgeWithUSB.cpp ****     
  65:EchoBridgeWithUSB.cpp ****     // Early partition buffers - small enough to keep in internal memory
  66:EchoBridgeWithUSB.cpp ****     float earlyTimeIn[EARLY_FFT_SIZE];
  67:EchoBridgeWithUSB.cpp ****     float earlyTimeOut[EARLY_FFT_SIZE];
  68:EchoBridgeWithUSB.cpp ****     float earlyFreqReal[EARLY_FFT_SIZE];
  69:EchoBridgeWithUSB.cpp ****     float earlyFreqImag[EARLY_FFT_SIZE];
  70:EchoBridgeWithUSB.cpp ****     float earlyFreqRealRight[EARLY_FFT_SIZE];
  71:EchoBridgeWithUSB.cpp ****     float earlyFreqImagRight[EARLY_FFT_SIZE];
  72:EchoBridgeWithUSB.cpp ****     
  73:EchoBridgeWithUSB.cpp ****     // IR frequency domain for early partition
  74:EchoBridgeWithUSB.cpp ****     float earlyIrFreqReal[EARLY_FFT_SIZE];
  75:EchoBridgeWithUSB.cpp ****     float earlyIrFreqImag[EARLY_FFT_SIZE];
  76:EchoBridgeWithUSB.cpp ****     float earlyIrFreqRealRight[EARLY_FFT_SIZE];
  77:EchoBridgeWithUSB.cpp ****     float earlyIrFreqImagRight[EARLY_FFT_SIZE];
  78:EchoBridgeWithUSB.cpp ****     
  79:EchoBridgeWithUSB.cpp ****     // Input/output buffers for early partition
  80:EchoBridgeWithUSB.cpp ****     float earlyInputBuffer[EARLY_FFT_SIZE];
  81:EchoBridgeWithUSB.cpp ****     float earlyInputBufferRight[EARLY_FFT_SIZE];
  82:EchoBridgeWithUSB.cpp ****     float earlyOutputBuffer[EARLY_FFT_SIZE * 2];
  83:EchoBridgeWithUSB.cpp ****     float earlyOutputBufferRight[EARLY_FFT_SIZE * 2];
  84:EchoBridgeWithUSB.cpp ****     size_t earlyInputBufferPos;
  85:EchoBridgeWithUSB.cpp ****     
  86:EchoBridgeWithUSB.cpp ****     // Late partition buffers - using global SDRAM buffers
  87:EchoBridgeWithUSB.cpp ****     size_t lateInputBufferPos;
  88:EchoBridgeWithUSB.cpp ****     
  89:EchoBridgeWithUSB.cpp ****     // Predelay buffer - using global SDRAM buffers
  90:EchoBridgeWithUSB.cpp ****     size_t predelayBufferPos;
  91:EchoBridgeWithUSB.cpp ****     size_t predelayInSamples;
  92:EchoBridgeWithUSB.cpp ****     
  93:EchoBridgeWithUSB.cpp ****     // Parameters
  94:EchoBridgeWithUSB.cpp ****     float dryWet;           // Dry/wet mix (0.0 - 1.0)
  95:EchoBridgeWithUSB.cpp ****     float predelayMs;       // Predelay in milliseconds
  96:EchoBridgeWithUSB.cpp ****     float irLengthFactor;   // IR length factor (0.0 - 1.0)
  97:EchoBridgeWithUSB.cpp ****     float lowCutFreq;       // Low cut frequency
ARM GAS  /tmp/cch2Dr4w.s 			page 4


  98:EchoBridgeWithUSB.cpp ****     float highCutFreq;      // High cut frequency
  99:EchoBridgeWithUSB.cpp ****     float stereoWidth;      // Stereo width (0.0 - 2.0)
 100:EchoBridgeWithUSB.cpp ****     float sampleRate;       // Sample rate
 101:EchoBridgeWithUSB.cpp ****     bool trueStereoIR;      // True if using separate L/R IRs
 102:EchoBridgeWithUSB.cpp ****     
 103:EchoBridgeWithUSB.cpp ****     // Filters
 104:EchoBridgeWithUSB.cpp ****     daisysp::Svf lowCutFilterL;
 105:EchoBridgeWithUSB.cpp ****     daisysp::Svf highCutFilterL;
 106:EchoBridgeWithUSB.cpp ****     daisysp::Svf lowCutFilterR;
 107:EchoBridgeWithUSB.cpp ****     daisysp::Svf highCutFilterR;
 108:EchoBridgeWithUSB.cpp ****     
 109:EchoBridgeWithUSB.cpp ****     // Helper function to update IR in frequency domain
 110:EchoBridgeWithUSB.cpp ****     bool UpdateIRFrequencyDomain() {
 111:EchoBridgeWithUSB.cpp ****         // Clear the frequency domain buffers
 112:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqReal, 0, EARLY_FFT_SIZE * sizeof(float));
 113:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImag, 0, EARLY_FFT_SIZE * sizeof(float));
 114:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqRealRight, 0, EARLY_FFT_SIZE * sizeof(float));
 115:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImagRight, 0, EARLY_FFT_SIZE * sizeof(float));
 116:EchoBridgeWithUSB.cpp ****         
 117:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqReal, 0, LATE_FFT_SIZE * sizeof(float));
 118:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqImag, 0, LATE_FFT_SIZE * sizeof(float));
 119:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqRealRight, 0, LATE_FFT_SIZE * sizeof(float));
 120:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqImagRight, 0, LATE_FFT_SIZE * sizeof(float));
 121:EchoBridgeWithUSB.cpp ****         
 122:EchoBridgeWithUSB.cpp ****         // Apply IR length factor
 123:EchoBridgeWithUSB.cpp ****         size_t effectiveIrLength = (size_t)(irLength * irLengthFactor);
 124:EchoBridgeWithUSB.cpp ****         if (effectiveIrLength > irLength) effectiveIrLength = irLength;
 125:EchoBridgeWithUSB.cpp ****         
 126:EchoBridgeWithUSB.cpp ****         // Prepare early partition (first EARLY_FFT_SIZE samples of IR)
 127:EchoBridgeWithUSB.cpp ****         float earlyIrPadded[EARLY_FFT_SIZE];
 128:EchoBridgeWithUSB.cpp ****         float earlyIrPaddedRight[EARLY_FFT_SIZE];
 129:EchoBridgeWithUSB.cpp ****         
 130:EchoBridgeWithUSB.cpp ****         memset(earlyIrPadded, 0, EARLY_FFT_SIZE * sizeof(float));
 131:EchoBridgeWithUSB.cpp ****         memset(earlyIrPaddedRight, 0, EARLY_FFT_SIZE * sizeof(float));
 132:EchoBridgeWithUSB.cpp ****         
 133:EchoBridgeWithUSB.cpp ****         // Copy early part of IR (up to EARLY_FFT_SIZE samples)
 134:EchoBridgeWithUSB.cpp ****         size_t earlyLength = (effectiveIrLength < EARLY_FFT_SIZE) ? effectiveIrLength : EARLY_FFT_S
 135:EchoBridgeWithUSB.cpp ****         memcpy(earlyIrPadded, irBuffer, earlyLength * sizeof(float));
 136:EchoBridgeWithUSB.cpp ****         
 137:EchoBridgeWithUSB.cpp ****         if (trueStereoIR) {
 138:EchoBridgeWithUSB.cpp ****             memcpy(earlyIrPaddedRight, irBufferRight, earlyLength * sizeof(float));
 139:EchoBridgeWithUSB.cpp ****         } else {
 140:EchoBridgeWithUSB.cpp ****             memcpy(earlyIrPaddedRight, irBuffer, earlyLength * sizeof(float));
 141:EchoBridgeWithUSB.cpp ****         }
 142:EchoBridgeWithUSB.cpp ****         
 143:EchoBridgeWithUSB.cpp ****         // Transform early IR to frequency domain
 144:EchoBridgeWithUSB.cpp ****         earlyFft.Direct(earlyIrPadded, earlyTimeOut);
 145:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 146:EchoBridgeWithUSB.cpp ****             earlyIrFreqReal[i] = earlyTimeOut[i];
 147:EchoBridgeWithUSB.cpp ****             earlyIrFreqImag[i] = 0.0f;
 148:EchoBridgeWithUSB.cpp ****         }
 149:EchoBridgeWithUSB.cpp ****         
 150:EchoBridgeWithUSB.cpp ****         earlyFft.Direct(earlyIrPaddedRight, earlyTimeOut);
 151:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 152:EchoBridgeWithUSB.cpp ****             earlyIrFreqRealRight[i] = earlyTimeOut[i];
 153:EchoBridgeWithUSB.cpp ****             earlyIrFreqImagRight[i] = 0.0f;
 154:EchoBridgeWithUSB.cpp ****         }
ARM GAS  /tmp/cch2Dr4w.s 			page 5


 155:EchoBridgeWithUSB.cpp ****         
 156:EchoBridgeWithUSB.cpp ****         // Prepare late partition (remaining IR samples)
 157:EchoBridgeWithUSB.cpp ****         if (effectiveIrLength > EARLY_FFT_SIZE) {
 158:EchoBridgeWithUSB.cpp ****             float lateIrPadded[LATE_FFT_SIZE];
 159:EchoBridgeWithUSB.cpp ****             float lateIrPaddedRight[LATE_FFT_SIZE];
 160:EchoBridgeWithUSB.cpp ****             
 161:EchoBridgeWithUSB.cpp ****             memset(lateIrPadded, 0, LATE_FFT_SIZE * sizeof(float));
 162:EchoBridgeWithUSB.cpp ****             memset(lateIrPaddedRight, 0, LATE_FFT_SIZE * sizeof(float));
 163:EchoBridgeWithUSB.cpp ****             
 164:EchoBridgeWithUSB.cpp ****             // Copy late part of IR (from EARLY_FFT_SIZE to end)
 165:EchoBridgeWithUSB.cpp ****             size_t lateLength = effectiveIrLength - EARLY_FFT_SIZE;
 166:EchoBridgeWithUSB.cpp ****             if (lateLength > LATE_FFT_SIZE) lateLength = LATE_FFT_SIZE;
 167:EchoBridgeWithUSB.cpp ****             
 168:EchoBridgeWithUSB.cpp ****             memcpy(lateIrPadded, irBuffer + EARLY_FFT_SIZE, lateLength * sizeof(float));
 169:EchoBridgeWithUSB.cpp ****             
 170:EchoBridgeWithUSB.cpp ****             if (trueStereoIR) {
 171:EchoBridgeWithUSB.cpp ****                 memcpy(lateIrPaddedRight, irBufferRight + EARLY_FFT_SIZE, lateLength * sizeof(float
 172:EchoBridgeWithUSB.cpp ****             } else {
 173:EchoBridgeWithUSB.cpp ****                 memcpy(lateIrPaddedRight, irBuffer + EARLY_FFT_SIZE, lateLength * sizeof(float));
 174:EchoBridgeWithUSB.cpp ****             }
 175:EchoBridgeWithUSB.cpp ****             
 176:EchoBridgeWithUSB.cpp ****             // Transform late IR to frequency domain
 177:EchoBridgeWithUSB.cpp ****             lateFft.Direct(lateIrPadded, g_lateTimeOut);
 178:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 179:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqReal[i] = g_lateTimeOut[i];
 180:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqImag[i] = 0.0f;
 181:EchoBridgeWithUSB.cpp ****             }
 182:EchoBridgeWithUSB.cpp ****             
 183:EchoBridgeWithUSB.cpp ****             lateFft.Direct(lateIrPaddedRight, g_lateTimeOut);
 184:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 185:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqRealRight[i] = g_lateTimeOut[i];
 186:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqImagRight[i] = 0.0f;
 187:EchoBridgeWithUSB.cpp ****             }
 188:EchoBridgeWithUSB.cpp ****         }
 189:EchoBridgeWithUSB.cpp ****         
 190:EchoBridgeWithUSB.cpp ****         return true;
 191:EchoBridgeWithUSB.cpp ****     }
 192:EchoBridgeWithUSB.cpp ****     
 193:EchoBridgeWithUSB.cpp **** public:
 194:EchoBridgeWithUSB.cpp ****     PartitionedConvolutionReverb() : 
 195:EchoBridgeWithUSB.cpp ****         irBuffer(nullptr),
 196:EchoBridgeWithUSB.cpp ****         irBufferRight(nullptr),
 197:EchoBridgeWithUSB.cpp ****         irLength(0),
 198:EchoBridgeWithUSB.cpp ****         earlyInputBufferPos(0),
 199:EchoBridgeWithUSB.cpp ****         lateInputBufferPos(0),
 200:EchoBridgeWithUSB.cpp ****         predelayBufferPos(0),
 201:EchoBridgeWithUSB.cpp ****         predelayInSamples(0),
 202:EchoBridgeWithUSB.cpp ****         dryWet(0.5f),
 203:EchoBridgeWithUSB.cpp ****         predelayMs(0.0f),
 204:EchoBridgeWithUSB.cpp ****         irLengthFactor(1.0f),
 205:EchoBridgeWithUSB.cpp ****         lowCutFreq(100.0f),
 206:EchoBridgeWithUSB.cpp ****         highCutFreq(10000.0f),
 207:EchoBridgeWithUSB.cpp ****         stereoWidth(1.0f),
 208:EchoBridgeWithUSB.cpp ****         sampleRate(48000.0f),
 209:EchoBridgeWithUSB.cpp ****         trueStereoIR(false)
 210:EchoBridgeWithUSB.cpp ****     {
 211:EchoBridgeWithUSB.cpp ****         // Initialize FFTs
ARM GAS  /tmp/cch2Dr4w.s 			page 6


 212:EchoBridgeWithUSB.cpp ****         earlyFft.Init();
 213:EchoBridgeWithUSB.cpp ****         lateFft.Init();
 214:EchoBridgeWithUSB.cpp ****     }
 215:EchoBridgeWithUSB.cpp ****     
 216:EchoBridgeWithUSB.cpp ****     ~PartitionedConvolutionReverb() {
 217:EchoBridgeWithUSB.cpp ****         // Free IR buffers
 218:EchoBridgeWithUSB.cpp ****         if (irBuffer) {
 219:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 220:EchoBridgeWithUSB.cpp ****             irBuffer = nullptr;
 221:EchoBridgeWithUSB.cpp ****         }
 222:EchoBridgeWithUSB.cpp ****         
 223:EchoBridgeWithUSB.cpp ****         if (irBufferRight) {
 224:EchoBridgeWithUSB.cpp ****             delete[] irBufferRight;
 225:EchoBridgeWithUSB.cpp ****             irBufferRight = nullptr;
 226:EchoBridgeWithUSB.cpp ****         }
 227:EchoBridgeWithUSB.cpp ****     }
 228:EchoBridgeWithUSB.cpp ****     
 229:EchoBridgeWithUSB.cpp ****     // Initialize with sample rate
 230:EchoBridgeWithUSB.cpp ****     void Init(float sample_rate) {
 231:EchoBridgeWithUSB.cpp ****         sampleRate = sample_rate;
 232:EchoBridgeWithUSB.cpp ****         
 233:EchoBridgeWithUSB.cpp ****         // Initialize FFTs
 234:EchoBridgeWithUSB.cpp ****         earlyFft.Init();
 235:EchoBridgeWithUSB.cpp ****         lateFft.Init();
 236:EchoBridgeWithUSB.cpp ****         
 237:EchoBridgeWithUSB.cpp ****         // Clear buffers - must be done after hardware initialization for SDRAM buffers
 238:EchoBridgeWithUSB.cpp ****         memset(earlyInputBuffer, 0, sizeof(earlyInputBuffer));
 239:EchoBridgeWithUSB.cpp ****         memset(earlyInputBufferRight, 0, sizeof(earlyInputBufferRight));
 240:EchoBridgeWithUSB.cpp ****         memset(earlyOutputBuffer, 0, sizeof(earlyOutputBuffer));
 241:EchoBridgeWithUSB.cpp ****         memset(earlyOutputBufferRight, 0, sizeof(earlyOutputBufferRight));
 242:EchoBridgeWithUSB.cpp ****         
 243:EchoBridgeWithUSB.cpp ****         memset(g_lateInputBuffer, 0, sizeof(g_lateInputBuffer));
 244:EchoBridgeWithUSB.cpp ****         memset(g_lateInputBufferRight, 0, sizeof(g_lateInputBufferRight));
 245:EchoBridgeWithUSB.cpp ****         memset(g_lateOutputBuffer, 0, sizeof(g_lateOutputBuffer));
 246:EchoBridgeWithUSB.cpp ****         memset(g_lateOutputBufferRight, 0, sizeof(g_lateOutputBufferRight));
 247:EchoBridgeWithUSB.cpp ****         
 248:EchoBridgeWithUSB.cpp ****         memset(g_predelayBuffer, 0, sizeof(g_predelayBuffer));
 249:EchoBridgeWithUSB.cpp ****         memset(g_predelayBufferRight, 0, sizeof(g_predelayBufferRight));
 250:EchoBridgeWithUSB.cpp ****         
 251:EchoBridgeWithUSB.cpp ****         // Initialize filters with sample rate
 252:EchoBridgeWithUSB.cpp ****         lowCutFilterL.Init(sampleRate);
 253:EchoBridgeWithUSB.cpp ****         highCutFilterL.Init(sampleRate);
 254:EchoBridgeWithUSB.cpp ****         lowCutFilterR.Init(sampleRate);
 255:EchoBridgeWithUSB.cpp ****         highCutFilterR.Init(sampleRate);
 256:EchoBridgeWithUSB.cpp ****         
 257:EchoBridgeWithUSB.cpp ****         // Update filter parameters
 258:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 259:EchoBridgeWithUSB.cpp ****     }
 260:EchoBridgeWithUSB.cpp ****     
 261:EchoBridgeWithUSB.cpp ****     // Load IR from buffer - now using external SDRAM for IR storage
 262:EchoBridgeWithUSB.cpp ****     bool LoadIR(float* buffer, size_t length) {
 263:EchoBridgeWithUSB.cpp ****         // Check if length is valid
 264:EchoBridgeWithUSB.cpp ****         if (length == 0 || length > MAX_IR_LENGTH) {
 265:EchoBridgeWithUSB.cpp ****             return false;
 266:EchoBridgeWithUSB.cpp ****         }
 267:EchoBridgeWithUSB.cpp ****         
 268:EchoBridgeWithUSB.cpp ****         // Free old buffer if it exists
ARM GAS  /tmp/cch2Dr4w.s 			page 7


 269:EchoBridgeWithUSB.cpp ****         if (irBuffer) {
 270:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 271:EchoBridgeWithUSB.cpp ****         }
 272:EchoBridgeWithUSB.cpp ****         
 273:EchoBridgeWithUSB.cpp ****         // Allocate new buffer in SDRAM
 274:EchoBridgeWithUSB.cpp ****         irBuffer = new float[length];
 275:EchoBridgeWithUSB.cpp ****         if (!irBuffer) {
 276:EchoBridgeWithUSB.cpp ****             return false;
 277:EchoBridgeWithUSB.cpp ****         }
 278:EchoBridgeWithUSB.cpp ****         
 279:EchoBridgeWithUSB.cpp ****         // Copy data
 280:EchoBridgeWithUSB.cpp ****         memcpy(irBuffer, buffer, length * sizeof(float));
 281:EchoBridgeWithUSB.cpp ****         irLength = length;
 282:EchoBridgeWithUSB.cpp ****         
 283:EchoBridgeWithUSB.cpp ****         // Not true stereo
 284:EchoBridgeWithUSB.cpp ****         trueStereoIR = false;
 285:EchoBridgeWithUSB.cpp ****         
 286:EchoBridgeWithUSB.cpp ****         // Update frequency domain representation
 287:EchoBridgeWithUSB.cpp ****         return UpdateIRFrequencyDomain();
 288:EchoBridgeWithUSB.cpp ****     }
 289:EchoBridgeWithUSB.cpp ****     
 290:EchoBridgeWithUSB.cpp ****     // Load stereo IR from buffers - now using external SDRAM for IR storage
 291:EchoBridgeWithUSB.cpp ****     bool LoadStereoIR(float* bufferL, float* bufferR, size_t length) {
 292:EchoBridgeWithUSB.cpp ****         // Check if length is valid
 293:EchoBridgeWithUSB.cpp ****         if (length == 0 || length > MAX_IR_LENGTH) {
 294:EchoBridgeWithUSB.cpp ****             return false;
 295:EchoBridgeWithUSB.cpp ****         }
 296:EchoBridgeWithUSB.cpp ****         
 297:EchoBridgeWithUSB.cpp ****         // Free old buffers if they exist
 298:EchoBridgeWithUSB.cpp ****         if (irBuffer) {
 299:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 300:EchoBridgeWithUSB.cpp ****         }
 301:EchoBridgeWithUSB.cpp ****         
 302:EchoBridgeWithUSB.cpp ****         if (irBufferRight) {
 303:EchoBridgeWithUSB.cpp ****             delete[] irBufferRight;
 304:EchoBridgeWithUSB.cpp ****         }
 305:EchoBridgeWithUSB.cpp ****         
 306:EchoBridgeWithUSB.cpp ****         // Allocate new buffers in SDRAM
 307:EchoBridgeWithUSB.cpp ****         irBuffer = new float[length];
 308:EchoBridgeWithUSB.cpp ****         irBufferRight = new float[length];
 309:EchoBridgeWithUSB.cpp ****         
 310:EchoBridgeWithUSB.cpp ****         if (!irBuffer || !irBufferRight) {
 311:EchoBridgeWithUSB.cpp ****             if (irBuffer) {
 312:EchoBridgeWithUSB.cpp ****                 delete[] irBuffer;
 313:EchoBridgeWithUSB.cpp ****                 irBuffer = nullptr;
 314:EchoBridgeWithUSB.cpp ****             }
 315:EchoBridgeWithUSB.cpp ****             
 316:EchoBridgeWithUSB.cpp ****             if (irBufferRight) {
 317:EchoBridgeWithUSB.cpp ****                 delete[] irBufferRight;
 318:EchoBridgeWithUSB.cpp ****                 irBufferRight = nullptr;
 319:EchoBridgeWithUSB.cpp ****             }
 320:EchoBridgeWithUSB.cpp ****             
 321:EchoBridgeWithUSB.cpp ****             return false;
 322:EchoBridgeWithUSB.cpp ****         }
 323:EchoBridgeWithUSB.cpp ****         
 324:EchoBridgeWithUSB.cpp ****         // Copy data
 325:EchoBridgeWithUSB.cpp ****         memcpy(irBuffer, bufferL, length * sizeof(float));
ARM GAS  /tmp/cch2Dr4w.s 			page 8


 326:EchoBridgeWithUSB.cpp ****         memcpy(irBufferRight, bufferR, length * sizeof(float));
 327:EchoBridgeWithUSB.cpp ****         irLength = length;
 328:EchoBridgeWithUSB.cpp ****         
 329:EchoBridgeWithUSB.cpp ****         // True stereo
 330:EchoBridgeWithUSB.cpp ****         trueStereoIR = true;
 331:EchoBridgeWithUSB.cpp ****         
 332:EchoBridgeWithUSB.cpp ****         // Update frequency domain representation
 333:EchoBridgeWithUSB.cpp ****         return UpdateIRFrequencyDomain();
 334:EchoBridgeWithUSB.cpp ****     }
 335:EchoBridgeWithUSB.cpp ****     
 336:EchoBridgeWithUSB.cpp ****     // Set dry/wet mix
 337:EchoBridgeWithUSB.cpp ****     void SetDryWet(float value) {
 338:EchoBridgeWithUSB.cpp ****         dryWet = value;
 339:EchoBridgeWithUSB.cpp ****     }
 340:EchoBridgeWithUSB.cpp ****     
 341:EchoBridgeWithUSB.cpp ****     // Set predelay in milliseconds
 342:EchoBridgeWithUSB.cpp ****     void SetPredelay(float ms) {
 343:EchoBridgeWithUSB.cpp ****         predelayMs = ms;
 344:EchoBridgeWithUSB.cpp ****         predelayInSamples = (size_t)(predelayMs * sampleRate / 1000.0f);
 345:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 346:EchoBridgeWithUSB.cpp ****             predelayInSamples = MAX_PREDELAY_SAMPLES - 1;
 347:EchoBridgeWithUSB.cpp ****         }
 348:EchoBridgeWithUSB.cpp ****     }
 349:EchoBridgeWithUSB.cpp ****     
 350:EchoBridgeWithUSB.cpp ****     // Set IR length factor
 351:EchoBridgeWithUSB.cpp ****     void SetIRLengthFactor(float factor) {
 352:EchoBridgeWithUSB.cpp ****         if (factor != irLengthFactor) {
 353:EchoBridgeWithUSB.cpp ****             irLengthFactor = factor;
 354:EchoBridgeWithUSB.cpp ****             UpdateIRFrequencyDomain();
 355:EchoBridgeWithUSB.cpp ****         }
 356:EchoBridgeWithUSB.cpp ****     }
 357:EchoBridgeWithUSB.cpp ****     
 358:EchoBridgeWithUSB.cpp ****     // Set low cut frequency
 359:EchoBridgeWithUSB.cpp ****     void SetLowCut(float freq) {
 360:EchoBridgeWithUSB.cpp ****         lowCutFreq = freq;
 361:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 362:EchoBridgeWithUSB.cpp ****     }
 363:EchoBridgeWithUSB.cpp ****     
 364:EchoBridgeWithUSB.cpp ****     // Set high cut frequency
 365:EchoBridgeWithUSB.cpp ****     void SetHighCut(float freq) {
 366:EchoBridgeWithUSB.cpp ****         highCutFreq = freq;
 367:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 368:EchoBridgeWithUSB.cpp ****     }
 369:EchoBridgeWithUSB.cpp ****     
 370:EchoBridgeWithUSB.cpp ****     // Set stereo width
 371:EchoBridgeWithUSB.cpp ****     void SetStereoWidth(float width) {
 372:EchoBridgeWithUSB.cpp ****         stereoWidth = width;
 373:EchoBridgeWithUSB.cpp ****     }
 374:EchoBridgeWithUSB.cpp ****     
 375:EchoBridgeWithUSB.cpp ****     // Update filter parameters
 376:EchoBridgeWithUSB.cpp ****     void UpdateFilters() {
 377:EchoBridgeWithUSB.cpp ****         // Low cut filter (high pass)
 378:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetFreq(lowCutFreq);
 379:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetRes(0.707f);
 380:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetDrive(1.0f);
 381:EchoBridgeWithUSB.cpp ****         
 382:EchoBridgeWithUSB.cpp ****         highCutFilterL.SetFreq(highCutFreq);
ARM GAS  /tmp/cch2Dr4w.s 			page 9


 383:EchoBridgeWithUSB.cpp ****         highCutFilterL.SetRes(0.707f);
 384:EchoBridgeWithUSB.cpp ****         highCutFilterL.SetDrive(1.0f);
 385:EchoBridgeWithUSB.cpp ****         
 386:EchoBridgeWithUSB.cpp ****         lowCutFilterR.SetFreq(lowCutFreq);
 387:EchoBridgeWithUSB.cpp ****         lowCutFilterR.SetRes(0.707f);
 388:EchoBridgeWithUSB.cpp ****         lowCutFilterR.SetDrive(1.0f);
 389:EchoBridgeWithUSB.cpp ****         
 390:EchoBridgeWithUSB.cpp ****         highCutFilterR.SetFreq(highCutFreq);
 391:EchoBridgeWithUSB.cpp ****         highCutFilterR.SetRes(0.707f);
 392:EchoBridgeWithUSB.cpp ****         highCutFilterR.SetDrive(1.0f);
 393:EchoBridgeWithUSB.cpp ****     }
 394:EchoBridgeWithUSB.cpp ****     
 395:EchoBridgeWithUSB.cpp ****     // Process a single sample
 396:EchoBridgeWithUSB.cpp ****     void Process(float inL, float inR, float* outL, float* outR) {
 397:EchoBridgeWithUSB.cpp ****         // If no IR is loaded, pass through
 398:EchoBridgeWithUSB.cpp ****         if (!irBuffer) {
 399:EchoBridgeWithUSB.cpp ****             *outL = inL;
 400:EchoBridgeWithUSB.cpp ****             *outR = inR;
 401:EchoBridgeWithUSB.cpp ****             return;
 402:EchoBridgeWithUSB.cpp ****         }
 403:EchoBridgeWithUSB.cpp ****         
 404:EchoBridgeWithUSB.cpp ****         // Store input in predelay buffer
 405:EchoBridgeWithUSB.cpp ****         g_predelayBuffer[predelayBufferPos] = inL;
 406:EchoBridgeWithUSB.cpp ****         g_predelayBufferRight[predelayBufferPos] = inR;
 407:EchoBridgeWithUSB.cpp ****         
 408:EchoBridgeWithUSB.cpp ****         // Get delayed input
 409:EchoBridgeWithUSB.cpp ****         size_t delayedPos = (predelayBufferPos + MAX_PREDELAY_SAMPLES - predelayInSamples) % MAX_PR
 410:EchoBridgeWithUSB.cpp ****         float delayedL = g_predelayBuffer[delayedPos];
 411:EchoBridgeWithUSB.cpp ****         float delayedR = g_predelayBufferRight[delayedPos];
 412:EchoBridgeWithUSB.cpp ****         
 413:EchoBridgeWithUSB.cpp ****         // Advance predelay buffer position
 414:EchoBridgeWithUSB.cpp ****         predelayBufferPos = (predelayBufferPos + 1) % MAX_PREDELAY_SAMPLES;
 415:EchoBridgeWithUSB.cpp ****         
 416:EchoBridgeWithUSB.cpp ****         // Store input in early and late buffers
 417:EchoBridgeWithUSB.cpp ****         earlyInputBuffer[earlyInputBufferPos] = delayedL;
 418:EchoBridgeWithUSB.cpp ****         earlyInputBufferRight[earlyInputBufferPos] = delayedR;
 419:EchoBridgeWithUSB.cpp ****         
 420:EchoBridgeWithUSB.cpp ****         g_lateInputBuffer[lateInputBufferPos] = delayedL;
 421:EchoBridgeWithUSB.cpp ****         g_lateInputBufferRight[lateInputBufferPos] = delayedR;
 422:EchoBridgeWithUSB.cpp ****         
 423:EchoBridgeWithUSB.cpp ****         // Process early partition (low latency)
 424:EchoBridgeWithUSB.cpp ****         earlyInputBufferPos++;
 425:EchoBridgeWithUSB.cpp ****         if (earlyInputBufferPos >= EARLY_FFT_SIZE) {
 426:EchoBridgeWithUSB.cpp ****             // Reset input buffer position
 427:EchoBridgeWithUSB.cpp ****             earlyInputBufferPos = 0;
 428:EchoBridgeWithUSB.cpp ****             
 429:EchoBridgeWithUSB.cpp ****             // Process left channel
 430:EchoBridgeWithUSB.cpp ****             memcpy(earlyTimeIn, earlyInputBuffer, EARLY_FFT_SIZE * sizeof(float));
 431:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 432:EchoBridgeWithUSB.cpp ****             
 433:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 434:EchoBridgeWithUSB.cpp ****                 earlyFreqReal[i] = earlyTimeOut[i];
 435:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = 0.0f;
 436:EchoBridgeWithUSB.cpp ****             }
 437:EchoBridgeWithUSB.cpp ****             
 438:EchoBridgeWithUSB.cpp ****             // Complex multiplication with IR
 439:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
ARM GAS  /tmp/cch2Dr4w.s 			page 10


 440:EchoBridgeWithUSB.cpp ****                 float a = earlyFreqReal[i];
 441:EchoBridgeWithUSB.cpp ****                 float b = earlyFreqImag[i];
 442:EchoBridgeWithUSB.cpp ****                 float c = earlyIrFreqReal[i];
 443:EchoBridgeWithUSB.cpp ****                 float d = earlyIrFreqImag[i];
 444:EchoBridgeWithUSB.cpp ****                 
 445:EchoBridgeWithUSB.cpp ****                 earlyFreqReal[i] = a*c - b*d;
 446:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 447:EchoBridgeWithUSB.cpp ****             }
 448:EchoBridgeWithUSB.cpp ****             
 449:EchoBridgeWithUSB.cpp ****             // Transform back to time domain
 450:EchoBridgeWithUSB.cpp ****             earlyFft.Inverse(earlyFreqReal, earlyFreqImag, EARLY_FFT_SIZE);
 451:EchoBridgeWithUSB.cpp ****             
 452:EchoBridgeWithUSB.cpp ****             // Process right channel
 453:EchoBridgeWithUSB.cpp ****             memcpy(earlyTimeIn, earlyInputBufferRight, EARLY_FFT_SIZE * sizeof(float));
 454:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 455:EchoBridgeWithUSB.cpp ****             
 456:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 457:EchoBridgeWithUSB.cpp ****                 earlyFreqReal[i] = earlyTimeOut[i];
 458:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = 0.0f;
 459:EchoBridgeWithUSB.cpp ****             }
 460:EchoBridgeWithUSB.cpp ****             
 461:EchoBridgeWithUSB.cpp ****             // Complex multiplication with IR
 462:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 463:EchoBridgeWithUSB.cpp ****                 float a = earlyFreqReal[i];
 464:EchoBridgeWithUSB.cpp ****                 float b = earlyFreqImag[i];
 465:EchoBridgeWithUSB.cpp ****                 float c = earlyIrFreqRealRight[i];
 466:EchoBridgeWithUSB.cpp ****                 float d = earlyIrFreqImagRight[i];
 467:EchoBridgeWithUSB.cpp ****                 
 468:EchoBridgeWithUSB.cpp ****                 earlyFreqReal[i] = a*c - b*d;
 469:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 470:EchoBridgeWithUSB.cpp ****             }
 471:EchoBridgeWithUSB.cpp ****             
 472:EchoBridgeWithUSB.cpp ****             // Transform back to time domain
 473:EchoBridgeWithUSB.cpp ****             earlyFft.Inverse(earlyFreqReal, earlyFreqImag, EARLY_FFT_SIZE);
 474:EchoBridgeWithUSB.cpp ****             
 475:EchoBridgeWithUSB.cpp ****             // Overlap-add
 476:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 477:EchoBridgeWithUSB.cpp ****                 earlyOutputBuffer[i] = earlyOutputBuffer[i + EARLY_FFT_SIZE] + earlyFreqReal[i];
 478:EchoBridgeWithUSB.cpp ****                 earlyOutputBufferRight[i] = earlyOutputBufferRight[i + EARLY_FFT_SIZE] + earlyFreqR
 479:EchoBridgeWithUSB.cpp ****             }
 480:EchoBridgeWithUSB.cpp ****             
 481:EchoBridgeWithUSB.cpp ****             // Clear the second half of the output buffer
 482:EchoBridgeWithUSB.cpp ****             memset(earlyOutputBuffer + EARLY_FFT_SIZE, 0, EARLY_FFT_SIZE * sizeof(float));
 483:EchoBridgeWithUSB.cpp ****             memset(earlyOutputBufferRight + EARLY_FFT_SIZE, 0, EARLY_FFT_SIZE * sizeof(float));
 484:EchoBridgeWithUSB.cpp ****         }
 485:EchoBridgeWithUSB.cpp ****         
 486:EchoBridgeWithUSB.cpp ****         // Process late partition (efficiency)
 487:EchoBridgeWithUSB.cpp ****         lateInputBufferPos++;
 488:EchoBridgeWithUSB.cpp ****         if (lateInputBufferPos >= LATE_FFT_SIZE) {
 489:EchoBridgeWithUSB.cpp ****             // Reset input buffer position
 490:EchoBridgeWithUSB.cpp ****             lateInputBufferPos = 0;
 491:EchoBridgeWithUSB.cpp ****             
 492:EchoBridgeWithUSB.cpp ****             // Process left channel
 493:EchoBridgeWithUSB.cpp ****             memcpy(g_lateTimeIn, g_lateInputBuffer, LATE_FFT_SIZE * sizeof(float));
 494:EchoBridgeWithUSB.cpp ****             lateFft.Direct(g_lateTimeIn, g_lateTimeOut);
 495:EchoBridgeWithUSB.cpp ****             
 496:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
ARM GAS  /tmp/cch2Dr4w.s 			page 11


 497:EchoBridgeWithUSB.cpp ****                 g_lateFreqReal[i] = g_lateTimeOut[i];
 498:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = 0.0f;
 499:EchoBridgeWithUSB.cpp ****             }
 500:EchoBridgeWithUSB.cpp ****             
 501:EchoBridgeWithUSB.cpp ****             // Complex multiplication with IR
 502:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 503:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 504:EchoBridgeWithUSB.cpp ****                 float b = g_lateFreqImag[i];
 505:EchoBridgeWithUSB.cpp ****                 float c = g_lateIrFreqReal[i];
 506:EchoBridgeWithUSB.cpp ****                 float d = g_lateIrFreqImag[i];
 507:EchoBridgeWithUSB.cpp ****                 
 508:EchoBridgeWithUSB.cpp ****                 g_lateFreqReal[i] = a*c - b*d;
 509:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 510:EchoBridgeWithUSB.cpp ****             }
 511:EchoBridgeWithUSB.cpp ****             
 512:EchoBridgeWithUSB.cpp ****             // Transform back to time domain
 513:EchoBridgeWithUSB.cpp ****             lateFft.Inverse(g_lateFreqReal, g_lateFreqImag, LATE_FFT_SIZE);
 514:EchoBridgeWithUSB.cpp ****             
 515:EchoBridgeWithUSB.cpp ****             // Process right channel
 516:EchoBridgeWithUSB.cpp ****             memcpy(g_lateTimeIn, g_lateInputBufferRight, LATE_FFT_SIZE * sizeof(float));
 517:EchoBridgeWithUSB.cpp ****             lateFft.Direct(g_lateTimeIn, g_lateTimeOut);
 518:EchoBridgeWithUSB.cpp ****             
 519:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 520:EchoBridgeWithUSB.cpp ****                 g_lateFreqReal[i] = g_lateTimeOut[i];
 521:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = 0.0f;
 522:EchoBridgeWithUSB.cpp ****             }
 523:EchoBridgeWithUSB.cpp ****             
 524:EchoBridgeWithUSB.cpp ****             // Complex multiplication with IR
 525:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 526:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 527:EchoBridgeWithUSB.cpp ****                 float b = g_lateFreqImag[i];
 528:EchoBridgeWithUSB.cpp ****                 float c = g_lateIrFreqRealRight[i];
 529:EchoBridgeWithUSB.cpp ****                 float d = g_lateIrFreqImagRight[i];
 530:EchoBridgeWithUSB.cpp ****                 
 531:EchoBridgeWithUSB.cpp ****                 g_lateFreqReal[i] = a*c - b*d;
 532:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 533:EchoBridgeWithUSB.cpp ****             }
 534:EchoBridgeWithUSB.cpp ****             
 535:EchoBridgeWithUSB.cpp ****             // Transform back to time domain
 536:EchoBridgeWithUSB.cpp ****             lateFft.Inverse(g_lateFreqReal, g_lateFreqImag, LATE_FFT_SIZE);
 537:EchoBridgeWithUSB.cpp ****             
 538:EchoBridgeWithUSB.cpp ****             // Overlap-add
 539:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 540:EchoBridgeWithUSB.cpp ****                 g_lateOutputBuffer[i] = g_lateOutputBuffer[i + LATE_FFT_SIZE] + g_lateFreqReal[i];
 541:EchoBridgeWithUSB.cpp ****                 g_lateOutputBufferRight[i] = g_lateOutputBufferRight[i + LATE_FFT_SIZE] + g_lateFre
 542:EchoBridgeWithUSB.cpp ****             }
 543:EchoBridgeWithUSB.cpp ****             
 544:EchoBridgeWithUSB.cpp ****             // Clear the second half of the output buffer
 545:EchoBridgeWithUSB.cpp ****             memset(g_lateOutputBuffer + LATE_FFT_SIZE, 0, LATE_FFT_SIZE * sizeof(float));
 546:EchoBridgeWithUSB.cpp ****             memset(g_lateOutputBufferRight + LATE_FFT_SIZE, 0, LATE_FFT_SIZE * sizeof(float));
 547:EchoBridgeWithUSB.cpp ****         }
 548:EchoBridgeWithUSB.cpp ****         
 549:EchoBridgeWithUSB.cpp ****         // Get output from early and late partitions
 550:EchoBridgeWithUSB.cpp ****         float wetL = earlyOutputBuffer[0] + g_lateOutputBuffer[0];
 551:EchoBridgeWithUSB.cpp ****         float wetR = earlyOutputBufferRight[0] + g_lateOutputBufferRight[0];
 552:EchoBridgeWithUSB.cpp ****         
 553:EchoBridgeWithUSB.cpp ****         // Apply filters
ARM GAS  /tmp/cch2Dr4w.s 			page 12


 554:EchoBridgeWithUSB.cpp ****         lowCutFilterL.Process(wetL);
 555:EchoBridgeWithUSB.cpp ****         float filteredL = lowCutFilterL.High();
 556:EchoBridgeWithUSB.cpp ****         highCutFilterL.Process(filteredL);
 557:EchoBridgeWithUSB.cpp ****         filteredL = highCutFilterL.Low();
 558:EchoBridgeWithUSB.cpp ****         
 559:EchoBridgeWithUSB.cpp ****         lowCutFilterR.Process(wetR);
 560:EchoBridgeWithUSB.cpp ****         float filteredR = lowCutFilterR.High();
 561:EchoBridgeWithUSB.cpp ****         highCutFilterR.Process(filteredR);
 562:EchoBridgeWithUSB.cpp ****         filteredR = highCutFilterR.Low();
 563:EchoBridgeWithUSB.cpp ****         
 564:EchoBridgeWithUSB.cpp ****         // Apply stereo width
 565:EchoBridgeWithUSB.cpp ****         if (stereoWidth != 1.0f) {
 566:EchoBridgeWithUSB.cpp ****             float mid = (filteredL + filteredR) * 0.5f;
 567:EchoBridgeWithUSB.cpp ****             float side = (filteredL - filteredR) * 0.5f * stereoWidth;
 568:EchoBridgeWithUSB.cpp ****             filteredL = mid + side;
 569:EchoBridgeWithUSB.cpp ****             filteredR = mid - side;
 570:EchoBridgeWithUSB.cpp ****         }
 571:EchoBridgeWithUSB.cpp ****         
 572:EchoBridgeWithUSB.cpp ****         // Mix dry and wet signals
 573:EchoBridgeWithUSB.cpp ****         *outL = inL * (1.0f - dryWet) + filteredL * dryWet;
 574:EchoBridgeWithUSB.cpp ****         *outR = inR * (1.0f - dryWet) + filteredR * dryWet;
 575:EchoBridgeWithUSB.cpp ****         
 576:EchoBridgeWithUSB.cpp ****         // Shift output buffers
 577:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE - 1; i++) {
 578:EchoBridgeWithUSB.cpp ****             earlyOutputBuffer[i] = earlyOutputBuffer[i + 1];
 579:EchoBridgeWithUSB.cpp ****             earlyOutputBufferRight[i] = earlyOutputBufferRight[i + 1];
 580:EchoBridgeWithUSB.cpp ****         }
 581:EchoBridgeWithUSB.cpp ****         
 582:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < LATE_FFT_SIZE - 1; i++) {
 583:EchoBridgeWithUSB.cpp ****             g_lateOutputBuffer[i] = g_lateOutputBuffer[i + 1];
 584:EchoBridgeWithUSB.cpp ****             g_lateOutputBufferRight[i] = g_lateOutputBufferRight[i + 1];
 585:EchoBridgeWithUSB.cpp ****         }
 586:EchoBridgeWithUSB.cpp ****     }
 587:EchoBridgeWithUSB.cpp **** };
 588:EchoBridgeWithUSB.cpp **** 
 589:EchoBridgeWithUSB.cpp **** // Create the reverb processor
 590:EchoBridgeWithUSB.cpp **** PartitionedConvolutionReverb reverb;
 591:EchoBridgeWithUSB.cpp **** 
 592:EchoBridgeWithUSB.cpp **** // Audio callback
 593:EchoBridgeWithUSB.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size) {
 594:EchoBridgeWithUSB.cpp ****     // Process each sample
 595:EchoBridgeWithUSB.cpp ****     for (size_t i = 0; i < size; i++) {
 596:EchoBridgeWithUSB.cpp ****         // Get input samples
 597:EchoBridgeWithUSB.cpp ****         float inL = in[0][i];
 598:EchoBridgeWithUSB.cpp ****         float inR = in[1][i];
 599:EchoBridgeWithUSB.cpp ****         
 600:EchoBridgeWithUSB.cpp ****         // Detect stereo input
 601:EchoBridgeWithUSB.cpp ****         if (!isStereoInput && fabs(inL - inR) > 0.01f) {
 602:EchoBridgeWithUSB.cpp ****             isStereoInput = true;
 603:EchoBridgeWithUSB.cpp ****             // No LED indicator for stereo mode in Hothouse pedal (only 2 LEDs available)
 604:EchoBridgeWithUSB.cpp ****         }
 605:EchoBridgeWithUSB.cpp ****         
 606:EchoBridgeWithUSB.cpp ****         // Process
 607:EchoBridgeWithUSB.cpp ****         float outL, outR;
 608:EchoBridgeWithUSB.cpp ****         
 609:EchoBridgeWithUSB.cpp ****         if (bypass) {
 610:EchoBridgeWithUSB.cpp ****             // Bypass mode
ARM GAS  /tmp/cch2Dr4w.s 			page 13


 611:EchoBridgeWithUSB.cpp ****             outL = inL;
 612:EchoBridgeWithUSB.cpp ****             outR = inR;
 613:EchoBridgeWithUSB.cpp ****         } else if (freeze) {
 614:EchoBridgeWithUSB.cpp ****             // Freeze mode - only output reverb tail
 615:EchoBridgeWithUSB.cpp ****             reverb.Process(0.0f, 0.0f, &outL, &outR);
 616:EchoBridgeWithUSB.cpp ****         } else {
 617:EchoBridgeWithUSB.cpp ****             // Normal mode
 618:EchoBridgeWithUSB.cpp ****             reverb.Process(inL, inR, &outL, &outR);
 619:EchoBridgeWithUSB.cpp ****         }
 620:EchoBridgeWithUSB.cpp ****         
 621:EchoBridgeWithUSB.cpp ****         // Output
 622:EchoBridgeWithUSB.cpp ****         out[0][i] = outL;
 623:EchoBridgeWithUSB.cpp ****         out[1][i] = outR;
 624:EchoBridgeWithUSB.cpp ****     }
 625:EchoBridgeWithUSB.cpp **** }
 626:EchoBridgeWithUSB.cpp **** 
 627:EchoBridgeWithUSB.cpp **** // Handle footswitch 1 (freeze) - SWAPPED from original implementation
 628:EchoBridgeWithUSB.cpp **** void HandleFootswitch1(bool pressed) {
 629:EchoBridgeWithUSB.cpp ****     if (pressed) {
 630:EchoBridgeWithUSB.cpp ****         freeze = !freeze;
 631:EchoBridgeWithUSB.cpp ****         led1.Set(freeze ? 1.0f : 0.0f);
 632:EchoBridgeWithUSB.cpp ****     }
 633:EchoBridgeWithUSB.cpp **** }
 634:EchoBridgeWithUSB.cpp **** 
 635:EchoBridgeWithUSB.cpp **** // Handle footswitch 2 (bypass) - SWAPPED from original implementation
 636:EchoBridgeWithUSB.cpp **** void HandleFootswitch2(bool pressed) {
 637:EchoBridgeWithUSB.cpp ****     if (pressed) {
 638:EchoBridgeWithUSB.cpp ****         bypass = !bypass;
 639:EchoBridgeWithUSB.cpp ****         led2.Set(bypass ? 0.0f : 1.0f);
 640:EchoBridgeWithUSB.cpp ****     }
 641:EchoBridgeWithUSB.cpp **** }
 642:EchoBridgeWithUSB.cpp **** 
 643:EchoBridgeWithUSB.cpp **** // Handle footswitch 2 long press (reset parameters) - SWAPPED from original implementation
 644:EchoBridgeWithUSB.cpp **** void HandleFootswitch2LongPress() {
 645:EchoBridgeWithUSB.cpp ****     // Reset parameters
 646:EchoBridgeWithUSB.cpp ****     reverb.SetDryWet(0.5f);
 647:EchoBridgeWithUSB.cpp ****     reverb.SetPredelay(0.0f);
 648:EchoBridgeWithUSB.cpp ****     reverb.SetIRLengthFactor(1.0f);
 649:EchoBridgeWithUSB.cpp ****     reverb.SetLowCut(100.0f);
 650:EchoBridgeWithUSB.cpp ****     reverb.SetHighCut(10000.0f);
 651:EchoBridgeWithUSB.cpp ****     reverb.SetStereoWidth(1.0f);
 652:EchoBridgeWithUSB.cpp **** }
 653:EchoBridgeWithUSB.cpp **** 
 654:EchoBridgeWithUSB.cpp **** // Handle footswitch 1 long press (load IR from USB) - SWAPPED from original implementation
 655:EchoBridgeWithUSB.cpp **** void HandleFootswitch1LongPress() {
 656:EchoBridgeWithUSB.cpp ****     // Set LED1 to blink during IR loading (temporary indicator)
 657:EchoBridgeWithUSB.cpp ****     led1.Set(1.0f);
 658:EchoBridgeWithUSB.cpp ****     
 659:EchoBridgeWithUSB.cpp ****     // Try to load IR from USB
 660:EchoBridgeWithUSB.cpp ****     if (irLoader.LoadIR()) {
 661:EchoBridgeWithUSB.cpp ****         irLoaded = true;
 662:EchoBridgeWithUSB.cpp ****         
 663:EchoBridgeWithUSB.cpp ****         // Blink LED1 rapidly a few times to indicate success
 664:EchoBridgeWithUSB.cpp ****         for (int i = 0; i < 5; i++) {
 665:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 666:EchoBridgeWithUSB.cpp ****             System::Delay(50);
 667:EchoBridgeWithUSB.cpp ****             led1.Set(1.0f);
ARM GAS  /tmp/cch2Dr4w.s 			page 14


 668:EchoBridgeWithUSB.cpp ****             System::Delay(50);
 669:EchoBridgeWithUSB.cpp ****         }
 670:EchoBridgeWithUSB.cpp ****     } else {
 671:EchoBridgeWithUSB.cpp ****         irLoaded = false;
 672:EchoBridgeWithUSB.cpp ****         
 673:EchoBridgeWithUSB.cpp ****         // Blink LED1 slowly a few times to indicate failure
 674:EchoBridgeWithUSB.cpp ****         for (int i = 0; i < 3; i++) {
 675:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 676:EchoBridgeWithUSB.cpp ****             System::Delay(200);
 677:EchoBridgeWithUSB.cpp ****             led1.Set(1.0f);
 678:EchoBridgeWithUSB.cpp ****             System::Delay(200);
 679:EchoBridgeWithUSB.cpp ****         }
 680:EchoBridgeWithUSB.cpp ****     }
 681:EchoBridgeWithUSB.cpp ****     
 682:EchoBridgeWithUSB.cpp ****     // Return LED1 to showing freeze status
 683:EchoBridgeWithUSB.cpp ****     led1.Set(freeze ? 1.0f : 0.0f);
 684:EchoBridgeWithUSB.cpp **** }
 685:EchoBridgeWithUSB.cpp **** 
 686:EchoBridgeWithUSB.cpp **** // Handle knob 1 (dry/wet)
 687:EchoBridgeWithUSB.cpp **** void HandleKnob1(float value) {
  53              		.loc 2 687 31 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 688:EchoBridgeWithUSB.cpp ****     reverb.SetDryWet(value);
  58              		.loc 2 688 5 view .LVU3
  59              	.LBB271:
  60              	.LBI271:
 337:EchoBridgeWithUSB.cpp ****         dryWet = value;
  61              		.loc 2 337 10 view .LVU4
  62              	.LBB272:
 338:EchoBridgeWithUSB.cpp ****     }
  63              		.loc 2 338 9 view .LVU5
 338:EchoBridgeWithUSB.cpp ****     }
  64              		.loc 2 338 16 is_stmt 0 view .LVU6
  65 0000 014B     		ldr	r3, .L3
  66 0002 83ED870A 		vstr.32	s0, [r3, #540]
  67              	.LVL2:
 338:EchoBridgeWithUSB.cpp ****     }
  68              		.loc 2 338 16 view .LVU7
  69              	.LBE272:
  70              	.LBE271:
 689:EchoBridgeWithUSB.cpp **** }
  71              		.loc 2 689 1 view .LVU8
  72 0006 7047     		bx	lr
  73              	.L4:
  74              		.align	2
  75              	.L3:
  76 0008 00300000 		.word	reverb+12288
  77              		.cfi_endproc
  78              	.LFE5524:
  80              		.section	.text._Z11HandleKnob2f,"ax",%progbits
  81              		.align	1
  82              		.global	_Z11HandleKnob2f
  83              		.syntax unified
  84              		.thumb
ARM GAS  /tmp/cch2Dr4w.s 			page 15


  85              		.thumb_func
  86              		.fpu fpv5-d16
  88              	_Z11HandleKnob2f:
  89              	.LVL3:
  90              	.LFB5525:
 690:EchoBridgeWithUSB.cpp **** 
 691:EchoBridgeWithUSB.cpp **** // Handle knob 2 (predelay)
 692:EchoBridgeWithUSB.cpp **** void HandleKnob2(float value) {
  91              		.loc 2 692 31 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
 693:EchoBridgeWithUSB.cpp ****     // Map 0-1 to 0-500ms
 694:EchoBridgeWithUSB.cpp ****     float predelayMs = value * 500.0f;
  96              		.loc 2 694 5 view .LVU10
  97              		.loc 2 694 11 is_stmt 0 view .LVU11
  98 0000 DFED0D7A 		vldr.32	s15, .L8
  99              	.LBB275:
 100              	.LBB276:
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 101              		.loc 2 344 27 view .LVU12
 102 0004 45F6BF52 		movw	r2, #23999
 343:EchoBridgeWithUSB.cpp ****         predelayInSamples = (size_t)(predelayMs * sampleRate / 1000.0f);
 103              		.loc 2 343 20 view .LVU13
 104 0008 0C4B     		ldr	r3, .L8+4
 105              	.LBE276:
 106              	.LBE275:
 107              		.loc 2 694 11 view .LVU14
 108 000a 20EE270A 		vmul.f32	s0, s0, s15
 109              	.LVL4:
 695:EchoBridgeWithUSB.cpp ****     reverb.SetPredelay(predelayMs);
 110              		.loc 2 695 5 is_stmt 1 view .LVU15
 111              	.LBB278:
 112              	.LBI275:
 342:EchoBridgeWithUSB.cpp ****         predelayMs = ms;
 113              		.loc 2 342 10 view .LVU16
 114              	.LBB277:
 343:EchoBridgeWithUSB.cpp ****         predelayInSamples = (size_t)(predelayMs * sampleRate / 1000.0f);
 115              		.loc 2 343 9 view .LVU17
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 116              		.loc 2 344 62 is_stmt 0 view .LVU18
 117 000e 9FED0C7A 		vldr.32	s14, .L8+8
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 118              		.loc 2 344 49 view .LVU19
 119 0012 D3ED8D7A 		vldr.32	s15, [r3, #564]
 343:EchoBridgeWithUSB.cpp ****         predelayInSamples = (size_t)(predelayMs * sampleRate / 1000.0f);
 120              		.loc 2 343 20 view .LVU20
 121 0016 83ED880A 		vstr.32	s0, [r3, #544]
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 122              		.loc 2 344 9 is_stmt 1 view .LVU21
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 123              		.loc 2 344 49 is_stmt 0 view .LVU22
 124 001a 20EE270A 		vmul.f32	s0, s0, s15
 125              	.LVL5:
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 126              		.loc 2 344 62 view .LVU23
ARM GAS  /tmp/cch2Dr4w.s 			page 16


 127 001e C0EE077A 		vdiv.f32	s15, s0, s14
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 128              		.loc 2 344 29 view .LVU24
 129 0022 FCEEE77A 		vcvt.u32.f32	s15, s15
 345:EchoBridgeWithUSB.cpp ****             predelayInSamples = MAX_PREDELAY_SAMPLES - 1;
 130              		.loc 2 345 9 is_stmt 1 view .LVU25
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 131              		.loc 2 344 27 is_stmt 0 view .LVU26
 132 0026 17EE901A 		vmov	r1, s15	@ int
 133 002a 9142     		cmp	r1, r2
 134 002c 94BF     		ite	ls
 135 002e C3F81812 		strls	r1, [r3, #536]
 136 0032 C3F81822 		strhi	r2, [r3, #536]
 137              	.LBE277:
 138              	.LBE278:
 696:EchoBridgeWithUSB.cpp **** }
 139              		.loc 2 696 1 view .LVU27
 140 0036 7047     		bx	lr
 141              	.L9:
 142              		.align	2
 143              	.L8:
 144 0038 0000FA43 		.word	1140457472
 145 003c 00300000 		.word	reverb+12288
 146 0040 00007A44 		.word	1148846080
 147              		.cfi_endproc
 148              	.LFE5525:
 150              		.section	.text._Z11HandleKnob5f,"ax",%progbits
 151              		.align	1
 152              		.global	_Z11HandleKnob5f
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu fpv5-d16
 158              	_Z11HandleKnob5f:
 159              	.LVL6:
 160              	.LFB5528:
 697:EchoBridgeWithUSB.cpp **** 
 698:EchoBridgeWithUSB.cpp **** // Handle knob 3 (IR length)
 699:EchoBridgeWithUSB.cpp **** void HandleKnob3(float value) {
 700:EchoBridgeWithUSB.cpp ****     reverb.SetIRLengthFactor(value);
 701:EchoBridgeWithUSB.cpp **** }
 702:EchoBridgeWithUSB.cpp **** 
 703:EchoBridgeWithUSB.cpp **** // Handle knob 4 (filter)
 704:EchoBridgeWithUSB.cpp **** void HandleKnob4(float value) {
 705:EchoBridgeWithUSB.cpp ****     if (value < 0.5f) {
 706:EchoBridgeWithUSB.cpp ****         // First half: low cut (20Hz - 1000Hz)
 707:EchoBridgeWithUSB.cpp ****         float lowCutFreq = 20.0f + value * 2.0f * 980.0f;
 708:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(lowCutFreq);
 709:EchoBridgeWithUSB.cpp ****         reverb.SetHighCut(20000.0f);
 710:EchoBridgeWithUSB.cpp ****     } else {
 711:EchoBridgeWithUSB.cpp ****         // Second half: high cut (20000Hz - 1000Hz)
 712:EchoBridgeWithUSB.cpp ****         float highCutFreq = 20000.0f - (value - 0.5f) * 2.0f * 19000.0f;
 713:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(20.0f);
 714:EchoBridgeWithUSB.cpp ****         reverb.SetHighCut(highCutFreq);
 715:EchoBridgeWithUSB.cpp ****     }
 716:EchoBridgeWithUSB.cpp **** }
 717:EchoBridgeWithUSB.cpp **** 
ARM GAS  /tmp/cch2Dr4w.s 			page 17


 718:EchoBridgeWithUSB.cpp **** // Handle knob 5 (stereo width)
 719:EchoBridgeWithUSB.cpp **** void HandleKnob5(float value) {
 161              		.loc 2 719 31 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 720:EchoBridgeWithUSB.cpp ****     // Map 0-1 to 0-2
 721:EchoBridgeWithUSB.cpp ****     float stereoWidth = value * 2.0f;
 166              		.loc 2 721 5 view .LVU29
 722:EchoBridgeWithUSB.cpp ****     reverb.SetStereoWidth(stereoWidth);
 167              		.loc 2 722 5 view .LVU30
 168              	.LBB279:
 169              	.LBI279:
 371:EchoBridgeWithUSB.cpp ****         stereoWidth = width;
 170              		.loc 2 371 10 view .LVU31
 171              	.LBB280:
 372:EchoBridgeWithUSB.cpp ****     }
 172              		.loc 2 372 9 view .LVU32
 173              	.LBE280:
 174              	.LBE279:
 721:EchoBridgeWithUSB.cpp ****     reverb.SetStereoWidth(stereoWidth);
 175              		.loc 2 721 11 is_stmt 0 view .LVU33
 176 0000 30EE000A 		vadd.f32	s0, s0, s0
 177              	.LVL7:
 178              	.LBB282:
 179              	.LBB281:
 372:EchoBridgeWithUSB.cpp ****     }
 180              		.loc 2 372 21 view .LVU34
 181 0004 014B     		ldr	r3, .L11
 182 0006 83ED8C0A 		vstr.32	s0, [r3, #560]
 183              	.LVL8:
 372:EchoBridgeWithUSB.cpp ****     }
 184              		.loc 2 372 21 view .LVU35
 185              	.LBE281:
 186              	.LBE282:
 723:EchoBridgeWithUSB.cpp **** }
 187              		.loc 2 723 1 view .LVU36
 188 000a 7047     		bx	lr
 189              	.L12:
 190              		.align	2
 191              	.L11:
 192 000c 00300000 		.word	reverb+12288
 193              		.cfi_endproc
 194              	.LFE5528:
 196              		.section	.text._Z11HandleKnob6f,"ax",%progbits
 197              		.align	1
 198              		.global	_Z11HandleKnob6f
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv5-d16
 204              	_Z11HandleKnob6f:
 205              	.LVL9:
 206              	.LFB5529:
 724:EchoBridgeWithUSB.cpp **** 
 725:EchoBridgeWithUSB.cpp **** // Handle knob 6 (custom parameter)
ARM GAS  /tmp/cch2Dr4w.s 			page 18


 726:EchoBridgeWithUSB.cpp **** void HandleKnob6(float value) {
 207              		.loc 2 726 31 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 727:EchoBridgeWithUSB.cpp ****     // Custom parameter - not used yet
 728:EchoBridgeWithUSB.cpp **** }
 212              		.loc 2 728 1 is_stmt 0 view .LVU38
 213 0000 7047     		bx	lr
 214              		.cfi_endproc
 215              	.LFE5529:
 217              		.section	.text._ZN16clevelandmusicco8HothouseD2Ev,"axG",%progbits,_ZN16clevelandmusicco8HothouseD5
 218              		.align	1
 219              		.weak	_ZN16clevelandmusicco8HothouseD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN16clevelandmusicco8HothouseD2Ev:
 226              	.LVL10:
 227              	.LFB6140:
 228              		.file 3 "hothouse.h"
   1:hothouse.h    **** #pragma once
   2:hothouse.h    **** 
   3:hothouse.h    **** #include "daisy_seed.h"
   4:hothouse.h    **** #include "dev/oled_ssd130x.h"
   5:hothouse.h    **** #include "hid/encoder.h"
   6:hothouse.h    **** #include "hid/switch.h"
   7:hothouse.h    **** 
   8:hothouse.h    **** namespace clevelandmusicco {
   9:hothouse.h    **** 
  10:hothouse.h    **** class Hothouse {
 229              		.loc 3 10 7 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LBB283:
 235              	.LBI283:
 236              		.file 4 "/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** #pragma once
   2:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** 
   5:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** 
   7:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** 
  10:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** namespace daisy
  11:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** {
  12:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** /**
  13:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** 
  16:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h ****    @ingroup boards
ARM GAS  /tmp/cch2Dr4w.s 			page 19


  17:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** */
  18:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** class DaisySeed
  19:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h **** {
  20:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h ****   public:
  21:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 237              		.loc 4 22 5 view .LVU40
 238              	.LBB284:
 239              	.LBI284:
 240              		.file 5 "/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** 
   4:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** 
   6:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** #include <cstdint>
   7:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** 
   9:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** namespace daisy
  10:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** {
  11:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****  **
  15:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****  ** @author shensley
  16:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****  ** @ingroup system
  17:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****  */
  18:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** class System
  19:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** {
  20:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****   public:
  21:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     struct Config
  23:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     {
  24:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         {
  27:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         };
  30:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** 
  31:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****          ** */
  35:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         void Defaults()
  36:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         {
  37:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             use_icache  = true;
  40:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         }
  42:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** 
  43:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****          ** */
  47:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         void Boost()
ARM GAS  /tmp/cch2Dr4w.s 			page 20


  48:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         {
  49:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             use_icache  = true;
  52:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         }
  54:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** 
  55:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         bool       use_icache;
  58:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     };
  60:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** 
  61:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     {
  64:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         ITCMRAM,
  66:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         DTCMRAM,
  67:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         SRAM_D1,
  68:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         SRAM_D2,
  69:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         SRAM_D3,
  70:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         SDRAM,
  71:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         QSPI,
  72:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     };
  74:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** 
  75:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     struct BootInfo
  77:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     {
  78:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         {
  80:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         } status;
  85:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         uint32_t data;
  86:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         {
  88:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****             LAST
  93:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****         } version;
  94:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     };
  95:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h **** 
  96:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     System() {}
  97:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     ~System() {}
 241              		.loc 5 97 5 view .LVU41
 242              		.loc 5 97 5 is_stmt 0 view .LVU42
 243              	.LBE284:
 244              	.LBB285:
 245              	.LBI285:
 246              		.file 6 "/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** #pragma once
ARM GAS  /tmp/cch2Dr4w.s 			page 21


   2:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** 
   7:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** namespace daisy
   8:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     @{
  10:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** */
  11:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** 
  12:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** {
  13:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** /** 
  14:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     @date December 2019
  17:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** */
  18:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** class UsbHandle
  19:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** {
  20:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****   public:
  21:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     enum class Result
  23:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     {
  24:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****         OK,
  25:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****         ERR,
  26:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     };
  27:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** 
  28:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     {
  31:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     };
  35:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** 
  36:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** 
  37:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** 
  40:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** 
  42:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
 247              		.loc 6 42 5 is_stmt 1 view .LVU43
 248              		.loc 6 42 5 is_stmt 0 view .LVU44
 249              	.LBE285:
 250              	.LBB286:
 251              	.LBI286:
 252              		.file 7 "/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** #pragma once
   2:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** #include <stdint.h>
   5:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
   9:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
ARM GAS  /tmp/cch2Dr4w.s 			page 22


  11:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** namespace daisy
  12:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** {
  13:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     @{
  15:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** */
  16:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
  17:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** */
  21:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
  22:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****  *           one channel.
  26:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****  *           inputs connected.
  30:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** */
  31:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** {
  33:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     enum MuxPin
  35:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     {
  36:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     };
  41:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
  42:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     {
  45:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     };
  54:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
  55:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****      */
  59:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
  61:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     /** 
  62:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     \param adc_pin &
ARM GAS  /tmp/cch2Dr4w.s 			page 23


  68:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     */
  74:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
  81:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** };
  86:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
  87:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** /**
  88:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** */
  90:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** class AdcHandle
  91:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** {
  92:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****   public:
  93:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     enum OverSampling
  95:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     {
  96:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     };
 108:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h **** 
 109:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 253              		.loc 7 110 5 is_stmt 1 view .LVU45
 254              		.loc 7 110 5 is_stmt 0 view .LVU46
 255              	.LBE286:
 256              	.LBB287:
 257              	.LBI287:
 258              		.file 8 "/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
   4:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
   6:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** namespace daisy
   7:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** {
   8:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
ARM GAS  /tmp/cch2Dr4w.s 			page 24


   9:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****  */
  22:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** class AudioHandle
  23:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** {
  24:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****   public:
  25:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     struct Config
  28:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     {
  29:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  32:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  35:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         float postgain;
  37:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  38:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****          */
  41:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         float output_compensation;
  42:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  43:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         Config()
  45:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         {
  50:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         }
  51:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     };
  52:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  53:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     enum class Result
  54:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     {
  55:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         OK,
  56:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         ERR,
  57:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     };
  58:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  59:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      */
  63:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  65:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
ARM GAS  /tmp/cch2Dr4w.s 			page 25


  66:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      */
  68:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  70:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      */
  73:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
  75:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  77:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     */
  81:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  83:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     */
  86:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  88:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****      */
  91:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h **** 
  95:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 259              		.loc 8 96 5 is_stmt 1 view .LVU47
 260              		.loc 8 96 5 is_stmt 0 view .LVU48
 261              	.LBE287:
 262              	.LBE283:
 263              		.loc 3 10 7 view .LVU49
 264 0000 7047     		bx	lr
 265              		.cfi_endproc
 266              	.LFE6140:
 268              		.weak	_ZN16clevelandmusicco8HothouseD1Ev
 269              		.thumb_set _ZN16clevelandmusicco8HothouseD1Ev,_ZN16clevelandmusicco8HothouseD2Ev
 270              		.section	.text._ZN28PartitionedConvolutionReverbD2Ev,"axG",%progbits,_ZN28PartitionedConvolutionRe
 271              		.align	1
 272              		.weak	_ZN28PartitionedConvolutionReverbD2Ev
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv5-d16
 278              	_ZN28PartitionedConvolutionReverbD2Ev:
 279              	.LVL11:
 280              	.LFB5506:
 216:EchoBridgeWithUSB.cpp ****         // Free IR buffers
 281              		.loc 2 216 5 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              	.LBB288:
ARM GAS  /tmp/cch2Dr4w.s 			page 26


 218:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 286              		.loc 2 218 9 view .LVU51
 287              	.LBE288:
 216:EchoBridgeWithUSB.cpp ****         // Free IR buffers
 288              		.loc 2 216 5 is_stmt 0 view .LVU52
 289 0000 10B5     		push	{r4, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
 216:EchoBridgeWithUSB.cpp ****         // Free IR buffers
 293              		.loc 2 216 5 view .LVU53
 294 0002 0446     		mov	r4, r0
 295              	.LBB293:
 218:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 296              		.loc 2 218 13 view .LVU54
 297 0004 0068     		ldr	r0, [r0]
 298              	.LVL12:
 218:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 299              		.loc 2 218 9 view .LVU55
 300 0006 18B1     		cbz	r0, .L16
 219:EchoBridgeWithUSB.cpp ****             irBuffer = nullptr;
 301              		.loc 2 219 13 is_stmt 1 discriminator 1 view .LVU56
 219:EchoBridgeWithUSB.cpp ****             irBuffer = nullptr;
 302              		.loc 2 219 22 is_stmt 0 discriminator 1 view .LVU57
 303 0008 FFF7FEFF 		bl	_ZdaPv
 304              	.LVL13:
 220:EchoBridgeWithUSB.cpp ****         }
 305              		.loc 2 220 13 is_stmt 1 discriminator 1 view .LVU58
 220:EchoBridgeWithUSB.cpp ****         }
 306              		.loc 2 220 22 is_stmt 0 discriminator 1 view .LVU59
 307 000c 0023     		movs	r3, #0
 308 000e 2360     		str	r3, [r4]
 309              	.L16:
 223:EchoBridgeWithUSB.cpp ****             delete[] irBufferRight;
 310              		.loc 2 223 9 is_stmt 1 view .LVU60
 223:EchoBridgeWithUSB.cpp ****             delete[] irBufferRight;
 311              		.loc 2 223 13 is_stmt 0 view .LVU61
 312 0010 6068     		ldr	r0, [r4, #4]
 223:EchoBridgeWithUSB.cpp ****             delete[] irBufferRight;
 313              		.loc 2 223 9 view .LVU62
 314 0012 08B1     		cbz	r0, .L17
 224:EchoBridgeWithUSB.cpp ****             irBufferRight = nullptr;
 315              		.loc 2 224 13 is_stmt 1 discriminator 1 view .LVU63
 224:EchoBridgeWithUSB.cpp ****             irBufferRight = nullptr;
 316              		.loc 2 224 22 is_stmt 0 discriminator 1 view .LVU64
 317 0014 FFF7FEFF 		bl	_ZdaPv
 318              	.LVL14:
 225:EchoBridgeWithUSB.cpp ****         }
 319              		.loc 2 225 13 is_stmt 1 discriminator 1 view .LVU65
 320              	.L17:
 321              	.LBB289:
 322              	.LBI289:
 323              		.file 9 "/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h"
   1:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** /*
   2:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** Copyright (c) 2020 Electrosmith, Corp
   3:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
   4:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** Use of this source code is governed by an MIT-style
ARM GAS  /tmp/cch2Dr4w.s 			page 27


   5:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** license that can be found in the LICENSE file or at
   6:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** https://opensource.org/licenses/MIT.
   7:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** */
   8:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
   9:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** #pragma once
  10:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
  11:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
  12:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  13:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** namespace daisysp
  14:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** {
  15:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
  16:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  17:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  18:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  19:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  20:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  21:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  22:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  23:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  24:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  25:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** */
  26:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** class Svf
  27:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** {
  28:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****   public:
  29:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     Svf() {}
  30:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 324              		.loc 9 30 5 view .LVU66
 325              		.loc 9 30 5 is_stmt 0 view .LVU67
 326              	.LBE289:
 327              	.LBB290:
 328              	.LBI290:
 329              		.loc 9 30 5 is_stmt 1 view .LVU68
 330              		.loc 9 30 5 is_stmt 0 view .LVU69
 331              	.LBE290:
 332              	.LBB291:
 333              	.LBI291:
 334              		.loc 9 30 5 is_stmt 1 view .LVU70
 335              		.loc 9 30 5 is_stmt 0 view .LVU71
 336              	.LBE291:
 337              	.LBB292:
 338              	.LBI292:
 339              		.loc 9 30 5 is_stmt 1 view .LVU72
 340              		.loc 9 30 5 is_stmt 0 view .LVU73
 341              	.LBE292:
 342              	.LBE293:
 227:EchoBridgeWithUSB.cpp ****     
 343              		.loc 2 227 5 view .LVU74
 344 0018 2046     		mov	r0, r4
 345 001a 10BD     		pop	{r4, pc}
 227:EchoBridgeWithUSB.cpp ****     
 346              		.loc 2 227 5 view .LVU75
 347              		.cfi_endproc
 348              	.LFE5506:
 350              		.weak	_ZN28PartitionedConvolutionReverbD1Ev
 351              		.thumb_set _ZN28PartitionedConvolutionReverbD1Ev,_ZN28PartitionedConvolutionReverbD2Ev
 352              		.section	.text._Z17HandleFootswitch1b,"ax",%progbits
 353              		.align	1
ARM GAS  /tmp/cch2Dr4w.s 			page 28


 354              		.global	_Z17HandleFootswitch1b
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu fpv5-d16
 360              	_Z17HandleFootswitch1b:
 361              	.LVL15:
 362              	.LFB5520:
 628:EchoBridgeWithUSB.cpp ****     if (pressed) {
 363              		.loc 2 628 38 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 629:EchoBridgeWithUSB.cpp ****         freeze = !freeze;
 368              		.loc 2 629 5 view .LVU77
 369 0000 70B1     		cbz	r0, .L24
 370              	.LBB296:
 371              	.LBI296:
 628:EchoBridgeWithUSB.cpp ****     if (pressed) {
 372              		.loc 2 628 6 view .LVU78
 373              	.LVL16:
 374              	.LBB297:
 630:EchoBridgeWithUSB.cpp ****         led1.Set(freeze ? 1.0f : 0.0f);
 375              		.loc 2 630 9 view .LVU79
 630:EchoBridgeWithUSB.cpp ****         led1.Set(freeze ? 1.0f : 0.0f);
 376              		.loc 2 630 18 is_stmt 0 view .LVU80
 377 0002 084A     		ldr	r2, .L28
 631:EchoBridgeWithUSB.cpp ****     }
 378              		.loc 2 631 17 view .LVU81
 379 0004 B7EE000A 		vmov.f32	s0, #1.0e+0
 380 0008 DFED077A 		vldr.32	s15, .L28+4
 630:EchoBridgeWithUSB.cpp ****         led1.Set(freeze ? 1.0f : 0.0f);
 381              		.loc 2 630 18 view .LVU82
 382 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 631:EchoBridgeWithUSB.cpp ****     }
 383              		.loc 2 631 17 view .LVU83
 384 000e 0748     		ldr	r0, .L28+8
 385              	.LVL17:
 630:EchoBridgeWithUSB.cpp ****         led1.Set(freeze ? 1.0f : 0.0f);
 386              		.loc 2 630 18 view .LVU84
 387 0010 83F00103 		eor	r3, r3, #1
 631:EchoBridgeWithUSB.cpp ****     }
 388              		.loc 2 631 17 view .LVU85
 389 0014 002B     		cmp	r3, #0
 630:EchoBridgeWithUSB.cpp ****         led1.Set(freeze ? 1.0f : 0.0f);
 390              		.loc 2 630 16 view .LVU86
 391 0016 1370     		strb	r3, [r2]
 631:EchoBridgeWithUSB.cpp ****     }
 392              		.loc 2 631 9 is_stmt 1 view .LVU87
 631:EchoBridgeWithUSB.cpp ****     }
 393              		.loc 2 631 17 is_stmt 0 view .LVU88
 394 0018 07FE800A 		vseleq.f32	s0, s15, s0
 395 001c FFF7FEBF 		b	_ZN5daisy3Led3SetEf
 396              	.LVL18:
 397              	.L24:
 631:EchoBridgeWithUSB.cpp ****     }
ARM GAS  /tmp/cch2Dr4w.s 			page 29


 398              		.loc 2 631 17 view .LVU89
 399              	.LBE297:
 400              	.LBE296:
 633:EchoBridgeWithUSB.cpp **** 
 401              		.loc 2 633 1 view .LVU90
 402 0020 7047     		bx	lr
 403              	.L29:
 404 0022 00BF     		.align	2
 405              	.L28:
 406 0024 00000000 		.word	.LANCHOR0
 407 0028 00000000 		.word	0
 408 002c 00000000 		.word	.LANCHOR1
 409              		.cfi_endproc
 410              	.LFE5520:
 412              		.section	.text._Z17HandleFootswitch2b,"ax",%progbits
 413              		.align	1
 414              		.global	_Z17HandleFootswitch2b
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv5-d16
 420              	_Z17HandleFootswitch2b:
 421              	.LVL19:
 422              	.LFB5521:
 636:EchoBridgeWithUSB.cpp ****     if (pressed) {
 423              		.loc 2 636 38 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 637:EchoBridgeWithUSB.cpp ****         bypass = !bypass;
 428              		.loc 2 637 5 view .LVU92
 429 0000 70B1     		cbz	r0, .L30
 430              	.LBB300:
 431              	.LBI300:
 636:EchoBridgeWithUSB.cpp ****     if (pressed) {
 432              		.loc 2 636 6 view .LVU93
 433              	.LVL20:
 434              	.LBB301:
 638:EchoBridgeWithUSB.cpp ****         led2.Set(bypass ? 0.0f : 1.0f);
 435              		.loc 2 638 9 view .LVU94
 638:EchoBridgeWithUSB.cpp ****         led2.Set(bypass ? 0.0f : 1.0f);
 436              		.loc 2 638 18 is_stmt 0 view .LVU95
 437 0002 084A     		ldr	r2, .L34
 639:EchoBridgeWithUSB.cpp ****     }
 438              		.loc 2 639 17 view .LVU96
 439 0004 F7EE007A 		vmov.f32	s15, #1.0e+0
 440 0008 9FED070A 		vldr.32	s0, .L34+4
 638:EchoBridgeWithUSB.cpp ****         led2.Set(bypass ? 0.0f : 1.0f);
 441              		.loc 2 638 18 view .LVU97
 442 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 639:EchoBridgeWithUSB.cpp ****     }
 443              		.loc 2 639 17 view .LVU98
 444 000e 0748     		ldr	r0, .L34+8
 445              	.LVL21:
 638:EchoBridgeWithUSB.cpp ****         led2.Set(bypass ? 0.0f : 1.0f);
 446              		.loc 2 638 18 view .LVU99
ARM GAS  /tmp/cch2Dr4w.s 			page 30


 447 0010 83F00103 		eor	r3, r3, #1
 639:EchoBridgeWithUSB.cpp ****     }
 448              		.loc 2 639 17 view .LVU100
 449 0014 002B     		cmp	r3, #0
 638:EchoBridgeWithUSB.cpp ****         led2.Set(bypass ? 0.0f : 1.0f);
 450              		.loc 2 638 16 view .LVU101
 451 0016 1370     		strb	r3, [r2]
 639:EchoBridgeWithUSB.cpp ****     }
 452              		.loc 2 639 9 is_stmt 1 view .LVU102
 639:EchoBridgeWithUSB.cpp ****     }
 453              		.loc 2 639 17 is_stmt 0 view .LVU103
 454 0018 07FE800A 		vseleq.f32	s0, s15, s0
 455 001c FFF7FEBF 		b	_ZN5daisy3Led3SetEf
 456              	.LVL22:
 457              	.L30:
 639:EchoBridgeWithUSB.cpp ****     }
 458              		.loc 2 639 17 view .LVU104
 459              	.LBE301:
 460              	.LBE300:
 641:EchoBridgeWithUSB.cpp **** 
 461              		.loc 2 641 1 view .LVU105
 462 0020 7047     		bx	lr
 463              	.L35:
 464 0022 00BF     		.align	2
 465              	.L34:
 466 0024 00000000 		.word	.LANCHOR2
 467 0028 00000000 		.word	0
 468 002c 00000000 		.word	.LANCHOR3
 469              		.cfi_endproc
 470              	.LFE5521:
 472              		.section	.rodata._ZN8IRLoader12LoadStereoIREv.isra.0.str1.1,"aMS",%progbits,1
 473              	.LC0:
 474 0000 69725F6C 		.ascii	"ir_left.wav\000"
 474      6566742E 
 474      77617600 
 475              	.LC1:
 476 000c 69725F72 		.ascii	"ir_right.wav\000"
 476      69676874 
 476      2E776176 
 476      00
 477              	.LC2:
 478 0019 52494646 		.ascii	"RIFF\000"
 478      00
 479              	.LC3:
 480 001e 57415645 		.ascii	"WAVE\000"
 480      00
 481              	.LC4:
 482 0023 666D7420 		.ascii	"fmt \000"
 482      00
 483              	.LC5:
 484 0028 64617461 		.ascii	"data\000"
 484      00
 485              		.section	.text._ZN8IRLoader12LoadStereoIREv.isra.0,"axG",%progbits,_ZN8IRLoader6LoadIREv,comdat
 486              		.align	1
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
ARM GAS  /tmp/cch2Dr4w.s 			page 31


 490              		.fpu fpv5-d16
 492              	_ZN8IRLoader12LoadStereoIREv.isra.0:
 493              	.LFB6152:
 494              		.file 10 "IRLoader.h"
   1:IRLoader.h    **** #pragma once
   2:IRLoader.h    **** 
   3:IRLoader.h    **** #include "daisy_seed.h"
   4:IRLoader.h    **** #include "hid/usb_host.h"
   5:IRLoader.h    **** #include <string.h>
   6:IRLoader.h    **** 
   7:IRLoader.h    **** using namespace daisy;
   8:IRLoader.h    **** 
   9:IRLoader.h    **** // Define max IR length as a global constant so it can be accessed from IRLoader
  10:IRLoader.h    **** static const size_t MAX_IR_LENGTH = 4096;
  11:IRLoader.h    **** 
  12:IRLoader.h    **** // Class for loading impulse response files from USB
  13:IRLoader.h    **** class IRLoader {
  14:IRLoader.h    **** public:
  15:IRLoader.h    ****     IRLoader() : usbh_(nullptr), mounted_(false) {}
  16:IRLoader.h    ****     
  17:IRLoader.h    ****     void Init() {
  18:IRLoader.h    ****         // Initialize USB host
  19:IRLoader.h    ****         usbh_ = new USBHostHandle();
  20:IRLoader.h    ****         usbh_->Init(USBHostHandle::Config());
  21:IRLoader.h    ****     }
  22:IRLoader.h    ****     
  23:IRLoader.h    ****     void Process() {
  24:IRLoader.h    ****         // Process USB host events
  25:IRLoader.h    ****         if (usbh_) {
  26:IRLoader.h    ****             usbh_->Process();
  27:IRLoader.h    ****             
  28:IRLoader.h    ****             // Check if USB drive is mounted
  29:IRLoader.h    ****             // In newer API, we need to check if the filesystem is ready
  30:IRLoader.h    ****             bool mounted = f_mount(nullptr, "", 0) == FR_OK;
  31:IRLoader.h    ****             
  32:IRLoader.h    ****             // If mount state changed
  33:IRLoader.h    ****             if (mounted != mounted_) {
  34:IRLoader.h    ****                 mounted_ = mounted;
  35:IRLoader.h    ****                 
  36:IRLoader.h    ****                 // If newly mounted, try to load IR
  37:IRLoader.h    ****                 if (mounted_) {
  38:IRLoader.h    ****                     LoadIR();
  39:IRLoader.h    ****                 }
  40:IRLoader.h    ****             }
  41:IRLoader.h    ****         }
  42:IRLoader.h    ****     }
  43:IRLoader.h    ****     
  44:IRLoader.h    ****     bool LoadIR() {
  45:IRLoader.h    ****         if (!usbh_ || !mounted_) {
  46:IRLoader.h    ****             return false;
  47:IRLoader.h    ****         }
  48:IRLoader.h    ****         
  49:IRLoader.h    ****         // Try to load mono IR first
  50:IRLoader.h    ****         if (LoadMonoIR()) {
  51:IRLoader.h    ****             return true;
  52:IRLoader.h    ****         }
  53:IRLoader.h    ****         
ARM GAS  /tmp/cch2Dr4w.s 			page 32


  54:IRLoader.h    ****         // If mono IR not found, try to load stereo IR
  55:IRLoader.h    ****         return LoadStereoIR();
  56:IRLoader.h    ****     }
  57:IRLoader.h    ****     
  58:IRLoader.h    ****     bool LoadMonoIR() {
  59:IRLoader.h    ****         // Open file
  60:IRLoader.h    ****         FIL file;
  61:IRLoader.h    ****         FRESULT result = f_open(&file, "ir_mono.wav", FA_READ);
  62:IRLoader.h    ****         
  63:IRLoader.h    ****         if (result != FR_OK) {
  64:IRLoader.h    ****             return false;
  65:IRLoader.h    ****         }
  66:IRLoader.h    ****         
  67:IRLoader.h    ****         // Read WAV header
  68:IRLoader.h    ****         WAVHeader header;
  69:IRLoader.h    ****         UINT bytesRead;
  70:IRLoader.h    ****         result = f_read(&file, &header, sizeof(WAVHeader), &bytesRead);
  71:IRLoader.h    ****         
  72:IRLoader.h    ****         if (result != FR_OK || bytesRead != sizeof(WAVHeader)) {
  73:IRLoader.h    ****             f_close(&file);
  74:IRLoader.h    ****             return false;
  75:IRLoader.h    ****         }
  76:IRLoader.h    ****         
  77:IRLoader.h    ****         // Check if valid WAV file
  78:IRLoader.h    ****         if (strncmp(header.riff, "RIFF", 4) != 0 || 
  79:IRLoader.h    ****             strncmp(header.wave, "WAVE", 4) != 0 || 
  80:IRLoader.h    ****             strncmp(header.fmt, "fmt ", 4) != 0 || 
  81:IRLoader.h    ****             strncmp(header.data, "data", 4) != 0) {
  82:IRLoader.h    ****             f_close(&file);
  83:IRLoader.h    ****             return false;
  84:IRLoader.h    ****         }
  85:IRLoader.h    ****         
  86:IRLoader.h    ****         // Check if supported format (PCM)
  87:IRLoader.h    ****         if (header.audioFormat != 1) {
  88:IRLoader.h    ****             f_close(&file);
  89:IRLoader.h    ****             return false;
  90:IRLoader.h    ****         }
  91:IRLoader.h    ****         
  92:IRLoader.h    ****         // Calculate number of samples
  93:IRLoader.h    ****         uint32_t numSamples = header.dataSize / (header.numChannels * (header.bitsPerSample / 8));
  94:IRLoader.h    ****         
  95:IRLoader.h    ****         // Limit to MAX_IR_LENGTH
  96:IRLoader.h    ****         if (numSamples > MAX_IR_LENGTH) {
  97:IRLoader.h    ****             numSamples = MAX_IR_LENGTH;
  98:IRLoader.h    ****         }
  99:IRLoader.h    ****         
 100:IRLoader.h    ****         // Allocate buffer
 101:IRLoader.h    ****         float* irBuffer = new float[numSamples];
 102:IRLoader.h    ****         
 103:IRLoader.h    ****         if (!irBuffer) {
 104:IRLoader.h    ****             f_close(&file);
 105:IRLoader.h    ****             return false;
 106:IRLoader.h    ****         }
 107:IRLoader.h    ****         
 108:IRLoader.h    ****         // Read samples
 109:IRLoader.h    ****         if (header.bitsPerSample == 16) {
 110:IRLoader.h    ****             // 16-bit samples
ARM GAS  /tmp/cch2Dr4w.s 			page 33


 111:IRLoader.h    ****             int16_t* tempBuffer = new int16_t[numSamples * header.numChannels];
 112:IRLoader.h    ****             
 113:IRLoader.h    ****             if (!tempBuffer) {
 114:IRLoader.h    ****                 delete[] irBuffer;
 115:IRLoader.h    ****                 f_close(&file);
 116:IRLoader.h    ****                 return false;
 117:IRLoader.h    ****             }
 118:IRLoader.h    ****             
 119:IRLoader.h    ****             result = f_read(&file, tempBuffer, numSamples * header.numChannels * sizeof(int16_t), &
 120:IRLoader.h    ****             
 121:IRLoader.h    ****             if (result != FR_OK) {
 122:IRLoader.h    ****                 delete[] tempBuffer;
 123:IRLoader.h    ****                 delete[] irBuffer;
 124:IRLoader.h    ****                 f_close(&file);
 125:IRLoader.h    ****                 return false;
 126:IRLoader.h    ****             }
 127:IRLoader.h    ****             
 128:IRLoader.h    ****             // Convert to float
 129:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 130:IRLoader.h    ****                 // If stereo, average channels
 131:IRLoader.h    ****                 if (header.numChannels == 2) {
 132:IRLoader.h    ****                     irBuffer[i] = ((float)tempBuffer[i*2] + (float)tempBuffer[i*2+1]) / 65536.0f;
 133:IRLoader.h    ****                 } else {
 134:IRLoader.h    ****                     irBuffer[i] = (float)tempBuffer[i] / 32768.0f;
 135:IRLoader.h    ****                 }
 136:IRLoader.h    ****             }
 137:IRLoader.h    ****             
 138:IRLoader.h    ****             delete[] tempBuffer;
 139:IRLoader.h    ****         } else if (header.bitsPerSample == 24) {
 140:IRLoader.h    ****             // 24-bit samples
 141:IRLoader.h    ****             uint8_t* tempBuffer = new uint8_t[numSamples * header.numChannels * 3];
 142:IRLoader.h    ****             
 143:IRLoader.h    ****             if (!tempBuffer) {
 144:IRLoader.h    ****                 delete[] irBuffer;
 145:IRLoader.h    ****                 f_close(&file);
 146:IRLoader.h    ****                 return false;
 147:IRLoader.h    ****             }
 148:IRLoader.h    ****             
 149:IRLoader.h    ****             result = f_read(&file, tempBuffer, numSamples * header.numChannels * 3, &bytesRead);
 150:IRLoader.h    ****             
 151:IRLoader.h    ****             if (result != FR_OK) {
 152:IRLoader.h    ****                 delete[] tempBuffer;
 153:IRLoader.h    ****                 delete[] irBuffer;
 154:IRLoader.h    ****                 f_close(&file);
 155:IRLoader.h    ****                 return false;
 156:IRLoader.h    ****             }
 157:IRLoader.h    ****             
 158:IRLoader.h    ****             // Convert to float
 159:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 160:IRLoader.h    ****                 // If stereo, average channels
 161:IRLoader.h    ****                 if (header.numChannels == 2) {
 162:IRLoader.h    ****                     int32_t sampleL = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuf
 163:IRLoader.h    ****                     int32_t sampleR = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempB
 164:IRLoader.h    ****                     sampleL >>= 8;
 165:IRLoader.h    ****                     sampleR >>= 8;
 166:IRLoader.h    ****                     irBuffer[i] = ((float)sampleL + (float)sampleR) / 16777216.0f;
 167:IRLoader.h    ****                 } else {
ARM GAS  /tmp/cch2Dr4w.s 			page 34


 168:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*3] << 8) | (tempBuffer[i*3+1] << 16) | (tempBuff
 169:IRLoader.h    ****                     sample >>= 8;
 170:IRLoader.h    ****                     irBuffer[i] = (float)sample / 8388608.0f;
 171:IRLoader.h    ****                 }
 172:IRLoader.h    ****             }
 173:IRLoader.h    ****             
 174:IRLoader.h    ****             delete[] tempBuffer;
 175:IRLoader.h    ****         } else if (header.bitsPerSample == 32) {
 176:IRLoader.h    ****             // 32-bit samples (assume float)
 177:IRLoader.h    ****             result = f_read(&file, irBuffer, numSamples * sizeof(float), &bytesRead);
 178:IRLoader.h    ****             
 179:IRLoader.h    ****             if (result != FR_OK) {
 180:IRLoader.h    ****                 delete[] irBuffer;
 181:IRLoader.h    ****                 f_close(&file);
 182:IRLoader.h    ****                 return false;
 183:IRLoader.h    ****             }
 184:IRLoader.h    ****         } else {
 185:IRLoader.h    ****             // Unsupported bit depth
 186:IRLoader.h    ****             delete[] irBuffer;
 187:IRLoader.h    ****             f_close(&file);
 188:IRLoader.h    ****             return false;
 189:IRLoader.h    ****         }
 190:IRLoader.h    ****         
 191:IRLoader.h    ****         // Close file
 192:IRLoader.h    ****         f_close(&file);
 193:IRLoader.h    ****         
 194:IRLoader.h    ****         // Normalize IR
 195:IRLoader.h    ****         float maxAbs = 0.0f;
 196:IRLoader.h    ****         for (uint32_t i = 0; i < numSamples; i++) {
 197:IRLoader.h    ****             float absVal = fabsf(irBuffer[i]);
 198:IRLoader.h    ****             if (absVal > maxAbs) {
 199:IRLoader.h    ****                 maxAbs = absVal;
 200:IRLoader.h    ****             }
 201:IRLoader.h    ****         }
 202:IRLoader.h    ****         
 203:IRLoader.h    ****         if (maxAbs > 0.0f) {
 204:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 205:IRLoader.h    ****                 irBuffer[i] /= maxAbs;
 206:IRLoader.h    ****             }
 207:IRLoader.h    ****         }
 208:IRLoader.h    ****         
 209:IRLoader.h    ****         // Load IR into reverb
 210:IRLoader.h    ****         bool success = LoadIRCallback(irBuffer, nullptr, numSamples);
 211:IRLoader.h    ****         
 212:IRLoader.h    ****         // Free buffer
 213:IRLoader.h    ****         delete[] irBuffer;
 214:IRLoader.h    ****         
 215:IRLoader.h    ****         return success;
 216:IRLoader.h    ****     }
 217:IRLoader.h    ****     
 218:IRLoader.h    ****     bool LoadStereoIR() {
 495              		.loc 10 218 10 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 1208
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              	.LVL23:
 219:IRLoader.h    ****         // Open left channel file
ARM GAS  /tmp/cch2Dr4w.s 			page 35


 220:IRLoader.h    ****         FIL fileL;
 500              		.loc 10 220 9 view .LVU107
 221:IRLoader.h    ****         FRESULT result = f_open(&fileL, "ir_left.wav", FA_READ);
 501              		.loc 10 221 9 view .LVU108
 218:IRLoader.h    ****         // Open left channel file
 502              		.loc 10 218 10 is_stmt 0 view .LVU109
 503 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 504              		.cfi_def_cfa_offset 28
 505              		.cfi_offset 4, -28
 506              		.cfi_offset 5, -24
 507              		.cfi_offset 6, -20
 508              		.cfi_offset 7, -16
 509              		.cfi_offset 8, -12
 510              		.cfi_offset 9, -8
 511              		.cfi_offset 14, -4
 512 0004 ADF2BC4D 		subw	sp, sp, #1212
 513              		.cfi_def_cfa_offset 1240
 514              		.loc 10 221 32 view .LVU110
 515 0008 0122     		movs	r2, #1
 516 000a AD49     		ldr	r1, .L101
 517 000c 18A8     		add	r0, sp, #96
 518 000e FFF7FEFF 		bl	f_open
 519              	.LVL24:
 222:IRLoader.h    ****         
 223:IRLoader.h    ****         if (result != FR_OK) {
 520              		.loc 10 223 9 is_stmt 1 view .LVU111
 521 0012 0446     		mov	r4, r0
 522 0014 D0B9     		cbnz	r0, .L79
 224:IRLoader.h    ****             return false;
 225:IRLoader.h    ****         }
 226:IRLoader.h    ****         
 227:IRLoader.h    ****         // Open right channel file
 228:IRLoader.h    ****         FIL fileR;
 523              		.loc 10 228 9 view .LVU112
 229:IRLoader.h    ****         result = f_open(&fileR, "ir_right.wav", FA_READ);
 524              		.loc 10 229 9 view .LVU113
 525              		.loc 10 229 24 is_stmt 0 view .LVU114
 526 0016 0122     		movs	r2, #1
 527 0018 AA49     		ldr	r1, .L101+4
 528 001a A3A8     		add	r0, sp, #652
 529              	.LVL25:
 530              		.loc 10 229 24 view .LVU115
 531 001c FFF7FEFF 		bl	f_open
 532              	.LVL26:
 230:IRLoader.h    ****         
 231:IRLoader.h    ****         if (result != FR_OK) {
 533              		.loc 10 231 9 is_stmt 1 view .LVU116
 534 0020 38B1     		cbz	r0, .L38
 232:IRLoader.h    ****             f_close(&fileL);
 535              		.loc 10 232 13 view .LVU117
 536              		.loc 10 232 20 is_stmt 0 view .LVU118
 537 0022 18A8     		add	r0, sp, #96
 538              	.LVL27:
 539              	.L98:
 540              	.LBB302:
 541              	.LBB303:
 233:IRLoader.h    ****             return false;
ARM GAS  /tmp/cch2Dr4w.s 			page 36


 234:IRLoader.h    ****         }
 235:IRLoader.h    ****         
 236:IRLoader.h    ****         // Read WAV headers
 237:IRLoader.h    ****         WAVHeader headerL, headerR;
 238:IRLoader.h    ****         UINT bytesReadL, bytesReadR;
 239:IRLoader.h    ****         
 240:IRLoader.h    ****         result = f_read(&fileL, &headerL, sizeof(WAVHeader), &bytesReadL);
 241:IRLoader.h    ****         if (result != FR_OK || bytesReadL != sizeof(WAVHeader)) {
 242:IRLoader.h    ****             f_close(&fileL);
 243:IRLoader.h    ****             f_close(&fileR);
 244:IRLoader.h    ****             return false;
 245:IRLoader.h    ****         }
 246:IRLoader.h    ****         
 247:IRLoader.h    ****         result = f_read(&fileR, &headerR, sizeof(WAVHeader), &bytesReadR);
 248:IRLoader.h    ****         if (result != FR_OK || bytesReadR != sizeof(WAVHeader)) {
 249:IRLoader.h    ****             f_close(&fileL);
 250:IRLoader.h    ****             f_close(&fileR);
 251:IRLoader.h    ****             return false;
 252:IRLoader.h    ****         }
 253:IRLoader.h    ****         
 254:IRLoader.h    ****         // Check if valid WAV files
 255:IRLoader.h    ****         if (strncmp(headerL.riff, "RIFF", 4) != 0 || 
 256:IRLoader.h    ****             strncmp(headerL.wave, "WAVE", 4) != 0 || 
 257:IRLoader.h    ****             strncmp(headerL.fmt, "fmt ", 4) != 0 || 
 258:IRLoader.h    ****             strncmp(headerL.data, "data", 4) != 0 ||
 259:IRLoader.h    ****             strncmp(headerR.riff, "RIFF", 4) != 0 || 
 260:IRLoader.h    ****             strncmp(headerR.wave, "WAVE", 4) != 0 || 
 261:IRLoader.h    ****             strncmp(headerR.fmt, "fmt ", 4) != 0 || 
 262:IRLoader.h    ****             strncmp(headerR.data, "data", 4) != 0) {
 263:IRLoader.h    ****             f_close(&fileL);
 264:IRLoader.h    ****             f_close(&fileR);
 265:IRLoader.h    ****             return false;
 266:IRLoader.h    ****         }
 267:IRLoader.h    ****         
 268:IRLoader.h    ****         // Check if supported format (PCM)
 269:IRLoader.h    ****         if (headerL.audioFormat != 1 || headerR.audioFormat != 1) {
 270:IRLoader.h    ****             f_close(&fileL);
 271:IRLoader.h    ****             f_close(&fileR);
 272:IRLoader.h    ****             return false;
 273:IRLoader.h    ****         }
 274:IRLoader.h    ****         
 275:IRLoader.h    ****         // Calculate number of samples
 276:IRLoader.h    ****         uint32_t numSamplesL = headerL.dataSize / (headerL.numChannels * (headerL.bitsPerSample / 8
 277:IRLoader.h    ****         uint32_t numSamplesR = headerR.dataSize / (headerR.numChannels * (headerR.bitsPerSample / 8
 278:IRLoader.h    ****         
 279:IRLoader.h    ****         // Use the smaller of the two
 280:IRLoader.h    ****         uint32_t numSamples = (numSamplesL < numSamplesR) ? numSamplesL : numSamplesR;
 281:IRLoader.h    ****         
 282:IRLoader.h    ****         // Limit to MAX_IR_LENGTH
 283:IRLoader.h    ****         if (numSamples > MAX_IR_LENGTH) {
 284:IRLoader.h    ****             numSamples = MAX_IR_LENGTH;
 285:IRLoader.h    ****         }
 286:IRLoader.h    ****         
 287:IRLoader.h    ****         // Allocate buffers
 288:IRLoader.h    ****         float* irBufferL = new float[numSamples];
 289:IRLoader.h    ****         float* irBufferR = new float[numSamples];
 290:IRLoader.h    ****         
ARM GAS  /tmp/cch2Dr4w.s 			page 37


 291:IRLoader.h    ****         if (!irBufferL || !irBufferR) {
 292:IRLoader.h    ****             if (irBufferL) delete[] irBufferL;
 293:IRLoader.h    ****             if (irBufferR) delete[] irBufferR;
 294:IRLoader.h    ****             f_close(&fileL);
 295:IRLoader.h    ****             f_close(&fileR);
 296:IRLoader.h    ****             return false;
 297:IRLoader.h    ****         }
 298:IRLoader.h    ****         
 299:IRLoader.h    ****         // Read samples from left channel
 300:IRLoader.h    ****         if (headerL.bitsPerSample == 16) {
 301:IRLoader.h    ****             // 16-bit samples
 302:IRLoader.h    ****             int16_t* tempBuffer = new int16_t[numSamples * headerL.numChannels];
 303:IRLoader.h    ****             
 304:IRLoader.h    ****             if (!tempBuffer) {
 305:IRLoader.h    ****                 delete[] irBufferL;
 306:IRLoader.h    ****                 delete[] irBufferR;
 307:IRLoader.h    ****                 f_close(&fileL);
 308:IRLoader.h    ****                 f_close(&fileR);
 309:IRLoader.h    ****                 return false;
 310:IRLoader.h    ****             }
 311:IRLoader.h    ****             
 312:IRLoader.h    ****             result = f_read(&fileL, tempBuffer, numSamples * headerL.numChannels * sizeof(int16_t),
 313:IRLoader.h    ****             
 314:IRLoader.h    ****             if (result != FR_OK) {
 315:IRLoader.h    ****                 delete[] tempBuffer;
 316:IRLoader.h    ****                 delete[] irBufferL;
 317:IRLoader.h    ****                 delete[] irBufferR;
 318:IRLoader.h    ****                 f_close(&fileL);
 319:IRLoader.h    ****                 f_close(&fileR);
 542              		.loc 10 319 24 view .LVU119
 543 0024 FFF7FEFF 		bl	f_close
 544              	.LVL28:
 320:IRLoader.h    ****                 return false;
 545              		.loc 10 320 17 is_stmt 1 view .LVU120
 546              	.L37:
 547              	.LBE303:
 548              	.LBE302:
 321:IRLoader.h    ****             }
 322:IRLoader.h    ****             
 323:IRLoader.h    ****             // Convert to float
 324:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 325:IRLoader.h    ****                 // If stereo, use left channel
 326:IRLoader.h    ****                 if (headerL.numChannels == 2) {
 327:IRLoader.h    ****                     irBufferL[i] = (float)tempBuffer[i*2] / 32768.0f;
 328:IRLoader.h    ****                 } else {
 329:IRLoader.h    ****                     irBufferL[i] = (float)tempBuffer[i] / 32768.0f;
 330:IRLoader.h    ****                 }
 331:IRLoader.h    ****             }
 332:IRLoader.h    ****             
 333:IRLoader.h    ****             delete[] tempBuffer;
 334:IRLoader.h    ****         } else if (headerL.bitsPerSample == 24) {
 335:IRLoader.h    ****             // 24-bit samples
 336:IRLoader.h    ****             uint8_t* tempBuffer = new uint8_t[numSamples * headerL.numChannels * 3];
 337:IRLoader.h    ****             
 338:IRLoader.h    ****             if (!tempBuffer) {
 339:IRLoader.h    ****                 delete[] irBufferL;
 340:IRLoader.h    ****                 delete[] irBufferR;
ARM GAS  /tmp/cch2Dr4w.s 			page 38


 341:IRLoader.h    ****                 f_close(&fileL);
 342:IRLoader.h    ****                 f_close(&fileR);
 343:IRLoader.h    ****                 return false;
 344:IRLoader.h    ****             }
 345:IRLoader.h    ****             
 346:IRLoader.h    ****             result = f_read(&fileL, tempBuffer, numSamples * headerL.numChannels * 3, &bytesReadL);
 347:IRLoader.h    ****             
 348:IRLoader.h    ****             if (result != FR_OK) {
 349:IRLoader.h    ****                 delete[] tempBuffer;
 350:IRLoader.h    ****                 delete[] irBufferL;
 351:IRLoader.h    ****                 delete[] irBufferR;
 352:IRLoader.h    ****                 f_close(&fileL);
 353:IRLoader.h    ****                 f_close(&fileR);
 354:IRLoader.h    ****                 return false;
 355:IRLoader.h    ****             }
 356:IRLoader.h    ****             
 357:IRLoader.h    ****             // Convert to float
 358:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 359:IRLoader.h    ****                 // If stereo, use left channel
 360:IRLoader.h    ****                 if (headerL.numChannels == 2) {
 361:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuff
 362:IRLoader.h    ****                     sample >>= 8;
 363:IRLoader.h    ****                     irBufferL[i] = (float)sample / 8388608.0f;
 364:IRLoader.h    ****                 } else {
 365:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*3] << 8) | (tempBuffer[i*3+1] << 16) | (tempBuff
 366:IRLoader.h    ****                     sample >>= 8;
 367:IRLoader.h    ****                     irBufferL[i] = (float)sample / 8388608.0f;
 368:IRLoader.h    ****                 }
 369:IRLoader.h    ****             }
 370:IRLoader.h    ****             
 371:IRLoader.h    ****             delete[] tempBuffer;
 372:IRLoader.h    ****         } else if (headerL.bitsPerSample == 32) {
 373:IRLoader.h    ****             // 32-bit samples (assume float)
 374:IRLoader.h    ****             result = f_read(&fileL, irBufferL, numSamples * sizeof(float), &bytesReadL);
 375:IRLoader.h    ****             
 376:IRLoader.h    ****             if (result != FR_OK) {
 377:IRLoader.h    ****                 delete[] irBufferL;
 378:IRLoader.h    ****                 delete[] irBufferR;
 379:IRLoader.h    ****                 f_close(&fileL);
 380:IRLoader.h    ****                 f_close(&fileR);
 381:IRLoader.h    ****                 return false;
 382:IRLoader.h    ****             }
 383:IRLoader.h    ****         } else {
 384:IRLoader.h    ****             // Unsupported bit depth
 385:IRLoader.h    ****             delete[] irBufferL;
 386:IRLoader.h    ****             delete[] irBufferR;
 387:IRLoader.h    ****             f_close(&fileL);
 388:IRLoader.h    ****             f_close(&fileR);
 389:IRLoader.h    ****             return false;
 390:IRLoader.h    ****         }
 391:IRLoader.h    ****         
 392:IRLoader.h    ****         // Read samples from right channel
 393:IRLoader.h    ****         if (headerR.bitsPerSample == 16) {
 394:IRLoader.h    ****             // 16-bit samples
 395:IRLoader.h    ****             int16_t* tempBuffer = new int16_t[numSamples * headerR.numChannels];
 396:IRLoader.h    ****             
 397:IRLoader.h    ****             if (!tempBuffer) {
ARM GAS  /tmp/cch2Dr4w.s 			page 39


 398:IRLoader.h    ****                 delete[] irBufferL;
 399:IRLoader.h    ****                 delete[] irBufferR;
 400:IRLoader.h    ****                 f_close(&fileL);
 401:IRLoader.h    ****                 f_close(&fileR);
 402:IRLoader.h    ****                 return false;
 403:IRLoader.h    ****             }
 404:IRLoader.h    ****             
 405:IRLoader.h    ****             result = f_read(&fileR, tempBuffer, numSamples * headerR.numChannels * sizeof(int16_t),
 406:IRLoader.h    ****             
 407:IRLoader.h    ****             if (result != FR_OK) {
 408:IRLoader.h    ****                 delete[] tempBuffer;
 409:IRLoader.h    ****                 delete[] irBufferL;
 410:IRLoader.h    ****                 delete[] irBufferR;
 411:IRLoader.h    ****                 f_close(&fileL);
 412:IRLoader.h    ****                 f_close(&fileR);
 413:IRLoader.h    ****                 return false;
 414:IRLoader.h    ****             }
 415:IRLoader.h    ****             
 416:IRLoader.h    ****             // Convert to float
 417:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 418:IRLoader.h    ****                 // If stereo, use right channel
 419:IRLoader.h    ****                 if (headerR.numChannels == 2) {
 420:IRLoader.h    ****                     irBufferR[i] = (float)tempBuffer[i*2+1] / 32768.0f;
 421:IRLoader.h    ****                 } else {
 422:IRLoader.h    ****                     irBufferR[i] = (float)tempBuffer[i] / 32768.0f;
 423:IRLoader.h    ****                 }
 424:IRLoader.h    ****             }
 425:IRLoader.h    ****             
 426:IRLoader.h    ****             delete[] tempBuffer;
 427:IRLoader.h    ****         } else if (headerR.bitsPerSample == 24) {
 428:IRLoader.h    ****             // 24-bit samples
 429:IRLoader.h    ****             uint8_t* tempBuffer = new uint8_t[numSamples * headerR.numChannels * 3];
 430:IRLoader.h    ****             
 431:IRLoader.h    ****             if (!tempBuffer) {
 432:IRLoader.h    ****                 delete[] irBufferL;
 433:IRLoader.h    ****                 delete[] irBufferR;
 434:IRLoader.h    ****                 f_close(&fileL);
 435:IRLoader.h    ****                 f_close(&fileR);
 436:IRLoader.h    ****                 return false;
 437:IRLoader.h    ****             }
 438:IRLoader.h    ****             
 439:IRLoader.h    ****             result = f_read(&fileR, tempBuffer, numSamples * headerR.numChannels * 3, &bytesReadR);
 440:IRLoader.h    ****             
 441:IRLoader.h    ****             if (result != FR_OK) {
 442:IRLoader.h    ****                 delete[] tempBuffer;
 443:IRLoader.h    ****                 delete[] irBufferL;
 444:IRLoader.h    ****                 delete[] irBufferR;
 445:IRLoader.h    ****                 f_close(&fileL);
 446:IRLoader.h    ****                 f_close(&fileR);
 447:IRLoader.h    ****                 return false;
 448:IRLoader.h    ****             }
 449:IRLoader.h    ****             
 450:IRLoader.h    ****             // Convert to float
 451:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 452:IRLoader.h    ****                 // If stereo, use right channel
 453:IRLoader.h    ****                 if (headerR.numChannels == 2) {
 454:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempBu
ARM GAS  /tmp/cch2Dr4w.s 			page 40


 455:IRLoader.h    ****                     sample >>= 8;
 456:IRLoader.h    ****                     irBufferR[i] = (float)sample / 8388608.0f;
 457:IRLoader.h    ****                 } else {
 458:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*3] << 8) | (tempBuffer[i*3+1] << 16) | (tempBuff
 459:IRLoader.h    ****                     sample >>= 8;
 460:IRLoader.h    ****                     irBufferR[i] = (float)sample / 8388608.0f;
 461:IRLoader.h    ****                 }
 462:IRLoader.h    ****             }
 463:IRLoader.h    ****             
 464:IRLoader.h    ****             delete[] tempBuffer;
 465:IRLoader.h    ****         } else if (headerR.bitsPerSample == 32) {
 466:IRLoader.h    ****             // 32-bit samples (assume float)
 467:IRLoader.h    ****             result = f_read(&fileR, irBufferR, numSamples * sizeof(float), &bytesReadR);
 468:IRLoader.h    ****             
 469:IRLoader.h    ****             if (result != FR_OK) {
 470:IRLoader.h    ****                 delete[] irBufferL;
 471:IRLoader.h    ****                 delete[] irBufferR;
 472:IRLoader.h    ****                 f_close(&fileL);
 473:IRLoader.h    ****                 f_close(&fileR);
 474:IRLoader.h    ****                 return false;
 475:IRLoader.h    ****             }
 476:IRLoader.h    ****         } else {
 477:IRLoader.h    ****             // Unsupported bit depth
 478:IRLoader.h    ****             delete[] irBufferL;
 479:IRLoader.h    ****             delete[] irBufferR;
 480:IRLoader.h    ****             f_close(&fileL);
 481:IRLoader.h    ****             f_close(&fileR);
 482:IRLoader.h    ****             return false;
 483:IRLoader.h    ****         }
 484:IRLoader.h    ****         
 485:IRLoader.h    ****         // Close files
 486:IRLoader.h    ****         f_close(&fileL);
 487:IRLoader.h    ****         f_close(&fileR);
 488:IRLoader.h    ****         
 489:IRLoader.h    ****         // Normalize IRs
 490:IRLoader.h    ****         float maxAbsL = 0.0f;
 491:IRLoader.h    ****         float maxAbsR = 0.0f;
 492:IRLoader.h    ****         
 493:IRLoader.h    ****         for (uint32_t i = 0; i < numSamples; i++) {
 494:IRLoader.h    ****             float absValL = fabsf(irBufferL[i]);
 495:IRLoader.h    ****             float absValR = fabsf(irBufferR[i]);
 496:IRLoader.h    ****             
 497:IRLoader.h    ****             if (absValL > maxAbsL) {
 498:IRLoader.h    ****                 maxAbsL = absValL;
 499:IRLoader.h    ****             }
 500:IRLoader.h    ****             
 501:IRLoader.h    ****             if (absValR > maxAbsR) {
 502:IRLoader.h    ****                 maxAbsR = absValR;
 503:IRLoader.h    ****             }
 504:IRLoader.h    ****         }
 505:IRLoader.h    ****         
 506:IRLoader.h    ****         // Use the larger of the two for normalization
 507:IRLoader.h    ****         float maxAbs = (maxAbsL > maxAbsR) ? maxAbsL : maxAbsR;
 508:IRLoader.h    ****         
 509:IRLoader.h    ****         if (maxAbs > 0.0f) {
 510:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 511:IRLoader.h    ****                 irBufferL[i] /= maxAbs;
ARM GAS  /tmp/cch2Dr4w.s 			page 41


 512:IRLoader.h    ****                 irBufferR[i] /= maxAbs;
 513:IRLoader.h    ****             }
 514:IRLoader.h    ****         }
 515:IRLoader.h    ****         
 516:IRLoader.h    ****         // Load IR into reverb
 517:IRLoader.h    ****         bool success = LoadIRCallback(irBufferL, irBufferR, numSamples);
 518:IRLoader.h    ****         
 519:IRLoader.h    ****         // Free buffers
 520:IRLoader.h    ****         delete[] irBufferL;
 521:IRLoader.h    ****         delete[] irBufferR;
 522:IRLoader.h    ****         
 523:IRLoader.h    ****         return success;
 524:IRLoader.h    ****     }
 549              		.loc 10 524 5 is_stmt 0 view .LVU121
 550 0028 2046     		mov	r0, r4
 551 002a 0DF2BC4D 		addw	sp, sp, #1212
 552              		.cfi_remember_state
 553              		.cfi_def_cfa_offset 28
 554              		@ sp needed
 555 002e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 556              	.LVL29:
 557              	.L38:
 558              		.cfi_restore_state
 237:IRLoader.h    ****         UINT bytesReadL, bytesReadR;
 559              		.loc 10 237 9 is_stmt 1 view .LVU122
 238:IRLoader.h    ****         
 560              		.loc 10 238 9 view .LVU123
 240:IRLoader.h    ****         if (result != FR_OK || bytesReadL != sizeof(WAVHeader)) {
 561              		.loc 10 240 9 view .LVU124
 240:IRLoader.h    ****         if (result != FR_OK || bytesReadL != sizeof(WAVHeader)) {
 562              		.loc 10 240 24 is_stmt 0 view .LVU125
 563 0032 6B46     		mov	r3, sp
 564 0034 2C22     		movs	r2, #44
 565 0036 02A9     		add	r1, sp, #8
 566 0038 18A8     		add	r0, sp, #96
 567              	.LVL30:
 240:IRLoader.h    ****         if (result != FR_OK || bytesReadL != sizeof(WAVHeader)) {
 568              		.loc 10 240 24 view .LVU126
 569 003a FFF7FEFF 		bl	f_read
 570              	.LVL31:
 241:IRLoader.h    ****             f_close(&fileL);
 571              		.loc 10 241 9 is_stmt 1 view .LVU127
 572 003e 38B1     		cbz	r0, .L39
 573              	.LVL32:
 574              	.L100:
 575              	.LBB319:
 576              	.LBB320:
 480:IRLoader.h    ****             f_close(&fileR);
 577              		.loc 10 480 13 view .LVU128
 480:IRLoader.h    ****             f_close(&fileR);
 578              		.loc 10 480 20 is_stmt 0 view .LVU129
 579 0040 18A8     		add	r0, sp, #96
 580 0042 FFF7FEFF 		bl	f_close
 581              	.LVL33:
 481:IRLoader.h    ****             return false;
 582              		.loc 10 481 13 is_stmt 1 view .LVU130
 481:IRLoader.h    ****             return false;
ARM GAS  /tmp/cch2Dr4w.s 			page 42


 583              		.loc 10 481 20 is_stmt 0 view .LVU131
 584 0046 A3A8     		add	r0, sp, #652
 585 0048 FFF7FEFF 		bl	f_close
 586              	.LVL34:
 482:IRLoader.h    ****         }
 587              		.loc 10 482 13 is_stmt 1 view .LVU132
 588              	.L79:
 589              	.LBE320:
 590              	.LBE319:
 224:IRLoader.h    ****         }
 591              		.loc 10 224 20 is_stmt 0 view .LVU133
 592 004c 0024     		movs	r4, #0
 593 004e EBE7     		b	.L37
 594              	.LVL35:
 595              	.L39:
 241:IRLoader.h    ****             f_close(&fileL);
 596              		.loc 10 241 29 view .LVU134
 597 0050 009A     		ldr	r2, [sp]
 598 0052 2C2A     		cmp	r2, #44
 599 0054 F4D1     		bne	.L100
 247:IRLoader.h    ****         if (result != FR_OK || bytesReadR != sizeof(WAVHeader)) {
 600              		.loc 10 247 9 is_stmt 1 view .LVU135
 247:IRLoader.h    ****         if (result != FR_OK || bytesReadR != sizeof(WAVHeader)) {
 601              		.loc 10 247 24 is_stmt 0 view .LVU136
 602 0056 01AB     		add	r3, sp, #4
 603 0058 0DA9     		add	r1, sp, #52
 604 005a A3A8     		add	r0, sp, #652
 605              	.LVL36:
 247:IRLoader.h    ****         if (result != FR_OK || bytesReadR != sizeof(WAVHeader)) {
 606              		.loc 10 247 24 view .LVU137
 607 005c FFF7FEFF 		bl	f_read
 608              	.LVL37:
 248:IRLoader.h    ****             f_close(&fileL);
 609              		.loc 10 248 9 is_stmt 1 view .LVU138
 610 0060 0028     		cmp	r0, #0
 611 0062 EDD1     		bne	.L100
 248:IRLoader.h    ****             f_close(&fileL);
 612              		.loc 10 248 29 is_stmt 0 view .LVU139
 613 0064 019B     		ldr	r3, [sp, #4]
 614 0066 2C2B     		cmp	r3, #44
 615 0068 EAD1     		bne	.L100
 255:IRLoader.h    ****             strncmp(headerL.wave, "WAVE", 4) != 0 || 
 616              		.loc 10 255 9 is_stmt 1 view .LVU140
 255:IRLoader.h    ****             strncmp(headerL.wave, "WAVE", 4) != 0 || 
 617              		.loc 10 255 20 is_stmt 0 view .LVU141
 618 006a 0422     		movs	r2, #4
 619 006c 9649     		ldr	r1, .L101+8
 620 006e 02A8     		add	r0, sp, #8
 621              	.LVL38:
 255:IRLoader.h    ****             strncmp(headerL.wave, "WAVE", 4) != 0 || 
 622              		.loc 10 255 20 view .LVU142
 623 0070 FFF7FEFF 		bl	strncmp
 624              	.LVL39:
 255:IRLoader.h    ****             strncmp(headerL.wave, "WAVE", 4) != 0 || 
 625              		.loc 10 255 9 view .LVU143
 626 0074 0028     		cmp	r0, #0
 627 0076 E3D1     		bne	.L100
ARM GAS  /tmp/cch2Dr4w.s 			page 43


 256:IRLoader.h    ****             strncmp(headerL.fmt, "fmt ", 4) != 0 || 
 628              		.loc 10 256 20 view .LVU144
 629 0078 0422     		movs	r2, #4
 630 007a 9449     		ldr	r1, .L101+12
 631 007c 04A8     		add	r0, sp, #16
 632 007e FFF7FEFF 		bl	strncmp
 633              	.LVL40:
 255:IRLoader.h    ****             strncmp(headerL.wave, "WAVE", 4) != 0 || 
 634              		.loc 10 255 51 view .LVU145
 635 0082 0028     		cmp	r0, #0
 636 0084 DCD1     		bne	.L100
 257:IRLoader.h    ****             strncmp(headerL.data, "data", 4) != 0 ||
 637              		.loc 10 257 20 view .LVU146
 638 0086 0422     		movs	r2, #4
 639 0088 9149     		ldr	r1, .L101+16
 640 008a 05A8     		add	r0, sp, #20
 641 008c FFF7FEFF 		bl	strncmp
 642              	.LVL41:
 256:IRLoader.h    ****             strncmp(headerL.fmt, "fmt ", 4) != 0 || 
 643              		.loc 10 256 51 view .LVU147
 644 0090 0028     		cmp	r0, #0
 645 0092 D5D1     		bne	.L100
 258:IRLoader.h    ****             strncmp(headerR.riff, "RIFF", 4) != 0 || 
 646              		.loc 10 258 20 view .LVU148
 647 0094 0422     		movs	r2, #4
 648 0096 8F49     		ldr	r1, .L101+20
 649 0098 0BA8     		add	r0, sp, #44
 650 009a FFF7FEFF 		bl	strncmp
 651              	.LVL42:
 257:IRLoader.h    ****             strncmp(headerL.data, "data", 4) != 0 ||
 652              		.loc 10 257 50 view .LVU149
 653 009e 0028     		cmp	r0, #0
 654 00a0 CED1     		bne	.L100
 259:IRLoader.h    ****             strncmp(headerR.wave, "WAVE", 4) != 0 || 
 655              		.loc 10 259 20 view .LVU150
 656 00a2 0422     		movs	r2, #4
 657 00a4 8849     		ldr	r1, .L101+8
 658 00a6 0DA8     		add	r0, sp, #52
 659 00a8 FFF7FEFF 		bl	strncmp
 660              	.LVL43:
 258:IRLoader.h    ****             strncmp(headerR.riff, "RIFF", 4) != 0 || 
 661              		.loc 10 258 51 view .LVU151
 662 00ac 0028     		cmp	r0, #0
 663 00ae C7D1     		bne	.L100
 260:IRLoader.h    ****             strncmp(headerR.fmt, "fmt ", 4) != 0 || 
 664              		.loc 10 260 20 view .LVU152
 665 00b0 0422     		movs	r2, #4
 666 00b2 8649     		ldr	r1, .L101+12
 667 00b4 0FA8     		add	r0, sp, #60
 668 00b6 FFF7FEFF 		bl	strncmp
 669              	.LVL44:
 259:IRLoader.h    ****             strncmp(headerR.wave, "WAVE", 4) != 0 || 
 670              		.loc 10 259 51 view .LVU153
 671 00ba 0028     		cmp	r0, #0
 672 00bc C0D1     		bne	.L100
 261:IRLoader.h    ****             strncmp(headerR.data, "data", 4) != 0) {
 673              		.loc 10 261 20 view .LVU154
ARM GAS  /tmp/cch2Dr4w.s 			page 44


 674 00be 0422     		movs	r2, #4
 675 00c0 8349     		ldr	r1, .L101+16
 676 00c2 10A8     		add	r0, sp, #64
 677 00c4 FFF7FEFF 		bl	strncmp
 678              	.LVL45:
 260:IRLoader.h    ****             strncmp(headerR.fmt, "fmt ", 4) != 0 || 
 679              		.loc 10 260 51 view .LVU155
 680 00c8 0028     		cmp	r0, #0
 681 00ca B9D1     		bne	.L100
 262:IRLoader.h    ****             f_close(&fileL);
 682              		.loc 10 262 20 view .LVU156
 683 00cc 0422     		movs	r2, #4
 684 00ce 8149     		ldr	r1, .L101+20
 685 00d0 16A8     		add	r0, sp, #88
 686 00d2 FFF7FEFF 		bl	strncmp
 687              	.LVL46:
 261:IRLoader.h    ****             strncmp(headerR.data, "data", 4) != 0) {
 688              		.loc 10 261 50 view .LVU157
 689 00d6 0446     		mov	r4, r0
 690 00d8 0028     		cmp	r0, #0
 691 00da B1D1     		bne	.L100
 269:IRLoader.h    ****             f_close(&fileL);
 692              		.loc 10 269 9 is_stmt 1 view .LVU158
 693 00dc BDF81C30 		ldrh	r3, [sp, #28]
 694 00e0 012B     		cmp	r3, #1
 695 00e2 ADD1     		bne	.L100
 269:IRLoader.h    ****             f_close(&fileL);
 696              		.loc 10 269 38 is_stmt 0 view .LVU159
 697 00e4 BDF84830 		ldrh	r3, [sp, #72]
 698 00e8 012B     		cmp	r3, #1
 699 00ea A9D1     		bne	.L100
 276:IRLoader.h    ****         uint32_t numSamplesR = headerR.dataSize / (headerR.numChannels * (headerR.bitsPerSample / 8
 700              		.loc 10 276 9 is_stmt 1 view .LVU160
 701              	.LVL47:
 277:IRLoader.h    ****         
 702              		.loc 10 277 9 view .LVU161
 280:IRLoader.h    ****         
 703              		.loc 10 280 9 view .LVU162
 283:IRLoader.h    ****             numSamples = MAX_IR_LENGTH;
 704              		.loc 10 283 9 view .LVU163
 276:IRLoader.h    ****         uint32_t numSamplesR = headerR.dataSize / (headerR.numChannels * (headerR.bitsPerSample / 8
 705              		.loc 10 276 97 is_stmt 0 view .LVU164
 706 00ec BDF82A30 		ldrh	r3, [sp, #42]
 276:IRLoader.h    ****         uint32_t numSamplesR = headerR.dataSize / (headerR.numChannels * (headerR.bitsPerSample / 8
 707              		.loc 10 276 60 view .LVU165
 708 00f0 BDF81E70 		ldrh	r7, [sp, #30]
 276:IRLoader.h    ****         uint32_t numSamplesR = headerR.dataSize / (headerR.numChannels * (headerR.bitsPerSample / 8
 709              		.loc 10 276 97 view .LVU166
 710 00f4 DB08     		lsrs	r3, r3, #3
 277:IRLoader.h    ****         
 711              		.loc 10 277 60 view .LVU167
 712 00f6 BDF84A20 		ldrh	r2, [sp, #74]
 276:IRLoader.h    ****         uint32_t numSamplesR = headerR.dataSize / (headerR.numChannels * (headerR.bitsPerSample / 8
 713              		.loc 10 276 72 view .LVU168
 714 00fa 7B43     		muls	r3, r7, r3
 276:IRLoader.h    ****         uint32_t numSamplesR = headerR.dataSize / (headerR.numChannels * (headerR.bitsPerSample / 8
 715              		.loc 10 276 18 view .LVU169
ARM GAS  /tmp/cch2Dr4w.s 			page 45


 716 00fc 0C9F     		ldr	r7, [sp, #48]
 717 00fe B7FBF3F7 		udiv	r7, r7, r3
 277:IRLoader.h    ****         
 718              		.loc 10 277 97 view .LVU170
 719 0102 BDF85630 		ldrh	r3, [sp, #86]
 720 0106 DB08     		lsrs	r3, r3, #3
 277:IRLoader.h    ****         
 721              		.loc 10 277 72 view .LVU171
 722 0108 5343     		muls	r3, r2, r3
 277:IRLoader.h    ****         
 723              		.loc 10 277 18 view .LVU172
 724 010a 179A     		ldr	r2, [sp, #92]
 725 010c B2FBF3F3 		udiv	r3, r2, r3
 726 0110 9F42     		cmp	r7, r3
 727 0112 28BF     		it	cs
 728 0114 1F46     		movcs	r7, r3
 729 0116 B7F5805F 		cmp	r7, #4096
 730 011a 28BF     		it	cs
 731 011c 4FF48057 		movcs	r7, #4096
 732              	.LVL48:
 288:IRLoader.h    ****         float* irBufferR = new float[numSamples];
 733              		.loc 10 288 48 view .LVU173
 734 0120 4FEA8708 		lsl	r8, r7, #2
 735 0124 4046     		mov	r0, r8
 736 0126 FFF7FEFF 		bl	_Znaj
 737              	.LVL49:
 288:IRLoader.h    ****         float* irBufferR = new float[numSamples];
 738              		.loc 10 288 48 view .LVU174
 739 012a 0546     		mov	r5, r0
 740              	.LVL50:
 289:IRLoader.h    ****         
 741              		.loc 10 289 9 is_stmt 1 view .LVU175
 289:IRLoader.h    ****         
 742              		.loc 10 289 48 is_stmt 0 view .LVU176
 743 012c 4046     		mov	r0, r8
 744              	.LVL51:
 289:IRLoader.h    ****         
 745              		.loc 10 289 48 view .LVU177
 746 012e FFF7FEFF 		bl	_Znaj
 747              	.LVL52:
 748              	.LBB338:
 300:IRLoader.h    ****             // 16-bit samples
 749              		.loc 10 300 21 view .LVU178
 750 0132 BDF82A30 		ldrh	r3, [sp, #42]
 751              	.LBE338:
 289:IRLoader.h    ****         
 752              		.loc 10 289 48 view .LVU179
 753 0136 0646     		mov	r6, r0
 754              	.LVL53:
 291:IRLoader.h    ****             if (irBufferL) delete[] irBufferL;
 755              		.loc 10 291 9 is_stmt 1 view .LVU180
 300:IRLoader.h    ****             // 16-bit samples
 756              		.loc 10 300 9 view .LVU181
 757              	.LBB339:
 758 0138 102B     		cmp	r3, #16
 759 013a 38D1     		bne	.L41
 760              	.LBB305:
ARM GAS  /tmp/cch2Dr4w.s 			page 46


 302:IRLoader.h    ****             
 761              		.loc 10 302 13 view .LVU182
 302:IRLoader.h    ****             
 762              		.loc 10 302 68 is_stmt 0 view .LVU183
 763 013c BDF81E00 		ldrh	r0, [sp, #30]
 764              	.LVL54:
 302:IRLoader.h    ****             
 765              		.loc 10 302 79 view .LVU184
 766 0140 7843     		muls	r0, r7, r0
 767 0142 4000     		lsls	r0, r0, #1
 768 0144 FFF7FEFF 		bl	_Znaj
 769              	.LVL55:
 312:IRLoader.h    ****             
 770              		.loc 10 312 70 view .LVU185
 771 0148 BDF81E20 		ldrh	r2, [sp, #30]
 312:IRLoader.h    ****             
 772              		.loc 10 312 28 view .LVU186
 773 014c 6B46     		mov	r3, sp
 774 014e 0146     		mov	r1, r0
 312:IRLoader.h    ****             
 775              		.loc 10 312 82 view .LVU187
 776 0150 7A43     		muls	r2, r7, r2
 302:IRLoader.h    ****             
 777              		.loc 10 302 79 view .LVU188
 778 0152 8146     		mov	r9, r0
 779              	.LVL56:
 304:IRLoader.h    ****                 delete[] irBufferL;
 780              		.loc 10 304 13 is_stmt 1 view .LVU189
 312:IRLoader.h    ****             
 781              		.loc 10 312 13 view .LVU190
 312:IRLoader.h    ****             
 782              		.loc 10 312 28 is_stmt 0 view .LVU191
 783 0154 18A8     		add	r0, sp, #96
 784              	.LVL57:
 312:IRLoader.h    ****             
 785              		.loc 10 312 28 view .LVU192
 786 0156 5200     		lsls	r2, r2, #1
 787 0158 FFF7FEFF 		bl	f_read
 788              	.LVL58:
 314:IRLoader.h    ****                 delete[] tempBuffer;
 789              		.loc 10 314 13 is_stmt 1 view .LVU193
 790 015c 0346     		mov	r3, r0
 791 015e C0B9     		cbnz	r0, .L42
 792              	.LBB304:
 326:IRLoader.h    ****                     irBufferL[i] = (float)tempBuffer[i*2] / 32768.0f;
 793              		.loc 10 326 29 is_stmt 0 view .LVU194
 794 0160 BDF81E10 		ldrh	r1, [sp, #30]
 795 0164 2A46     		mov	r2, r5
 796              	.LVL59:
 797              	.L43:
 324:IRLoader.h    ****                 // If stereo, use left channel
 798              		.loc 10 324 36 is_stmt 1 view .LVU195
 799 0166 9F42     		cmp	r7, r3
 800 0168 64D0     		beq	.L51
 326:IRLoader.h    ****                     irBufferL[i] = (float)tempBuffer[i*2] / 32768.0f;
 801              		.loc 10 326 17 view .LVU196
 802 016a 0229     		cmp	r1, #2
ARM GAS  /tmp/cch2Dr4w.s 			page 47


 803 016c 9FED5A7A 		vldr.32	s14, .L101+24
 327:IRLoader.h    ****                 } else {
 804              		.loc 10 327 21 view .LVU197
 805 0170 02F10402 		add	r2, r2, #4
 327:IRLoader.h    ****                 } else {
 806              		.loc 10 327 36 is_stmt 0 view .LVU198
 807 0174 0CBF     		ite	eq
 808 0176 39F92300 		ldrsheq	r0, [r9, r3, lsl #2]
 329:IRLoader.h    ****                 }
 809              		.loc 10 329 21 is_stmt 1 view .LVU199
 329:IRLoader.h    ****                 }
 810              		.loc 10 329 36 is_stmt 0 view .LVU200
 811 017a 39F91300 		ldrshne	r0, [r9, r3, lsl #1]
 324:IRLoader.h    ****                 // If stereo, use left channel
 812              		.loc 10 324 13 view .LVU201
 813 017e 0133     		adds	r3, r3, #1
 814              	.LVL60:
 329:IRLoader.h    ****                 }
 815              		.loc 10 329 36 view .LVU202
 816 0180 07EE900A 		vmov	s15, r0	@ int
 817 0184 F8EEE77A 		vcvt.f32.s32	s15, s15
 329:IRLoader.h    ****                 }
 818              		.loc 10 329 57 view .LVU203
 819 0188 67EE877A 		vmul.f32	s15, s15, s14
 329:IRLoader.h    ****                 }
 820              		.loc 10 329 34 view .LVU204
 821 018c 42ED017A 		vstr.32	s15, [r2, #-4]
 324:IRLoader.h    ****                 // If stereo, use left channel
 822              		.loc 10 324 13 is_stmt 1 view .LVU205
 823              	.LVL61:
 324:IRLoader.h    ****                 // If stereo, use left channel
 824              		.loc 10 324 13 is_stmt 0 view .LVU206
 825 0190 E9E7     		b	.L43
 826              	.LVL62:
 827              	.L42:
 324:IRLoader.h    ****                 // If stereo, use left channel
 828              		.loc 10 324 13 view .LVU207
 829              	.LBE304:
 315:IRLoader.h    ****                 delete[] irBufferL;
 830              		.loc 10 315 17 is_stmt 1 view .LVU208
 315:IRLoader.h    ****                 delete[] irBufferL;
 831              		.loc 10 315 26 is_stmt 0 view .LVU209
 832 0192 4846     		mov	r0, r9
 833              	.LVL63:
 315:IRLoader.h    ****                 delete[] irBufferL;
 834              		.loc 10 315 26 view .LVU210
 835 0194 FFF7FEFF 		bl	_ZdaPv
 836              	.LVL64:
 837              	.L99:
 316:IRLoader.h    ****                 delete[] irBufferR;
 838              		.loc 10 316 17 is_stmt 1 view .LVU211
 316:IRLoader.h    ****                 delete[] irBufferR;
 839              		.loc 10 316 26 is_stmt 0 view .LVU212
 840 0198 2846     		mov	r0, r5
 841 019a FFF7FEFF 		bl	_ZdaPv
 842              	.LVL65:
 317:IRLoader.h    ****                 f_close(&fileL);
ARM GAS  /tmp/cch2Dr4w.s 			page 48


 843              		.loc 10 317 17 is_stmt 1 view .LVU213
 317:IRLoader.h    ****                 f_close(&fileL);
 844              		.loc 10 317 26 is_stmt 0 view .LVU214
 845 019e 3046     		mov	r0, r6
 846 01a0 FFF7FEFF 		bl	_ZdaPv
 847              	.LVL66:
 318:IRLoader.h    ****                 f_close(&fileR);
 848              		.loc 10 318 17 is_stmt 1 view .LVU215
 318:IRLoader.h    ****                 f_close(&fileR);
 849              		.loc 10 318 24 is_stmt 0 view .LVU216
 850 01a4 18A8     		add	r0, sp, #96
 851 01a6 FFF7FEFF 		bl	f_close
 852              	.LVL67:
 319:IRLoader.h    ****                 return false;
 853              		.loc 10 319 17 is_stmt 1 view .LVU217
 319:IRLoader.h    ****                 return false;
 854              		.loc 10 319 24 is_stmt 0 view .LVU218
 855 01aa A3A8     		add	r0, sp, #652
 856 01ac 3AE7     		b	.L98
 857              	.LVL68:
 858              	.L41:
 319:IRLoader.h    ****                 return false;
 859              		.loc 10 319 24 view .LVU219
 860              	.LBE305:
 861              	.LBE339:
 334:IRLoader.h    ****             // 24-bit samples
 862              		.loc 10 334 16 is_stmt 1 view .LVU220
 863              	.LBB340:
 864              	.LBB306:
 865 01ae 182B     		cmp	r3, #24
 866 01b0 74D1     		bne	.L48
 867              	.LBB307:
 336:IRLoader.h    ****             
 868              		.loc 10 336 13 view .LVU221
 336:IRLoader.h    ****             
 869              		.loc 10 336 68 is_stmt 0 view .LVU222
 870 01b2 BDF81E00 		ldrh	r0, [sp, #30]
 871              	.LVL69:
 336:IRLoader.h    ****             
 872              		.loc 10 336 80 view .LVU223
 873 01b6 7843     		muls	r0, r7, r0
 336:IRLoader.h    ****             
 874              		.loc 10 336 83 view .LVU224
 875 01b8 00EB4000 		add	r0, r0, r0, lsl #1
 876 01bc FFF7FEFF 		bl	_Znaj
 877              	.LVL70:
 346:IRLoader.h    ****             
 878              		.loc 10 346 70 view .LVU225
 879 01c0 BDF81E20 		ldrh	r2, [sp, #30]
 336:IRLoader.h    ****             
 880              		.loc 10 336 83 view .LVU226
 881 01c4 8146     		mov	r9, r0
 882              	.LVL71:
 338:IRLoader.h    ****                 delete[] irBufferL;
 883              		.loc 10 338 13 is_stmt 1 view .LVU227
 346:IRLoader.h    ****             
 884              		.loc 10 346 13 view .LVU228
ARM GAS  /tmp/cch2Dr4w.s 			page 49


 346:IRLoader.h    ****             
 885              		.loc 10 346 28 is_stmt 0 view .LVU229
 886 01c6 0146     		mov	r1, r0
 346:IRLoader.h    ****             
 887              		.loc 10 346 82 view .LVU230
 888 01c8 7A43     		muls	r2, r7, r2
 346:IRLoader.h    ****             
 889              		.loc 10 346 28 view .LVU231
 890 01ca 6B46     		mov	r3, sp
 891 01cc 18A8     		add	r0, sp, #96
 892              	.LVL72:
 346:IRLoader.h    ****             
 893              		.loc 10 346 28 view .LVU232
 894 01ce 02EB4202 		add	r2, r2, r2, lsl #1
 895 01d2 FFF7FEFF 		bl	f_read
 896              	.LVL73:
 348:IRLoader.h    ****                 delete[] tempBuffer;
 897              		.loc 10 348 13 is_stmt 1 view .LVU233
 898 01d6 0028     		cmp	r0, #0
 899 01d8 DBD1     		bne	.L42
 900              	.LBB308:
 901              	.LBB309:
 360:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuff
 902              		.loc 10 360 29 is_stmt 0 view .LVU234
 903 01da BDF81E40 		ldrh	r4, [sp, #30]
 904 01de 4846     		mov	r0, r9
 905              	.LVL74:
 360:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuff
 906              		.loc 10 360 29 view .LVU235
 907 01e0 2946     		mov	r1, r5
 908 01e2 08EB050C 		add	ip, r8, r5
 909 01e6 4A46     		mov	r2, r9
 910              	.L50:
 360:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuff
 911              		.loc 10 360 29 view .LVU236
 912              	.LBE309:
 358:IRLoader.h    ****                 // If stereo, use left channel
 913              		.loc 10 358 36 is_stmt 1 view .LVU237
 914 01e8 6145     		cmp	r1, ip
 915 01ea 23D0     		beq	.L51
 916              	.LBE308:
 917              	.LBE307:
 918              	.LBE306:
 919              	.LBE340:
 360:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuff
 920              		.loc 10 360 17 view .LVU238
 921              	.LBB341:
 922              	.LBB317:
 923              	.LBB316:
 924              	.LBB315:
 925              	.LBB313:
 926 01ec 022C     		cmp	r4, #2
 927 01ee 9FED3B7A 		vldr.32	s14, .L101+28
 928 01f2 16D1     		bne	.L52
 929              	.LBB310:
 361:IRLoader.h    ****                     sample >>= 8;
 930              		.loc 10 361 21 view .LVU239
ARM GAS  /tmp/cch2Dr4w.s 			page 50


 361:IRLoader.h    ****                     sample >>= 8;
 931              		.loc 10 361 80 is_stmt 0 view .LVU240
 932 01f4 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 361:IRLoader.h    ****                     sample >>= 8;
 933              		.loc 10 361 53 view .LVU241
 934 01f6 90F800E0 		ldrb	lr, [r0]	@ zero_extendqisi2
 361:IRLoader.h    ****                     sample >>= 8;
 935              		.loc 10 361 82 view .LVU242
 936 01fa 1B04     		lsls	r3, r3, #16
 361:IRLoader.h    ****                     sample >>= 8;
 937              		.loc 10 361 29 view .LVU243
 938 01fc 43EA0E23 		orr	r3, r3, lr, lsl #8
 361:IRLoader.h    ****                     sample >>= 8;
 939              		.loc 10 361 108 view .LVU244
 940 0200 90F802E0 		ldrb	lr, [r0, #2]	@ zero_extendqisi2
 941              	.L95:
 942              	.LBE310:
 943              	.LBB311:
 365:IRLoader.h    ****                     sample >>= 8;
 944              		.loc 10 365 29 view .LVU245
 945 0204 43EA0E63 		orr	r3, r3, lr, lsl #24
 946              	.LVL75:
 366:IRLoader.h    ****                     irBufferL[i] = (float)sample / 8388608.0f;
 947              		.loc 10 366 21 is_stmt 1 view .LVU246
 367:IRLoader.h    ****                 }
 948              		.loc 10 367 21 view .LVU247
 949 0208 0630     		adds	r0, r0, #6
 950 020a 0431     		adds	r1, r1, #4
 951 020c 0332     		adds	r2, r2, #3
 366:IRLoader.h    ****                     irBufferL[i] = (float)sample / 8388608.0f;
 952              		.loc 10 366 28 is_stmt 0 view .LVU248
 953 020e 1B12     		asrs	r3, r3, #8
 954              	.LVL76:
 366:IRLoader.h    ****                     irBufferL[i] = (float)sample / 8388608.0f;
 955              		.loc 10 366 28 view .LVU249
 956 0210 07EE903A 		vmov	s15, r3	@ int
 367:IRLoader.h    ****                 }
 957              		.loc 10 367 36 view .LVU250
 958 0214 F8EEE77A 		vcvt.f32.s32	s15, s15
 367:IRLoader.h    ****                 }
 959              		.loc 10 367 50 view .LVU251
 960 0218 67EE877A 		vmul.f32	s15, s15, s14
 367:IRLoader.h    ****                 }
 961              		.loc 10 367 34 view .LVU252
 962 021c 41ED017A 		vstr.32	s15, [r1, #-4]
 963              	.LBE311:
 964              	.LBE313:
 358:IRLoader.h    ****                 // If stereo, use left channel
 965              		.loc 10 358 13 is_stmt 1 view .LVU253
 966 0220 E2E7     		b	.L50
 967              	.LVL77:
 968              	.L52:
 969              	.LBB314:
 970              	.LBB312:
 365:IRLoader.h    ****                     sample >>= 8;
 971              		.loc 10 365 21 view .LVU254
 365:IRLoader.h    ****                     sample >>= 8;
ARM GAS  /tmp/cch2Dr4w.s 			page 51


 972              		.loc 10 365 80 is_stmt 0 view .LVU255
 973 0222 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 365:IRLoader.h    ****                     sample >>= 8;
 974              		.loc 10 365 53 view .LVU256
 975 0224 92F800E0 		ldrb	lr, [r2]	@ zero_extendqisi2
 365:IRLoader.h    ****                     sample >>= 8;
 976              		.loc 10 365 82 view .LVU257
 977 0228 1B04     		lsls	r3, r3, #16
 365:IRLoader.h    ****                     sample >>= 8;
 978              		.loc 10 365 29 view .LVU258
 979 022a 43EA0E23 		orr	r3, r3, lr, lsl #8
 365:IRLoader.h    ****                     sample >>= 8;
 980              		.loc 10 365 108 view .LVU259
 981 022e 92F802E0 		ldrb	lr, [r2, #2]	@ zero_extendqisi2
 982 0232 E7E7     		b	.L95
 983              	.LVL78:
 984              	.L51:
 365:IRLoader.h    ****                     sample >>= 8;
 985              		.loc 10 365 108 view .LVU260
 986              	.LBE312:
 987              	.LBE314:
 988              	.LBE315:
 371:IRLoader.h    ****         } else if (headerL.bitsPerSample == 32) {
 989              		.loc 10 371 13 is_stmt 1 view .LVU261
 371:IRLoader.h    ****         } else if (headerL.bitsPerSample == 32) {
 990              		.loc 10 371 22 is_stmt 0 view .LVU262
 991 0234 4846     		mov	r0, r9
 992 0236 FFF7FEFF 		bl	_ZdaPv
 993              	.LVL79:
 994              	.L47:
 995              	.LBE316:
 996              	.LBE317:
 997              	.LBE341:
 393:IRLoader.h    ****             // 16-bit samples
 998              		.loc 10 393 9 is_stmt 1 view .LVU263
 999              	.LBB342:
 393:IRLoader.h    ****             // 16-bit samples
 1000              		.loc 10 393 21 is_stmt 0 view .LVU264
 1001 023a BDF85630 		ldrh	r3, [sp, #86]
 393:IRLoader.h    ****             // 16-bit samples
 1002              		.loc 10 393 9 view .LVU265
 1003 023e 102B     		cmp	r3, #16
 1004 0240 50D1     		bne	.L55
 1005              	.LBB332:
 395:IRLoader.h    ****             
 1006              		.loc 10 395 13 is_stmt 1 view .LVU266
 395:IRLoader.h    ****             
 1007              		.loc 10 395 68 is_stmt 0 view .LVU267
 1008 0242 BDF84A00 		ldrh	r0, [sp, #74]
 395:IRLoader.h    ****             
 1009              		.loc 10 395 79 view .LVU268
 1010 0246 7843     		muls	r0, r7, r0
 1011 0248 4000     		lsls	r0, r0, #1
 1012 024a FFF7FEFF 		bl	_Znaj
 1013              	.LVL80:
 405:IRLoader.h    ****             
 1014              		.loc 10 405 70 view .LVU269
ARM GAS  /tmp/cch2Dr4w.s 			page 52


 1015 024e BDF84A20 		ldrh	r2, [sp, #74]
 405:IRLoader.h    ****             
 1016              		.loc 10 405 28 view .LVU270
 1017 0252 01AB     		add	r3, sp, #4
 1018 0254 0146     		mov	r1, r0
 405:IRLoader.h    ****             
 1019              		.loc 10 405 82 view .LVU271
 1020 0256 7A43     		muls	r2, r7, r2
 395:IRLoader.h    ****             
 1021              		.loc 10 395 79 view .LVU272
 1022 0258 0446     		mov	r4, r0
 1023              	.LVL81:
 397:IRLoader.h    ****                 delete[] irBufferL;
 1024              		.loc 10 397 13 is_stmt 1 view .LVU273
 405:IRLoader.h    ****             
 1025              		.loc 10 405 13 view .LVU274
 405:IRLoader.h    ****             
 1026              		.loc 10 405 28 is_stmt 0 view .LVU275
 1027 025a A3A8     		add	r0, sp, #652
 1028              	.LVL82:
 405:IRLoader.h    ****             
 1029              		.loc 10 405 28 view .LVU276
 1030 025c 5200     		lsls	r2, r2, #1
 1031 025e FFF7FEFF 		bl	f_read
 1032              	.LVL83:
 407:IRLoader.h    ****                 delete[] tempBuffer;
 1033              		.loc 10 407 13 is_stmt 1 view .LVU277
 1034 0262 0346     		mov	r3, r0
 1035 0264 0028     		cmp	r0, #0
 1036 0266 77D1     		bne	.L63
 1037              	.LBB333:
 419:IRLoader.h    ****                     irBufferR[i] = (float)tempBuffer[i*2+1] / 32768.0f;
 1038              		.loc 10 419 29 is_stmt 0 view .LVU278
 1039 0268 BDF84A10 		ldrh	r1, [sp, #74]
 1040 026c 3246     		mov	r2, r6
 1041              	.LVL84:
 1042              	.L57:
 417:IRLoader.h    ****                 // If stereo, use right channel
 1043              		.loc 10 417 36 is_stmt 1 view .LVU279
 1044 026e 9F42     		cmp	r7, r3
 1045 0270 7FD0     		beq	.L65
 419:IRLoader.h    ****                     irBufferR[i] = (float)tempBuffer[i*2+1] / 32768.0f;
 1046              		.loc 10 419 17 view .LVU280
 1047 0272 0229     		cmp	r1, #2
 1048 0274 9FED187A 		vldr.32	s14, .L101+24
 420:IRLoader.h    ****                 } else {
 1049              		.loc 10 420 21 view .LVU281
 1050 0278 02F10402 		add	r2, r2, #4
 420:IRLoader.h    ****                 } else {
 1051              		.loc 10 420 59 is_stmt 0 view .LVU282
 1052 027c 0ABF     		itet	eq
 1053 027e A01C     		addeq	r0, r4, #2
 422:IRLoader.h    ****                 }
 1054              		.loc 10 422 36 view .LVU283
 1055 0280 34F91300 		ldrshne	r0, [r4, r3, lsl #1]
 420:IRLoader.h    ****                 } else {
 1056              		.loc 10 420 36 view .LVU284
ARM GAS  /tmp/cch2Dr4w.s 			page 53


 1057 0284 30F92300 		ldrsheq	r0, [r0, r3, lsl #2]
 422:IRLoader.h    ****                 }
 1058              		.loc 10 422 21 is_stmt 1 view .LVU285
 417:IRLoader.h    ****                 // If stereo, use right channel
 1059              		.loc 10 417 13 is_stmt 0 view .LVU286
 1060 0288 0133     		adds	r3, r3, #1
 1061              	.LVL85:
 422:IRLoader.h    ****                 }
 1062              		.loc 10 422 36 view .LVU287
 1063 028a 07EE900A 		vmov	s15, r0	@ int
 1064 028e F8EEE77A 		vcvt.f32.s32	s15, s15
 422:IRLoader.h    ****                 }
 1065              		.loc 10 422 57 view .LVU288
 1066 0292 67EE877A 		vmul.f32	s15, s15, s14
 422:IRLoader.h    ****                 }
 1067              		.loc 10 422 34 view .LVU289
 1068 0296 42ED017A 		vstr.32	s15, [r2, #-4]
 417:IRLoader.h    ****                 // If stereo, use right channel
 1069              		.loc 10 417 13 is_stmt 1 view .LVU290
 1070              	.LVL86:
 417:IRLoader.h    ****                 // If stereo, use right channel
 1071              		.loc 10 417 13 is_stmt 0 view .LVU291
 1072 029a E8E7     		b	.L57
 1073              	.LVL87:
 1074              	.L48:
 417:IRLoader.h    ****                 // If stereo, use right channel
 1075              		.loc 10 417 13 view .LVU292
 1076              	.LBE333:
 1077              	.LBE332:
 1078              	.LBE342:
 1079              	.LBB343:
 1080              	.LBB318:
 372:IRLoader.h    ****             // 32-bit samples (assume float)
 1081              		.loc 10 372 16 is_stmt 1 view .LVU293
 1082 029c 202B     		cmp	r3, #32
 1083 029e 7FF47BAF 		bne	.L99
 374:IRLoader.h    ****             
 1084              		.loc 10 374 13 view .LVU294
 374:IRLoader.h    ****             
 1085              		.loc 10 374 28 is_stmt 0 view .LVU295
 1086 02a2 6B46     		mov	r3, sp
 1087 02a4 4246     		mov	r2, r8
 1088 02a6 2946     		mov	r1, r5
 1089 02a8 18A8     		add	r0, sp, #96
 1090              	.LVL88:
 374:IRLoader.h    ****             
 1091              		.loc 10 374 28 view .LVU296
 1092 02aa FFF7FEFF 		bl	f_read
 1093              	.LVL89:
 376:IRLoader.h    ****                 delete[] irBufferL;
 1094              		.loc 10 376 13 is_stmt 1 view .LVU297
 1095 02ae 0028     		cmp	r0, #0
 1096 02b0 C3D0     		beq	.L47
 1097              	.LVL90:
 1098              	.L68:
 376:IRLoader.h    ****                 delete[] irBufferL;
 1099              		.loc 10 376 13 is_stmt 0 view .LVU298
ARM GAS  /tmp/cch2Dr4w.s 			page 54


 1100              	.LBE318:
 1101              	.LBE343:
 1102              	.LBB344:
 1103              	.LBB334:
 478:IRLoader.h    ****             delete[] irBufferR;
 1104              		.loc 10 478 13 is_stmt 1 view .LVU299
 478:IRLoader.h    ****             delete[] irBufferR;
 1105              		.loc 10 478 22 is_stmt 0 view .LVU300
 1106 02b2 2846     		mov	r0, r5
 1107 02b4 FFF7FEFF 		bl	_ZdaPv
 1108              	.LVL91:
 479:IRLoader.h    ****             f_close(&fileL);
 1109              		.loc 10 479 13 is_stmt 1 view .LVU301
 479:IRLoader.h    ****             f_close(&fileL);
 1110              		.loc 10 479 22 is_stmt 0 view .LVU302
 1111 02b8 3046     		mov	r0, r6
 1112 02ba FFF7FEFF 		bl	_ZdaPv
 1113              	.LVL92:
 1114 02be BFE6     		b	.L100
 1115              	.L102:
 1116              		.align	2
 1117              	.L101:
 1118 02c0 00000000 		.word	.LC0
 1119 02c4 0C000000 		.word	.LC1
 1120 02c8 19000000 		.word	.LC2
 1121 02cc 1E000000 		.word	.LC3
 1122 02d0 23000000 		.word	.LC4
 1123 02d4 28000000 		.word	.LC5
 1124 02d8 00000038 		.word	939524096
 1125 02dc 00000034 		.word	872415232
 1126 02e0 00000000 		.word	0
 1127              	.L55:
 479:IRLoader.h    ****             f_close(&fileL);
 1128              		.loc 10 479 22 view .LVU303
 1129              	.LBE334:
 1130              	.LBE344:
 427:IRLoader.h    ****             // 24-bit samples
 1131              		.loc 10 427 16 is_stmt 1 view .LVU304
 1132              	.LBB345:
 1133              	.LBB335:
 1134 02e4 182B     		cmp	r3, #24
 1135 02e6 6DD1     		bne	.L62
 1136              	.LBB321:
 429:IRLoader.h    ****             
 1137              		.loc 10 429 13 view .LVU305
 429:IRLoader.h    ****             
 1138              		.loc 10 429 68 is_stmt 0 view .LVU306
 1139 02e8 BDF84A00 		ldrh	r0, [sp, #74]
 429:IRLoader.h    ****             
 1140              		.loc 10 429 80 view .LVU307
 1141 02ec 7843     		muls	r0, r7, r0
 429:IRLoader.h    ****             
 1142              		.loc 10 429 83 view .LVU308
 1143 02ee 00EB4000 		add	r0, r0, r0, lsl #1
 1144 02f2 FFF7FEFF 		bl	_Znaj
 1145              	.LVL93:
 439:IRLoader.h    ****             
ARM GAS  /tmp/cch2Dr4w.s 			page 55


 1146              		.loc 10 439 70 view .LVU309
 1147 02f6 BDF84A20 		ldrh	r2, [sp, #74]
 429:IRLoader.h    ****             
 1148              		.loc 10 429 83 view .LVU310
 1149 02fa 0446     		mov	r4, r0
 1150              	.LVL94:
 431:IRLoader.h    ****                 delete[] irBufferL;
 1151              		.loc 10 431 13 is_stmt 1 view .LVU311
 439:IRLoader.h    ****             
 1152              		.loc 10 439 13 view .LVU312
 439:IRLoader.h    ****             
 1153              		.loc 10 439 28 is_stmt 0 view .LVU313
 1154 02fc 0146     		mov	r1, r0
 439:IRLoader.h    ****             
 1155              		.loc 10 439 82 view .LVU314
 1156 02fe 7A43     		muls	r2, r7, r2
 439:IRLoader.h    ****             
 1157              		.loc 10 439 28 view .LVU315
 1158 0300 01AB     		add	r3, sp, #4
 1159 0302 A3A8     		add	r0, sp, #652
 1160              	.LVL95:
 439:IRLoader.h    ****             
 1161              		.loc 10 439 28 view .LVU316
 1162 0304 02EB4202 		add	r2, r2, r2, lsl #1
 1163 0308 FFF7FEFF 		bl	f_read
 1164              	.LVL96:
 441:IRLoader.h    ****                 delete[] tempBuffer;
 1165              		.loc 10 441 13 is_stmt 1 view .LVU317
 1166 030c 20BB     		cbnz	r0, .L63
 1167              	.LBB322:
 1168              	.LBB323:
 453:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempBu
 1169              		.loc 10 453 29 is_stmt 0 view .LVU318
 1170 030e BDF84AC0 		ldrh	ip, [sp, #74]
 1171 0312 2046     		mov	r0, r4
 1172              	.LVL97:
 453:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempBu
 1173              		.loc 10 453 29 view .LVU319
 1174 0314 3146     		mov	r1, r6
 1175 0316 08EB060E 		add	lr, r8, r6
 1176 031a 2246     		mov	r2, r4
 1177              	.L64:
 453:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempBu
 1178              		.loc 10 453 29 view .LVU320
 1179              	.LBE323:
 451:IRLoader.h    ****                 // If stereo, use right channel
 1180              		.loc 10 451 36 is_stmt 1 view .LVU321
 1181 031c 7145     		cmp	r1, lr
 1182 031e 28D0     		beq	.L65
 1183              	.LBE322:
 1184              	.LBE321:
 1185              	.LBE335:
 1186              	.LBE345:
 453:IRLoader.h    ****                     int32_t sample = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempBu
 1187              		.loc 10 453 17 view .LVU322
 1188              	.LBB346:
 1189              	.LBB336:
ARM GAS  /tmp/cch2Dr4w.s 			page 56


 1190              	.LBB331:
 1191              	.LBB329:
 1192              	.LBB327:
 1193 0320 BCF1020F 		cmp	ip, #2
 1194 0324 1FED137A 		vldr.32	s14, .L101+28
 1195 0328 1AD1     		bne	.L66
 1196              	.LBB324:
 454:IRLoader.h    ****                     sample >>= 8;
 1197              		.loc 10 454 21 view .LVU323
 454:IRLoader.h    ****                     sample >>= 8;
 1198              		.loc 10 454 82 is_stmt 0 view .LVU324
 1199 032a 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 454:IRLoader.h    ****                     sample >>= 8;
 1200              		.loc 10 454 55 view .LVU325
 1201 032c 90F80390 		ldrb	r9, [r0, #3]	@ zero_extendqisi2
 454:IRLoader.h    ****                     sample >>= 8;
 1202              		.loc 10 454 84 view .LVU326
 1203 0330 1B04     		lsls	r3, r3, #16
 454:IRLoader.h    ****                     sample >>= 8;
 1204              		.loc 10 454 63 view .LVU327
 1205 0332 43EA0923 		orr	r3, r3, r9, lsl #8
 454:IRLoader.h    ****                     sample >>= 8;
 1206              		.loc 10 454 110 view .LVU328
 1207 0336 90F80590 		ldrb	r9, [r0, #5]	@ zero_extendqisi2
 1208              	.L97:
 1209              	.LBE324:
 1210              	.LBB325:
 458:IRLoader.h    ****                     sample >>= 8;
 1211              		.loc 10 458 29 view .LVU329
 1212 033a 43EA0963 		orr	r3, r3, r9, lsl #24
 1213              	.LVL98:
 459:IRLoader.h    ****                     irBufferR[i] = (float)sample / 8388608.0f;
 1214              		.loc 10 459 21 is_stmt 1 view .LVU330
 460:IRLoader.h    ****                 }
 1215              		.loc 10 460 21 view .LVU331
 1216 033e 0630     		adds	r0, r0, #6
 1217 0340 0431     		adds	r1, r1, #4
 1218 0342 0332     		adds	r2, r2, #3
 459:IRLoader.h    ****                     irBufferR[i] = (float)sample / 8388608.0f;
 1219              		.loc 10 459 28 is_stmt 0 view .LVU332
 1220 0344 1B12     		asrs	r3, r3, #8
 1221              	.LVL99:
 459:IRLoader.h    ****                     irBufferR[i] = (float)sample / 8388608.0f;
 1222              		.loc 10 459 28 view .LVU333
 1223 0346 07EE903A 		vmov	s15, r3	@ int
 460:IRLoader.h    ****                 }
 1224              		.loc 10 460 36 view .LVU334
 1225 034a F8EEE77A 		vcvt.f32.s32	s15, s15
 460:IRLoader.h    ****                 }
 1226              		.loc 10 460 50 view .LVU335
 1227 034e 67EE877A 		vmul.f32	s15, s15, s14
 460:IRLoader.h    ****                 }
 1228              		.loc 10 460 34 view .LVU336
 1229 0352 41ED017A 		vstr.32	s15, [r1, #-4]
 1230              	.LBE325:
 1231              	.LBE327:
 451:IRLoader.h    ****                 // If stereo, use right channel
ARM GAS  /tmp/cch2Dr4w.s 			page 57


 1232              		.loc 10 451 13 is_stmt 1 view .LVU337
 1233 0356 E1E7     		b	.L64
 1234              	.LVL100:
 1235              	.L63:
 451:IRLoader.h    ****                 // If stereo, use right channel
 1236              		.loc 10 451 13 is_stmt 0 view .LVU338
 1237              	.LBE329:
 442:IRLoader.h    ****                 delete[] irBufferL;
 1238              		.loc 10 442 17 is_stmt 1 view .LVU339
 442:IRLoader.h    ****                 delete[] irBufferL;
 1239              		.loc 10 442 26 is_stmt 0 view .LVU340
 1240 0358 2046     		mov	r0, r4
 1241              	.LVL101:
 442:IRLoader.h    ****                 delete[] irBufferL;
 1242              		.loc 10 442 26 view .LVU341
 1243 035a FFF7FEFF 		bl	_ZdaPv
 1244              	.LVL102:
 443:IRLoader.h    ****                 delete[] irBufferR;
 1245              		.loc 10 443 17 is_stmt 1 view .LVU342
 1246 035e A8E7     		b	.L68
 1247              	.LVL103:
 1248              	.L66:
 1249              	.LBB330:
 1250              	.LBB328:
 1251              	.LBB326:
 458:IRLoader.h    ****                     sample >>= 8;
 1252              		.loc 10 458 21 view .LVU343
 458:IRLoader.h    ****                     sample >>= 8;
 1253              		.loc 10 458 80 is_stmt 0 view .LVU344
 1254 0360 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 458:IRLoader.h    ****                     sample >>= 8;
 1255              		.loc 10 458 53 view .LVU345
 1256 0362 92F80090 		ldrb	r9, [r2]	@ zero_extendqisi2
 458:IRLoader.h    ****                     sample >>= 8;
 1257              		.loc 10 458 82 view .LVU346
 1258 0366 1B04     		lsls	r3, r3, #16
 458:IRLoader.h    ****                     sample >>= 8;
 1259              		.loc 10 458 29 view .LVU347
 1260 0368 43EA0923 		orr	r3, r3, r9, lsl #8
 458:IRLoader.h    ****                     sample >>= 8;
 1261              		.loc 10 458 108 view .LVU348
 1262 036c 92F80290 		ldrb	r9, [r2, #2]	@ zero_extendqisi2
 1263 0370 E3E7     		b	.L97
 1264              	.LVL104:
 1265              	.L65:
 458:IRLoader.h    ****                     sample >>= 8;
 1266              		.loc 10 458 108 view .LVU349
 1267              	.LBE326:
 1268              	.LBE328:
 1269              	.LBE330:
 464:IRLoader.h    ****         } else if (headerR.bitsPerSample == 32) {
 1270              		.loc 10 464 13 is_stmt 1 view .LVU350
 464:IRLoader.h    ****         } else if (headerR.bitsPerSample == 32) {
 1271              		.loc 10 464 22 is_stmt 0 view .LVU351
 1272 0372 2046     		mov	r0, r4
 1273 0374 FFF7FEFF 		bl	_ZdaPv
 1274              	.LVL105:
ARM GAS  /tmp/cch2Dr4w.s 			page 58


 1275              	.L61:
 1276              	.LBE331:
 1277              	.LBE336:
 1278              	.LBE346:
 486:IRLoader.h    ****         f_close(&fileR);
 1279              		.loc 10 486 9 is_stmt 1 view .LVU352
 486:IRLoader.h    ****         f_close(&fileR);
 1280              		.loc 10 486 16 is_stmt 0 view .LVU353
 1281 0378 18A8     		add	r0, sp, #96
 1282 037a A844     		add	r8, r8, r5
 1283 037c FFF7FEFF 		bl	f_close
 1284              	.LVL106:
 487:IRLoader.h    ****         
 1285              		.loc 10 487 9 is_stmt 1 view .LVU354
 487:IRLoader.h    ****         
 1286              		.loc 10 487 16 is_stmt 0 view .LVU355
 1287 0380 A3A8     		add	r0, sp, #652
 1288 0382 FFF7FEFF 		bl	f_close
 1289              	.LVL107:
 490:IRLoader.h    ****         float maxAbsR = 0.0f;
 1290              		.loc 10 490 9 is_stmt 1 view .LVU356
 491:IRLoader.h    ****         
 1291              		.loc 10 491 9 view .LVU357
 493:IRLoader.h    ****             float absValL = fabsf(irBufferL[i]);
 1292              		.loc 10 493 9 view .LVU358
 491:IRLoader.h    ****         
 1293              		.loc 10 491 15 is_stmt 0 view .LVU359
 1294 0386 1FED2A7A 		vldr.32	s14, .L101+32
 1295 038a 2B46     		mov	r3, r5
 1296 038c 3246     		mov	r2, r6
 490:IRLoader.h    ****         float maxAbsR = 0.0f;
 1297              		.loc 10 490 15 view .LVU360
 1298 038e F0EE477A 		vmov.f32	s15, s14
 487:IRLoader.h    ****         
 1299              		.loc 10 487 16 view .LVU361
 1300 0392 3046     		mov	r0, r6
 1301 0394 2946     		mov	r1, r5
 1302              	.LVL108:
 1303              	.L74:
 1304              	.LBB347:
 493:IRLoader.h    ****             float absValL = fabsf(irBufferL[i]);
 1305              		.loc 10 493 32 is_stmt 1 view .LVU362
 1306 0396 4145     		cmp	r1, r8
 1307 0398 20D0     		beq	.L69
 1308              	.LBB348:
 494:IRLoader.h    ****             float absValR = fabsf(irBufferR[i]);
 1309              		.loc 10 494 13 view .LVU363
 494:IRLoader.h    ****             float absValR = fabsf(irBufferR[i]);
 1310              		.loc 10 494 46 is_stmt 0 view .LVU364
 1311 039a B1EC016A 		vldmia.32	r1!, {s12}
 495:IRLoader.h    ****             
 1312              		.loc 10 495 46 view .LVU365
 1313 039e F0EC016A 		vldmia.32	r0!, {s13}
 494:IRLoader.h    ****             float absValR = fabsf(irBufferR[i]);
 1314              		.loc 10 494 19 view .LVU366
 1315 03a2 B0EEC66A 		vabs.f32	s12, s12
 1316              	.LVL109:
ARM GAS  /tmp/cch2Dr4w.s 			page 59


 495:IRLoader.h    ****             
 1317              		.loc 10 495 13 is_stmt 1 view .LVU367
 495:IRLoader.h    ****             
 1318              		.loc 10 495 19 is_stmt 0 view .LVU368
 1319 03a6 F0EEE66A 		vabs.f32	s13, s13
 1320              	.LVL110:
 497:IRLoader.h    ****                 maxAbsL = absValL;
 1321              		.loc 10 497 13 is_stmt 1 view .LVU369
 498:IRLoader.h    ****             }
 1322              		.loc 10 498 25 is_stmt 0 view .LVU370
 1323 03aa B4EE676A 		vcmp.f32	s12, s15
 1324 03ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 502:IRLoader.h    ****             }
 1325              		.loc 10 502 25 view .LVU371
 1326 03b2 F4EE476A 		vcmp.f32	s13, s14
 498:IRLoader.h    ****             }
 1327              		.loc 10 498 25 view .LVU372
 1328 03b6 76FE277A 		vselgt.f32	s15, s12, s15
 1329              	.LVL111:
 501:IRLoader.h    ****                 maxAbsR = absValR;
 1330              		.loc 10 501 13 is_stmt 1 view .LVU373
 502:IRLoader.h    ****             }
 1331              		.loc 10 502 25 is_stmt 0 view .LVU374
 1332 03ba F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1333 03be 36FE877A 		vselgt.f32	s14, s13, s14
 1334              	.LVL112:
 502:IRLoader.h    ****             }
 1335              		.loc 10 502 25 view .LVU375
 1336              	.LBE348:
 493:IRLoader.h    ****             float absValL = fabsf(irBufferL[i]);
 1337              		.loc 10 493 9 is_stmt 1 view .LVU376
 1338 03c2 E8E7     		b	.L74
 1339              	.LVL113:
 1340              	.L62:
 493:IRLoader.h    ****             float absValL = fabsf(irBufferL[i]);
 1341              		.loc 10 493 9 is_stmt 0 view .LVU377
 1342              	.LBE347:
 1343              	.LBB349:
 1344              	.LBB337:
 465:IRLoader.h    ****             // 32-bit samples (assume float)
 1345              		.loc 10 465 16 is_stmt 1 view .LVU378
 1346 03c4 202B     		cmp	r3, #32
 1347 03c6 7FF474AF 		bne	.L68
 467:IRLoader.h    ****             
 1348              		.loc 10 467 13 view .LVU379
 467:IRLoader.h    ****             
 1349              		.loc 10 467 28 is_stmt 0 view .LVU380
 1350 03ca 01AB     		add	r3, sp, #4
 1351 03cc 4246     		mov	r2, r8
 1352 03ce 3146     		mov	r1, r6
 1353 03d0 A3A8     		add	r0, sp, #652
 1354 03d2 FFF7FEFF 		bl	f_read
 1355              	.LVL114:
 469:IRLoader.h    ****                 delete[] irBufferL;
 1356              		.loc 10 469 13 is_stmt 1 view .LVU381
 1357 03d6 0028     		cmp	r0, #0
 1358 03d8 CED0     		beq	.L61
ARM GAS  /tmp/cch2Dr4w.s 			page 60


 1359 03da 6AE7     		b	.L68
 1360              	.LVL115:
 1361              	.L69:
 469:IRLoader.h    ****                 delete[] irBufferL;
 1362              		.loc 10 469 13 is_stmt 0 view .LVU382
 1363              	.LBE337:
 1364              	.LBE349:
 507:IRLoader.h    ****         
 1365              		.loc 10 507 9 is_stmt 1 view .LVU383
 507:IRLoader.h    ****         
 1366              		.loc 10 507 44 is_stmt 0 view .LVU384
 1367 03dc F4EEC77A 		vcmpe.f32	s15, s14
 1368 03e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1369 03e4 77FE877A 		vselgt.f32	s15, s15, s14
 1370              	.LVL116:
 509:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 1371              		.loc 10 509 9 is_stmt 1 view .LVU385
 1372              	.LBB350:
 1373 03e8 F5EEC07A 		vcmpe.f32	s15, #0
 1374 03ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1375 03f0 0EDD     		ble	.L76
 1376              	.LVL117:
 1377              	.L78:
 1378              	.LBB351:
 510:IRLoader.h    ****                 irBufferL[i] /= maxAbs;
 1379              		.loc 10 510 36 view .LVU386
 1380 03f2 9845     		cmp	r8, r3
 1381 03f4 0CD0     		beq	.L76
 511:IRLoader.h    ****                 irBufferR[i] /= maxAbs;
 1382              		.loc 10 511 17 view .LVU387
 511:IRLoader.h    ****                 irBufferR[i] /= maxAbs;
 1383              		.loc 10 511 30 is_stmt 0 view .LVU388
 1384 03f6 D3ED006A 		vldr.32	s13, [r3]
 1385 03fa 86EEA77A 		vdiv.f32	s14, s13, s15
 512:IRLoader.h    ****             }
 1386              		.loc 10 512 30 view .LVU389
 1387 03fe D2ED006A 		vldr.32	s13, [r2]
 511:IRLoader.h    ****                 irBufferR[i] /= maxAbs;
 1388              		.loc 10 511 30 view .LVU390
 1389 0402 A3EC017A 		vstmia.32	r3!, {s14}
 512:IRLoader.h    ****             }
 1390              		.loc 10 512 17 is_stmt 1 view .LVU391
 512:IRLoader.h    ****             }
 1391              		.loc 10 512 30 is_stmt 0 view .LVU392
 1392 0406 86EEA77A 		vdiv.f32	s14, s13, s15
 1393 040a A2EC017A 		vstmia.32	r2!, {s14}
 510:IRLoader.h    ****                 irBufferL[i] /= maxAbs;
 1394              		.loc 10 510 13 is_stmt 1 view .LVU393
 1395 040e F0E7     		b	.L78
 1396              	.L76:
 510:IRLoader.h    ****                 irBufferL[i] /= maxAbs;
 1397              		.loc 10 510 13 is_stmt 0 view .LVU394
 1398              	.LBE351:
 1399              	.LBE350:
 517:IRLoader.h    ****         
 1400              		.loc 10 517 9 is_stmt 1 view .LVU395
 517:IRLoader.h    ****         
ARM GAS  /tmp/cch2Dr4w.s 			page 61


 1401              		.loc 10 517 38 is_stmt 0 view .LVU396
 1402 0410 064B     		ldr	r3, .L103
 1403 0412 3A46     		mov	r2, r7
 1404 0414 3146     		mov	r1, r6
 1405 0416 2846     		mov	r0, r5
 1406 0418 1B68     		ldr	r3, [r3]
 1407 041a 9847     		blx	r3
 1408              	.LVL118:
 517:IRLoader.h    ****         
 1409              		.loc 10 517 38 view .LVU397
 1410 041c 0446     		mov	r4, r0
 1411              	.LVL119:
 520:IRLoader.h    ****         delete[] irBufferR;
 1412              		.loc 10 520 9 is_stmt 1 view .LVU398
 520:IRLoader.h    ****         delete[] irBufferR;
 1413              		.loc 10 520 18 is_stmt 0 view .LVU399
 1414 041e 2846     		mov	r0, r5
 1415 0420 FFF7FEFF 		bl	_ZdaPv
 1416              	.LVL120:
 521:IRLoader.h    ****         
 1417              		.loc 10 521 9 is_stmt 1 view .LVU400
 521:IRLoader.h    ****         
 1418              		.loc 10 521 18 is_stmt 0 view .LVU401
 1419 0424 3046     		mov	r0, r6
 1420 0426 FFF7FEFF 		bl	_ZdaPv
 1421              	.LVL121:
 523:IRLoader.h    ****     }
 1422              		.loc 10 523 9 is_stmt 1 view .LVU402
 523:IRLoader.h    ****     }
 1423              		.loc 10 523 16 is_stmt 0 view .LVU403
 1424 042a FDE5     		b	.L37
 1425              	.L104:
 1426              		.align	2
 1427              	.L103:
 1428 042c 00000000 		.word	.LANCHOR4
 1429              		.cfi_endproc
 1430              	.LFE6152:
 1432              		.section	.rodata._ZN8IRLoader10LoadMonoIREv.isra.0.str1.1,"aMS",%progbits,1
 1433              	.LC6:
 1434 0000 69725F6D 		.ascii	"ir_mono.wav\000"
 1434      6F6E6F2E 
 1434      77617600 
 1435              		.section	.text._ZN8IRLoader10LoadMonoIREv.isra.0,"axG",%progbits,_ZN8IRLoader6LoadIREv,comdat
 1436              		.align	1
 1437              		.syntax unified
 1438              		.thumb
 1439              		.thumb_func
 1440              		.fpu fpv5-d16
 1442              	_ZN8IRLoader10LoadMonoIREv.isra.0:
 1443              	.LFB6151:
  58:IRLoader.h    ****         // Open file
 1444              		.loc 10 58 10 is_stmt 1 view -0
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 608
 1447              		@ frame_needed = 0, uses_anonymous_args = 0
 1448              	.LVL122:
  60:IRLoader.h    ****         FRESULT result = f_open(&file, "ir_mono.wav", FA_READ);
ARM GAS  /tmp/cch2Dr4w.s 			page 62


 1449              		.loc 10 60 9 view .LVU405
  61:IRLoader.h    ****         
 1450              		.loc 10 61 9 view .LVU406
  58:IRLoader.h    ****         // Open file
 1451              		.loc 10 58 10 is_stmt 0 view .LVU407
 1452 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1453              		.cfi_def_cfa_offset 28
 1454              		.cfi_offset 4, -28
 1455              		.cfi_offset 5, -24
 1456              		.cfi_offset 6, -20
 1457              		.cfi_offset 7, -16
 1458              		.cfi_offset 8, -12
 1459              		.cfi_offset 9, -8
 1460              		.cfi_offset 14, -4
 1461 0004 ADF5197D 		sub	sp, sp, #612
 1462              		.cfi_def_cfa_offset 640
  61:IRLoader.h    ****         
 1463              		.loc 10 61 32 view .LVU408
 1464 0008 0122     		movs	r2, #1
 1465 000a 9549     		ldr	r1, .L142
 1466 000c 0DA8     		add	r0, sp, #52
 1467 000e FFF7FEFF 		bl	f_open
 1468              	.LVL123:
  63:IRLoader.h    ****             return false;
 1469              		.loc 10 63 9 is_stmt 1 view .LVU409
 1470 0012 60B9     		cbnz	r0, .L130
  68:IRLoader.h    ****         UINT bytesRead;
 1471              		.loc 10 68 9 view .LVU410
  69:IRLoader.h    ****         result = f_read(&file, &header, sizeof(WAVHeader), &bytesRead);
 1472              		.loc 10 69 9 view .LVU411
  70:IRLoader.h    ****         
 1473              		.loc 10 70 9 view .LVU412
  70:IRLoader.h    ****         
 1474              		.loc 10 70 24 is_stmt 0 view .LVU413
 1475 0014 01AB     		add	r3, sp, #4
 1476 0016 2C22     		movs	r2, #44
 1477 0018 02A9     		add	r1, sp, #8
 1478 001a 0DA8     		add	r0, sp, #52
 1479              	.LVL124:
  70:IRLoader.h    ****         
 1480              		.loc 10 70 24 view .LVU414
 1481 001c FFF7FEFF 		bl	f_read
 1482              	.LVL125:
  72:IRLoader.h    ****             f_close(&file);
 1483              		.loc 10 72 9 is_stmt 1 view .LVU415
 1484 0020 10B9     		cbnz	r0, .L141
  72:IRLoader.h    ****             f_close(&file);
 1485              		.loc 10 72 29 is_stmt 0 view .LVU416
 1486 0022 019B     		ldr	r3, [sp, #4]
 1487 0024 2C2B     		cmp	r3, #44
 1488 0026 04D0     		beq	.L108
 1489              	.LVL126:
 1490              	.L141:
 1491              	.LBB352:
 1492              	.LBB353:
 187:IRLoader.h    ****             return false;
 1493              		.loc 10 187 13 is_stmt 1 view .LVU417
ARM GAS  /tmp/cch2Dr4w.s 			page 63


 187:IRLoader.h    ****             return false;
 1494              		.loc 10 187 20 is_stmt 0 view .LVU418
 1495 0028 0DA8     		add	r0, sp, #52
 1496 002a FFF7FEFF 		bl	f_close
 1497              	.LVL127:
 188:IRLoader.h    ****         }
 1498              		.loc 10 188 13 is_stmt 1 view .LVU419
 1499              	.L130:
 1500              	.LBE353:
 1501              	.LBE352:
  64:IRLoader.h    ****         }
 1502              		.loc 10 64 20 is_stmt 0 view .LVU420
 1503 002e 0025     		movs	r5, #0
 1504 0030 10E1     		b	.L106
 1505              	.LVL128:
 1506              	.L108:
  78:IRLoader.h    ****             strncmp(header.wave, "WAVE", 4) != 0 || 
 1507              		.loc 10 78 9 is_stmt 1 view .LVU421
  78:IRLoader.h    ****             strncmp(header.wave, "WAVE", 4) != 0 || 
 1508              		.loc 10 78 20 is_stmt 0 view .LVU422
 1509 0032 0422     		movs	r2, #4
 1510 0034 8B49     		ldr	r1, .L142+4
 1511 0036 02A8     		add	r0, sp, #8
 1512              	.LVL129:
  78:IRLoader.h    ****             strncmp(header.wave, "WAVE", 4) != 0 || 
 1513              		.loc 10 78 20 view .LVU423
 1514 0038 FFF7FEFF 		bl	strncmp
 1515              	.LVL130:
  78:IRLoader.h    ****             strncmp(header.wave, "WAVE", 4) != 0 || 
 1516              		.loc 10 78 9 view .LVU424
 1517 003c 0028     		cmp	r0, #0
 1518 003e F3D1     		bne	.L141
  79:IRLoader.h    ****             strncmp(header.fmt, "fmt ", 4) != 0 || 
 1519              		.loc 10 79 20 view .LVU425
 1520 0040 0422     		movs	r2, #4
 1521 0042 8949     		ldr	r1, .L142+8
 1522 0044 04A8     		add	r0, sp, #16
 1523 0046 FFF7FEFF 		bl	strncmp
 1524              	.LVL131:
  78:IRLoader.h    ****             strncmp(header.wave, "WAVE", 4) != 0 || 
 1525              		.loc 10 78 50 view .LVU426
 1526 004a 0028     		cmp	r0, #0
 1527 004c ECD1     		bne	.L141
  80:IRLoader.h    ****             strncmp(header.data, "data", 4) != 0) {
 1528              		.loc 10 80 20 view .LVU427
 1529 004e 0422     		movs	r2, #4
 1530 0050 8649     		ldr	r1, .L142+12
 1531 0052 05A8     		add	r0, sp, #20
 1532 0054 FFF7FEFF 		bl	strncmp
 1533              	.LVL132:
  79:IRLoader.h    ****             strncmp(header.fmt, "fmt ", 4) != 0 || 
 1534              		.loc 10 79 50 view .LVU428
 1535 0058 0028     		cmp	r0, #0
 1536 005a E5D1     		bne	.L141
  81:IRLoader.h    ****             f_close(&file);
 1537              		.loc 10 81 20 view .LVU429
 1538 005c 0422     		movs	r2, #4
ARM GAS  /tmp/cch2Dr4w.s 			page 64


 1539 005e 8449     		ldr	r1, .L142+16
 1540 0060 0BA8     		add	r0, sp, #44
 1541 0062 FFF7FEFF 		bl	strncmp
 1542              	.LVL133:
  80:IRLoader.h    ****             strncmp(header.data, "data", 4) != 0) {
 1543              		.loc 10 80 49 view .LVU430
 1544 0066 0028     		cmp	r0, #0
 1545 0068 DED1     		bne	.L141
  87:IRLoader.h    ****             f_close(&file);
 1546              		.loc 10 87 9 is_stmt 1 view .LVU431
 1547 006a BDF81C30 		ldrh	r3, [sp, #28]
 1548 006e 012B     		cmp	r3, #1
 1549 0070 DAD1     		bne	.L141
  93:IRLoader.h    ****         
 1550              		.loc 10 93 9 view .LVU432
  93:IRLoader.h    ****         
 1551              		.loc 10 93 93 is_stmt 0 view .LVU433
 1552 0072 BDF82A30 		ldrh	r3, [sp, #42]
  93:IRLoader.h    ****         
 1553              		.loc 10 93 57 view .LVU434
 1554 0076 BDF81E50 		ldrh	r5, [sp, #30]
  93:IRLoader.h    ****         
 1555              		.loc 10 93 93 view .LVU435
 1556 007a DB08     		lsrs	r3, r3, #3
  93:IRLoader.h    ****         
 1557              		.loc 10 93 69 view .LVU436
 1558 007c 6B43     		muls	r3, r5, r3
  93:IRLoader.h    ****         
 1559              		.loc 10 93 18 view .LVU437
 1560 007e 0C9D     		ldr	r5, [sp, #48]
 1561 0080 B5FBF3F5 		udiv	r5, r5, r3
 1562              	.LVL134:
  96:IRLoader.h    ****             numSamples = MAX_IR_LENGTH;
 1563              		.loc 10 96 9 is_stmt 1 view .LVU438
 1564 0084 B5F5805F 		cmp	r5, #4096
 1565 0088 28BF     		it	cs
 1566 008a 4FF48055 		movcs	r5, #4096
 1567              	.LVL135:
 101:IRLoader.h    ****         
 1568              		.loc 10 101 47 is_stmt 0 view .LVU439
 1569 008e AE00     		lsls	r6, r5, #2
 1570 0090 3046     		mov	r0, r6
 1571 0092 FFF7FEFF 		bl	_Znaj
 1572              	.LVL136:
 1573              	.LBB371:
 109:IRLoader.h    ****             // 16-bit samples
 1574              		.loc 10 109 20 view .LVU440
 1575 0096 BDF82A30 		ldrh	r3, [sp, #42]
 1576              	.LBE371:
 101:IRLoader.h    ****         
 1577              		.loc 10 101 47 view .LVU441
 1578 009a 0446     		mov	r4, r0
 1579              	.LVL137:
 103:IRLoader.h    ****             f_close(&file);
 1580              		.loc 10 103 9 is_stmt 1 view .LVU442
 109:IRLoader.h    ****             // 16-bit samples
 1581              		.loc 10 109 9 view .LVU443
ARM GAS  /tmp/cch2Dr4w.s 			page 65


 1582              	.LBB372:
 1583 009c 102B     		cmp	r3, #16
 1584 009e 39D1     		bne	.L109
 1585              	.LBB366:
 111:IRLoader.h    ****             
 1586              		.loc 10 111 13 view .LVU444
 111:IRLoader.h    ****             
 1587              		.loc 10 111 67 is_stmt 0 view .LVU445
 1588 00a0 BDF81E00 		ldrh	r0, [sp, #30]
 1589              	.LVL138:
 111:IRLoader.h    ****             
 1590              		.loc 10 111 78 view .LVU446
 1591 00a4 6843     		muls	r0, r5, r0
 1592 00a6 4000     		lsls	r0, r0, #1
 1593 00a8 FFF7FEFF 		bl	_Znaj
 1594              	.LVL139:
 119:IRLoader.h    ****             
 1595              		.loc 10 119 68 view .LVU447
 1596 00ac BDF81E20 		ldrh	r2, [sp, #30]
 111:IRLoader.h    ****             
 1597              		.loc 10 111 78 view .LVU448
 1598 00b0 0746     		mov	r7, r0
 1599              	.LVL140:
 113:IRLoader.h    ****                 delete[] irBuffer;
 1600              		.loc 10 113 13 is_stmt 1 view .LVU449
 119:IRLoader.h    ****             
 1601              		.loc 10 119 13 view .LVU450
 119:IRLoader.h    ****             
 1602              		.loc 10 119 28 is_stmt 0 view .LVU451
 1603 00b2 0146     		mov	r1, r0
 119:IRLoader.h    ****             
 1604              		.loc 10 119 80 view .LVU452
 1605 00b4 6A43     		muls	r2, r5, r2
 119:IRLoader.h    ****             
 1606              		.loc 10 119 28 view .LVU453
 1607 00b6 01AB     		add	r3, sp, #4
 1608 00b8 0DA8     		add	r0, sp, #52
 1609              	.LVL141:
 119:IRLoader.h    ****             
 1610              		.loc 10 119 28 view .LVU454
 1611 00ba 5200     		lsls	r2, r2, #1
 1612 00bc FFF7FEFF 		bl	f_read
 1613              	.LVL142:
 121:IRLoader.h    ****                 delete[] tempBuffer;
 1614              		.loc 10 121 13 is_stmt 1 view .LVU455
 1615 00c0 0028     		cmp	r0, #0
 1616 00c2 75D1     		bne	.L117
 1617              	.LBB367:
 131:IRLoader.h    ****                     irBuffer[i] = ((float)tempBuffer[i*2] + (float)tempBuffer[i*2+1]) / 65536.0f;
 1618              		.loc 10 131 28 is_stmt 0 view .LVU456
 1619 00c4 BDF81E10 		ldrh	r1, [sp, #30]
 1620 00c8 2246     		mov	r2, r4
 129:IRLoader.h    ****                 // If stereo, average channels
 1621              		.loc 10 129 27 view .LVU457
 1622 00ca 0023     		movs	r3, #0
 1623              	.LVL143:
 1624              	.L111:
ARM GAS  /tmp/cch2Dr4w.s 			page 66


 129:IRLoader.h    ****                 // If stereo, average channels
 1625              		.loc 10 129 36 is_stmt 1 view .LVU458
 1626 00cc 9D42     		cmp	r5, r3
 1627 00ce 00F08680 		beq	.L119
 131:IRLoader.h    ****                     irBuffer[i] = ((float)tempBuffer[i*2] + (float)tempBuffer[i*2+1]) / 65536.0f;
 1628              		.loc 10 131 17 view .LVU459
 1629 00d2 0229     		cmp	r1, #2
 1630 00d4 17D1     		bne	.L113
 132:IRLoader.h    ****                 } else {
 1631              		.loc 10 132 21 view .LVU460
 132:IRLoader.h    ****                 } else {
 1632              		.loc 10 132 84 is_stmt 0 view .LVU461
 1633 00d6 B81C     		adds	r0, r7, #2
 132:IRLoader.h    ****                 } else {
 1634              		.loc 10 132 61 view .LVU462
 1635 00d8 30F92300 		ldrsh	r0, [r0, r3, lsl #2]
 1636 00dc 07EE900A 		vmov	s15, r0	@ int
 132:IRLoader.h    ****                 } else {
 1637              		.loc 10 132 36 view .LVU463
 1638 00e0 37F92300 		ldrsh	r0, [r7, r3, lsl #2]
 132:IRLoader.h    ****                 } else {
 1639              		.loc 10 132 61 view .LVU464
 1640 00e4 B8EEE77A 		vcvt.f32.s32	s14, s15
 132:IRLoader.h    ****                 } else {
 1641              		.loc 10 132 36 view .LVU465
 1642 00e8 07EE900A 		vmov	s15, r0	@ int
 1643 00ec F8EEE77A 		vcvt.f32.s32	s15, s15
 132:IRLoader.h    ****                 } else {
 1644              		.loc 10 132 59 view .LVU466
 1645 00f0 77EE277A 		vadd.f32	s15, s14, s15
 132:IRLoader.h    ****                 } else {
 1646              		.loc 10 132 87 view .LVU467
 1647 00f4 9FED5F7A 		vldr.32	s14, .L142+20
 1648 00f8 67EE877A 		vmul.f32	s15, s15, s14
 1649              	.L139:
 134:IRLoader.h    ****                 }
 1650              		.loc 10 134 33 view .LVU468
 1651 00fc C2ED007A 		vstr.32	s15, [r2]
 129:IRLoader.h    ****                 // If stereo, average channels
 1652              		.loc 10 129 13 is_stmt 1 view .LVU469
 1653 0100 0133     		adds	r3, r3, #1
 1654              	.LVL144:
 129:IRLoader.h    ****                 // If stereo, average channels
 1655              		.loc 10 129 13 is_stmt 0 view .LVU470
 1656 0102 0432     		adds	r2, r2, #4
 1657 0104 E2E7     		b	.L111
 1658              	.L113:
 134:IRLoader.h    ****                 }
 1659              		.loc 10 134 21 is_stmt 1 view .LVU471
 134:IRLoader.h    ****                 }
 1660              		.loc 10 134 35 is_stmt 0 view .LVU472
 1661 0106 37F91300 		ldrsh	r0, [r7, r3, lsl #1]
 1662 010a 07EE900A 		vmov	s15, r0	@ int
 134:IRLoader.h    ****                 }
 1663              		.loc 10 134 56 view .LVU473
 1664 010e FAEEE87A 		vcvt.f32.s32	s15, s15, #15
 1665 0112 F3E7     		b	.L139
ARM GAS  /tmp/cch2Dr4w.s 			page 67


 1666              	.LVL145:
 1667              	.L109:
 134:IRLoader.h    ****                 }
 1668              		.loc 10 134 56 view .LVU474
 1669              	.LBE367:
 1670              	.LBE366:
 1671              	.LBE372:
 139:IRLoader.h    ****             // 24-bit samples
 1672              		.loc 10 139 16 is_stmt 1 view .LVU475
 1673              	.LBB373:
 1674              	.LBB368:
 1675 0114 182B     		cmp	r3, #24
 1676 0116 7AD1     		bne	.L116
 1677              	.LBB354:
 141:IRLoader.h    ****             
 1678              		.loc 10 141 13 view .LVU476
 141:IRLoader.h    ****             
 1679              		.loc 10 141 67 is_stmt 0 view .LVU477
 1680 0118 BDF81E00 		ldrh	r0, [sp, #30]
 1681              	.LVL146:
 141:IRLoader.h    ****             
 1682              		.loc 10 141 79 view .LVU478
 1683 011c 6843     		muls	r0, r5, r0
 141:IRLoader.h    ****             
 1684              		.loc 10 141 82 view .LVU479
 1685 011e 00EB4000 		add	r0, r0, r0, lsl #1
 1686 0122 FFF7FEFF 		bl	_Znaj
 1687              	.LVL147:
 149:IRLoader.h    ****             
 1688              		.loc 10 149 68 view .LVU480
 1689 0126 BDF81E20 		ldrh	r2, [sp, #30]
 141:IRLoader.h    ****             
 1690              		.loc 10 141 82 view .LVU481
 1691 012a 0746     		mov	r7, r0
 1692              	.LVL148:
 143:IRLoader.h    ****                 delete[] irBuffer;
 1693              		.loc 10 143 13 is_stmt 1 view .LVU482
 149:IRLoader.h    ****             
 1694              		.loc 10 149 13 view .LVU483
 149:IRLoader.h    ****             
 1695              		.loc 10 149 28 is_stmt 0 view .LVU484
 1696 012c 0146     		mov	r1, r0
 149:IRLoader.h    ****             
 1697              		.loc 10 149 80 view .LVU485
 1698 012e 6A43     		muls	r2, r5, r2
 149:IRLoader.h    ****             
 1699              		.loc 10 149 28 view .LVU486
 1700 0130 01AB     		add	r3, sp, #4
 1701 0132 0DA8     		add	r0, sp, #52
 1702              	.LVL149:
 149:IRLoader.h    ****             
 1703              		.loc 10 149 28 view .LVU487
 1704 0134 02EB4202 		add	r2, r2, r2, lsl #1
 1705 0138 FFF7FEFF 		bl	f_read
 1706              	.LVL150:
 151:IRLoader.h    ****                 delete[] tempBuffer;
 1707              		.loc 10 151 13 is_stmt 1 view .LVU488
ARM GAS  /tmp/cch2Dr4w.s 			page 68


 1708 013c C0BB     		cbnz	r0, .L117
 1709              	.LBB355:
 1710              	.LBB356:
 161:IRLoader.h    ****                     int32_t sampleL = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuf
 1711              		.loc 10 161 28 is_stmt 0 view .LVU489
 1712 013e BDF81EC0 		ldrh	ip, [sp, #30]
 1713 0142 3A46     		mov	r2, r7
 1714 0144 2046     		mov	r0, r4
 1715              	.LVL151:
 161:IRLoader.h    ****                     int32_t sampleL = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuf
 1716              		.loc 10 161 28 view .LVU490
 1717 0146 06EB040E 		add	lr, r6, r4
 1718 014a 3946     		mov	r1, r7
 1719              	.L118:
 161:IRLoader.h    ****                     int32_t sampleL = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuf
 1720              		.loc 10 161 28 view .LVU491
 1721              	.LBE356:
 159:IRLoader.h    ****                 // If stereo, average channels
 1722              		.loc 10 159 36 is_stmt 1 view .LVU492
 1723 014c 7045     		cmp	r0, lr
 1724 014e 46D0     		beq	.L119
 1725              	.LBE355:
 1726              	.LBE354:
 1727              	.LBE368:
 1728              	.LBE373:
 161:IRLoader.h    ****                     int32_t sampleL = (tempBuffer[i*6] << 8) | (tempBuffer[i*6+1] << 16) | (tempBuf
 1729              		.loc 10 161 17 view .LVU493
 1730              	.LBB374:
 1731              	.LBB369:
 1732              	.LBB364:
 1733              	.LBB362:
 1734              	.LBB360:
 1735 0150 BCF1020F 		cmp	ip, #2
 1736 0154 33D1     		bne	.L120
 1737              	.LBB357:
 162:IRLoader.h    ****                     int32_t sampleR = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempB
 1738              		.loc 10 162 21 view .LVU494
 162:IRLoader.h    ****                     int32_t sampleR = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempB
 1739              		.loc 10 162 81 is_stmt 0 view .LVU495
 1740 0156 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 162:IRLoader.h    ****                     int32_t sampleR = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempB
 1741              		.loc 10 162 54 view .LVU496
 1742 0158 92F80080 		ldrb	r8, [r2]	@ zero_extendqisi2
 162:IRLoader.h    ****                     int32_t sampleR = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempB
 1743              		.loc 10 162 83 view .LVU497
 1744 015c 1B04     		lsls	r3, r3, #16
 163:IRLoader.h    ****                     sampleL >>= 8;
 1745              		.loc 10 163 56 view .LVU498
 1746 015e 92F80390 		ldrb	r9, [r2, #3]	@ zero_extendqisi2
 162:IRLoader.h    ****                     int32_t sampleR = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempB
 1747              		.loc 10 162 29 view .LVU499
 1748 0162 43EA0823 		orr	r3, r3, r8, lsl #8
 162:IRLoader.h    ****                     int32_t sampleR = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempB
 1749              		.loc 10 162 109 view .LVU500
 1750 0166 92F80280 		ldrb	r8, [r2, #2]	@ zero_extendqisi2
 162:IRLoader.h    ****                     int32_t sampleR = (tempBuffer[i*6+3] << 8) | (tempBuffer[i*6+4] << 16) | (tempB
 1751              		.loc 10 162 29 view .LVU501
ARM GAS  /tmp/cch2Dr4w.s 			page 69


 1752 016a 43EA0863 		orr	r3, r3, r8, lsl #24
 1753              	.LVL152:
 163:IRLoader.h    ****                     sampleL >>= 8;
 1754              		.loc 10 163 21 is_stmt 1 view .LVU502
 163:IRLoader.h    ****                     sampleL >>= 8;
 1755              		.loc 10 163 83 is_stmt 0 view .LVU503
 1756 016e 92F80480 		ldrb	r8, [r2, #4]	@ zero_extendqisi2
 163:IRLoader.h    ****                     sampleL >>= 8;
 1757              		.loc 10 163 85 view .LVU504
 1758 0172 4FEA0848 		lsl	r8, r8, #16
 164:IRLoader.h    ****                     sampleR >>= 8;
 1759              		.loc 10 164 29 view .LVU505
 1760 0176 1B12     		asrs	r3, r3, #8
 1761              	.LVL153:
 163:IRLoader.h    ****                     sampleL >>= 8;
 1762              		.loc 10 163 64 view .LVU506
 1763 0178 48EA0928 		orr	r8, r8, r9, lsl #8
 163:IRLoader.h    ****                     sampleL >>= 8;
 1764              		.loc 10 163 111 view .LVU507
 1765 017c 92F80590 		ldrb	r9, [r2, #5]	@ zero_extendqisi2
 164:IRLoader.h    ****                     sampleR >>= 8;
 1766              		.loc 10 164 29 view .LVU508
 1767 0180 07EE903A 		vmov	s15, r3	@ int
 163:IRLoader.h    ****                     sampleL >>= 8;
 1768              		.loc 10 163 29 view .LVU509
 1769 0184 48EA0968 		orr	r8, r8, r9, lsl #24
 1770              	.LVL154:
 164:IRLoader.h    ****                     sampleR >>= 8;
 1771              		.loc 10 164 21 is_stmt 1 view .LVU510
 165:IRLoader.h    ****                     irBuffer[i] = ((float)sampleL + (float)sampleR) / 16777216.0f;
 1772              		.loc 10 165 21 view .LVU511
 166:IRLoader.h    ****                 } else {
 1773              		.loc 10 166 21 view .LVU512
 166:IRLoader.h    ****                 } else {
 1774              		.loc 10 166 36 is_stmt 0 view .LVU513
 1775 0188 B8EEE77A 		vcvt.f32.s32	s14, s15
 165:IRLoader.h    ****                     irBuffer[i] = ((float)sampleL + (float)sampleR) / 16777216.0f;
 1776              		.loc 10 165 29 view .LVU514
 1777 018c 4FEA2828 		asr	r8, r8, #8
 1778              	.LVL155:
 166:IRLoader.h    ****                 } else {
 1779              		.loc 10 166 53 view .LVU515
 1780 0190 07EE908A 		vmov	s15, r8	@ int
 1781 0194 F8EEE77A 		vcvt.f32.s32	s15, s15
 166:IRLoader.h    ****                 } else {
 1782              		.loc 10 166 51 view .LVU516
 1783 0198 77EE277A 		vadd.f32	s15, s14, s15
 166:IRLoader.h    ****                 } else {
 1784              		.loc 10 166 69 view .LVU517
 1785 019c 9FED367A 		vldr.32	s14, .L142+24
 1786 01a0 67EE877A 		vmul.f32	s15, s15, s14
 1787              	.LVL156:
 1788              	.L140:
 166:IRLoader.h    ****                 } else {
 1789              		.loc 10 166 69 view .LVU518
 1790              	.LBE357:
 1791              	.LBB358:
ARM GAS  /tmp/cch2Dr4w.s 			page 70


 170:IRLoader.h    ****                 }
 1792              		.loc 10 170 33 view .LVU519
 1793 01a4 C0ED007A 		vstr.32	s15, [r0]
 1794              	.LBE358:
 1795              	.LBE360:
 159:IRLoader.h    ****                 // If stereo, average channels
 1796              		.loc 10 159 13 is_stmt 1 view .LVU520
 1797 01a8 0632     		adds	r2, r2, #6
 1798 01aa 0430     		adds	r0, r0, #4
 1799 01ac 0331     		adds	r1, r1, #3
 1800 01ae CDE7     		b	.L118
 1801              	.LVL157:
 1802              	.L117:
 159:IRLoader.h    ****                 // If stereo, average channels
 1803              		.loc 10 159 13 is_stmt 0 view .LVU521
 1804              	.LBE362:
 152:IRLoader.h    ****                 delete[] irBuffer;
 1805              		.loc 10 152 17 is_stmt 1 view .LVU522
 152:IRLoader.h    ****                 delete[] irBuffer;
 1806              		.loc 10 152 26 is_stmt 0 view .LVU523
 1807 01b0 3846     		mov	r0, r7
 1808              	.LVL158:
 152:IRLoader.h    ****                 delete[] irBuffer;
 1809              		.loc 10 152 26 view .LVU524
 1810 01b2 FFF7FEFF 		bl	_ZdaPv
 1811              	.LVL159:
 153:IRLoader.h    ****                 f_close(&file);
 1812              		.loc 10 153 17 is_stmt 1 view .LVU525
 1813              	.L122:
 153:IRLoader.h    ****                 f_close(&file);
 1814              		.loc 10 153 17 is_stmt 0 view .LVU526
 1815              	.LBE364:
 186:IRLoader.h    ****             f_close(&file);
 1816              		.loc 10 186 13 is_stmt 1 view .LVU527
 186:IRLoader.h    ****             f_close(&file);
 1817              		.loc 10 186 22 is_stmt 0 view .LVU528
 1818 01b6 2046     		mov	r0, r4
 1819 01b8 FFF7FEFF 		bl	_ZdaPv
 1820              	.LVL160:
 1821 01bc 34E7     		b	.L141
 1822              	.LVL161:
 1823              	.L120:
 1824              	.LBB365:
 1825              	.LBB363:
 1826              	.LBB361:
 1827              	.LBB359:
 168:IRLoader.h    ****                     sample >>= 8;
 1828              		.loc 10 168 21 is_stmt 1 view .LVU529
 168:IRLoader.h    ****                     sample >>= 8;
 1829              		.loc 10 168 80 is_stmt 0 view .LVU530
 1830 01be 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 168:IRLoader.h    ****                     sample >>= 8;
 1831              		.loc 10 168 53 view .LVU531
 1832 01c0 91F80080 		ldrb	r8, [r1]	@ zero_extendqisi2
 168:IRLoader.h    ****                     sample >>= 8;
 1833              		.loc 10 168 82 view .LVU532
 1834 01c4 1B04     		lsls	r3, r3, #16
ARM GAS  /tmp/cch2Dr4w.s 			page 71


 168:IRLoader.h    ****                     sample >>= 8;
 1835              		.loc 10 168 29 view .LVU533
 1836 01c6 43EA0823 		orr	r3, r3, r8, lsl #8
 168:IRLoader.h    ****                     sample >>= 8;
 1837              		.loc 10 168 108 view .LVU534
 1838 01ca 91F80280 		ldrb	r8, [r1, #2]	@ zero_extendqisi2
 168:IRLoader.h    ****                     sample >>= 8;
 1839              		.loc 10 168 29 view .LVU535
 1840 01ce 43EA0863 		orr	r3, r3, r8, lsl #24
 1841              	.LVL162:
 169:IRLoader.h    ****                     irBuffer[i] = (float)sample / 8388608.0f;
 1842              		.loc 10 169 21 is_stmt 1 view .LVU536
 170:IRLoader.h    ****                 }
 1843              		.loc 10 170 21 view .LVU537
 169:IRLoader.h    ****                     irBuffer[i] = (float)sample / 8388608.0f;
 1844              		.loc 10 169 28 is_stmt 0 view .LVU538
 1845 01d2 1B12     		asrs	r3, r3, #8
 1846              	.LVL163:
 169:IRLoader.h    ****                     irBuffer[i] = (float)sample / 8388608.0f;
 1847              		.loc 10 169 28 view .LVU539
 1848 01d4 07EE903A 		vmov	s15, r3	@ int
 170:IRLoader.h    ****                 }
 1849              		.loc 10 170 49 view .LVU540
 1850 01d8 FAEEE47A 		vcvt.f32.s32	s15, s15, #23
 1851 01dc E2E7     		b	.L140
 1852              	.LVL164:
 1853              	.L119:
 170:IRLoader.h    ****                 }
 1854              		.loc 10 170 49 view .LVU541
 1855              	.LBE359:
 1856              	.LBE361:
 1857              	.LBE363:
 174:IRLoader.h    ****         } else if (header.bitsPerSample == 32) {
 1858              		.loc 10 174 13 is_stmt 1 view .LVU542
 174:IRLoader.h    ****         } else if (header.bitsPerSample == 32) {
 1859              		.loc 10 174 22 is_stmt 0 view .LVU543
 1860 01de 3846     		mov	r0, r7
 1861 01e0 FFF7FEFF 		bl	_ZdaPv
 1862              	.LVL165:
 1863              	.L115:
 1864              	.LBE365:
 1865              	.LBE369:
 1866              	.LBE374:
 192:IRLoader.h    ****         
 1867              		.loc 10 192 9 is_stmt 1 view .LVU544
 192:IRLoader.h    ****         
 1868              		.loc 10 192 16 is_stmt 0 view .LVU545
 1869 01e4 0DA8     		add	r0, sp, #52
 1870 01e6 2644     		add	r6, r6, r4
 1871 01e8 FFF7FEFF 		bl	f_close
 1872              	.LVL166:
 195:IRLoader.h    ****         for (uint32_t i = 0; i < numSamples; i++) {
 1873              		.loc 10 195 9 is_stmt 1 view .LVU546
 196:IRLoader.h    ****             float absVal = fabsf(irBuffer[i]);
 1874              		.loc 10 196 9 view .LVU547
 196:IRLoader.h    ****             float absVal = fabsf(irBuffer[i]);
 1875              		.loc 10 196 9 is_stmt 0 view .LVU548
ARM GAS  /tmp/cch2Dr4w.s 			page 72


 1876 01ec 2346     		mov	r3, r4
 192:IRLoader.h    ****         
 1877              		.loc 10 192 16 view .LVU549
 1878 01ee 2246     		mov	r2, r4
 195:IRLoader.h    ****         for (uint32_t i = 0; i < numSamples; i++) {
 1879              		.loc 10 195 15 view .LVU550
 1880 01f0 DFED227A 		vldr.32	s15, .L142+28
 1881              	.LVL167:
 1882              	.L126:
 1883              	.LBB375:
 196:IRLoader.h    ****             float absVal = fabsf(irBuffer[i]);
 1884              		.loc 10 196 32 is_stmt 1 view .LVU551
 1885 01f4 9642     		cmp	r6, r2
 1886 01f6 15D0     		beq	.L123
 1887              	.LBB376:
 197:IRLoader.h    ****             if (absVal > maxAbs) {
 1888              		.loc 10 197 13 view .LVU552
 197:IRLoader.h    ****             if (absVal > maxAbs) {
 1889              		.loc 10 197 44 is_stmt 0 view .LVU553
 1890 01f8 B2EC017A 		vldmia.32	r2!, {s14}
 197:IRLoader.h    ****             if (absVal > maxAbs) {
 1891              		.loc 10 197 19 view .LVU554
 1892 01fc B0EEC77A 		vabs.f32	s14, s14
 1893              	.LVL168:
 198:IRLoader.h    ****                 maxAbs = absVal;
 1894              		.loc 10 198 13 is_stmt 1 view .LVU555
 199:IRLoader.h    ****             }
 1895              		.loc 10 199 24 is_stmt 0 view .LVU556
 1896 0200 B4EE677A 		vcmp.f32	s14, s15
 1897 0204 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1898 0208 77FE277A 		vselgt.f32	s15, s14, s15
 1899              	.LVL169:
 199:IRLoader.h    ****             }
 1900              		.loc 10 199 24 view .LVU557
 1901              	.LBE376:
 196:IRLoader.h    ****             float absVal = fabsf(irBuffer[i]);
 1902              		.loc 10 196 9 is_stmt 1 view .LVU558
 1903 020c F2E7     		b	.L126
 1904              	.LVL170:
 1905              	.L116:
 196:IRLoader.h    ****             float absVal = fabsf(irBuffer[i]);
 1906              		.loc 10 196 9 is_stmt 0 view .LVU559
 1907              	.LBE375:
 1908              	.LBB377:
 1909              	.LBB370:
 175:IRLoader.h    ****             // 32-bit samples (assume float)
 1910              		.loc 10 175 16 is_stmt 1 view .LVU560
 1911 020e 202B     		cmp	r3, #32
 1912 0210 D1D1     		bne	.L122
 177:IRLoader.h    ****             
 1913              		.loc 10 177 13 view .LVU561
 177:IRLoader.h    ****             
 1914              		.loc 10 177 28 is_stmt 0 view .LVU562
 1915 0212 0146     		mov	r1, r0
 1916 0214 01AB     		add	r3, sp, #4
 1917 0216 3246     		mov	r2, r6
 1918 0218 0DA8     		add	r0, sp, #52
ARM GAS  /tmp/cch2Dr4w.s 			page 73


 1919              	.LVL171:
 177:IRLoader.h    ****             
 1920              		.loc 10 177 28 view .LVU563
 1921 021a FFF7FEFF 		bl	f_read
 1922              	.LVL172:
 179:IRLoader.h    ****                 delete[] irBuffer;
 1923              		.loc 10 179 13 is_stmt 1 view .LVU564
 1924 021e 0028     		cmp	r0, #0
 1925 0220 E0D0     		beq	.L115
 1926 0222 C8E7     		b	.L122
 1927              	.LVL173:
 1928              	.L123:
 179:IRLoader.h    ****                 delete[] irBuffer;
 1929              		.loc 10 179 13 is_stmt 0 view .LVU565
 1930              	.LBE370:
 1931              	.LBE377:
 203:IRLoader.h    ****             for (uint32_t i = 0; i < numSamples; i++) {
 1932              		.loc 10 203 9 is_stmt 1 view .LVU566
 1933              	.LBB378:
 1934 0224 F5EEC07A 		vcmpe.f32	s15, #0
 1935 0228 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1936 022c 08DD     		ble	.L127
 1937              	.LVL174:
 1938              	.L129:
 1939              	.LBB379:
 204:IRLoader.h    ****                 irBuffer[i] /= maxAbs;
 1940              		.loc 10 204 36 view .LVU567
 1941 022e 9A42     		cmp	r2, r3
 1942 0230 06D0     		beq	.L127
 205:IRLoader.h    ****             }
 1943              		.loc 10 205 17 view .LVU568
 205:IRLoader.h    ****             }
 1944              		.loc 10 205 29 is_stmt 0 view .LVU569
 1945 0232 D3ED006A 		vldr.32	s13, [r3]
 1946 0236 86EEA77A 		vdiv.f32	s14, s13, s15
 1947 023a A3EC017A 		vstmia.32	r3!, {s14}
 204:IRLoader.h    ****                 irBuffer[i] /= maxAbs;
 1948              		.loc 10 204 13 is_stmt 1 view .LVU570
 1949 023e F6E7     		b	.L129
 1950              	.L127:
 204:IRLoader.h    ****                 irBuffer[i] /= maxAbs;
 1951              		.loc 10 204 13 is_stmt 0 view .LVU571
 1952              	.LBE379:
 1953              	.LBE378:
 210:IRLoader.h    ****         
 1954              		.loc 10 210 9 is_stmt 1 view .LVU572
 210:IRLoader.h    ****         
 1955              		.loc 10 210 38 is_stmt 0 view .LVU573
 1956 0240 0F4B     		ldr	r3, .L142+32
 1957 0242 2A46     		mov	r2, r5
 1958 0244 0021     		movs	r1, #0
 1959 0246 2046     		mov	r0, r4
 1960 0248 1B68     		ldr	r3, [r3]
 1961 024a 9847     		blx	r3
 1962              	.LVL175:
 210:IRLoader.h    ****         
 1963              		.loc 10 210 38 view .LVU574
ARM GAS  /tmp/cch2Dr4w.s 			page 74


 1964 024c 0546     		mov	r5, r0
 1965              	.LVL176:
 213:IRLoader.h    ****         
 1966              		.loc 10 213 9 is_stmt 1 view .LVU575
 213:IRLoader.h    ****         
 1967              		.loc 10 213 18 is_stmt 0 view .LVU576
 1968 024e 2046     		mov	r0, r4
 1969 0250 FFF7FEFF 		bl	_ZdaPv
 1970              	.LVL177:
 215:IRLoader.h    ****     }
 1971              		.loc 10 215 9 is_stmt 1 view .LVU577
 1972              	.L106:
 216:IRLoader.h    ****     
 1973              		.loc 10 216 5 is_stmt 0 view .LVU578
 1974 0254 2846     		mov	r0, r5
 1975 0256 0DF5197D 		add	sp, sp, #612
 1976              		.cfi_def_cfa_offset 28
 1977              		@ sp needed
 1978 025a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1979              	.L143:
 1980 025e 00BF     		.align	2
 1981              	.L142:
 1982 0260 00000000 		.word	.LC6
 1983 0264 19000000 		.word	.LC2
 1984 0268 1E000000 		.word	.LC3
 1985 026c 23000000 		.word	.LC4
 1986 0270 28000000 		.word	.LC5
 1987 0274 00008037 		.word	931135488
 1988 0278 00008033 		.word	864026624
 1989 027c 00000000 		.word	0
 1990 0280 00000000 		.word	.LANCHOR4
 1991              		.cfi_endproc
 1992              	.LFE6151:
 1994              		.section	.text._ZN16clevelandmusicco8Hothouse4InitEv,"axG",%progbits,_ZN16clevelandmusicco8Hothous
 1995              		.align	1
 1996              		.weak	_ZN16clevelandmusicco8Hothouse4InitEv
 1997              		.syntax unified
 1998              		.thumb
 1999              		.thumb_func
 2000              		.fpu fpv5-d16
 2002              	_ZN16clevelandmusicco8Hothouse4InitEv:
 2003              	.LVL178:
 2004              	.LFB4713:
  11:hothouse.h    **** public:
  12:hothouse.h    ****     // Pin definitions as integers
  13:hothouse.h    ****     enum Pin {
  14:hothouse.h    ****         // Knobs (ADC inputs)
  15:hothouse.h    ****         KNOB_1 = 15,  // A0
  16:hothouse.h    ****         KNOB_2 = 16,  // A1
  17:hothouse.h    ****         KNOB_3 = 17,  // A2
  18:hothouse.h    ****         KNOB_4 = 18,  // A3
  19:hothouse.h    ****         KNOB_5 = 19,  // A4
  20:hothouse.h    ****         KNOB_6 = 20,  // A5
  21:hothouse.h    ****         
  22:hothouse.h    ****         // Footswitches (digital inputs)
  23:hothouse.h    ****         FOOTSWITCH_1 = 1,  // D1
  24:hothouse.h    ****         FOOTSWITCH_2 = 2,  // D2
ARM GAS  /tmp/cch2Dr4w.s 			page 75


  25:hothouse.h    ****         
  26:hothouse.h    ****         // Toggles (digital inputs)
  27:hothouse.h    ****         TOGGLE_1 = 7,  // D7
  28:hothouse.h    ****         TOGGLE_2 = 8,  // D8
  29:hothouse.h    ****         TOGGLE_3 = 9,  // D9
  30:hothouse.h    ****         
  31:hothouse.h    ****         // LEDs (digital outputs)
  32:hothouse.h    ****         LED_1 = 10,  // D10
  33:hothouse.h    ****         LED_2 = 11,  // D11
  34:hothouse.h    ****         LED_3 = 12,  // D12
  35:hothouse.h    ****         LED_4 = 13,  // D13
  36:hothouse.h    ****         
  37:hothouse.h    ****         // OLED display (SPI)
  38:hothouse.h    ****         OLED_DC = 3,  // D3
  39:hothouse.h    ****         OLED_RESET = 4  // D4
  40:hothouse.h    ****     };
  41:hothouse.h    ****     
  42:hothouse.h    ****     Hothouse() {}
  43:hothouse.h    ****     
  44:hothouse.h    ****     void Init() {
 2005              		.loc 3 44 10 is_stmt 1 view -0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 128
 2008              		@ frame_needed = 0, uses_anonymous_args = 0
  45:hothouse.h    ****         // Initialize seed hardware
  46:hothouse.h    ****         seed.Configure();
 2009              		.loc 3 46 9 view .LVU580
  44:hothouse.h    ****         // Initialize seed hardware
 2010              		.loc 3 44 10 is_stmt 0 view .LVU581
 2011 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2012              		.cfi_def_cfa_offset 24
 2013              		.cfi_offset 4, -24
 2014              		.cfi_offset 5, -20
 2015              		.cfi_offset 6, -16
 2016              		.cfi_offset 7, -12
 2017              		.cfi_offset 8, -8
 2018              		.cfi_offset 14, -4
 2019 0004 A0B0     		sub	sp, sp, #128
 2020              		.cfi_def_cfa_offset 152
  44:hothouse.h    ****         // Initialize seed hardware
 2021              		.loc 3 44 10 view .LVU582
 2022 0006 0446     		mov	r4, r0
 2023              		.loc 3 46 23 view .LVU583
 2024 0008 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 2025              	.LVL179:
  47:hothouse.h    ****         seed.Init();
 2026              		.loc 3 47 9 is_stmt 1 view .LVU584
 2027              		.loc 3 47 18 is_stmt 0 view .LVU585
 2028 000c 0021     		movs	r1, #0
 2029 000e 05AE     		add	r6, sp, #20
 2030 0010 2046     		mov	r0, r4
 2031 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 2032              	.LVL180:
  48:hothouse.h    ****         
  49:hothouse.h    ****         // Initialize audio - use public API
  50:hothouse.h    ****         daisy::AudioHandle::Config audio_config;
 2033              		.loc 3 50 9 is_stmt 1 view .LVU586
ARM GAS  /tmp/cch2Dr4w.s 			page 76


 2034              	.LBB390:
 2035              	.LBI390:
  44:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         : blocksize(48),
 2036              		.loc 8 44 9 view .LVU587
  44:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****         : blocksize(48),
 2037              		.loc 8 44 9 is_stmt 0 view .LVU588
 2038              	.LBE390:
  51:hothouse.h    ****         audio_config.samplerate = daisy::SaiHandle::Config::SampleRate::SAI_48KHZ;
 2039              		.loc 3 51 9 is_stmt 1 view .LVU589
  52:hothouse.h    ****         audio_config.blocksize = 48;
 2040              		.loc 3 52 9 view .LVU590
  53:hothouse.h    ****         seed.SetAudioBlockSize(audio_config.blocksize);
 2041              		.loc 3 53 9 view .LVU591
 2042 0016 04F14007 		add	r7, r4, #64
 2043              		.loc 3 53 31 is_stmt 0 view .LVU592
 2044 001a 3021     		movs	r1, #48
 2045 001c 2046     		mov	r0, r4
  54:hothouse.h    ****         seed.SetAudioSampleRate(audio_config.samplerate);
 2046              		.loc 3 54 32 view .LVU593
 2047 001e 4FF0FF35 		mov	r5, #-1
 2048 0022 B046     		mov	r8, r6
  53:hothouse.h    ****         seed.SetAudioBlockSize(audio_config.blocksize);
 2049              		.loc 3 53 31 view .LVU594
 2050 0024 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 2051              	.LVL181:
 2052              		.loc 3 54 9 is_stmt 1 view .LVU595
 2053              		.loc 3 54 32 is_stmt 0 view .LVU596
 2054 0028 0321     		movs	r1, #3
 2055 002a 2046     		mov	r0, r4
 2056 002c FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 2057              	.LVL182:
  55:hothouse.h    ****         
  56:hothouse.h    ****         // Don't start audio yet - will be started later with actual callback
  57:hothouse.h    ****         // Removed the ambiguous nullptr call
  58:hothouse.h    ****         
  59:hothouse.h    ****         // Initialize ADC for knobs
  60:hothouse.h    ****         daisy::AdcChannelConfig adcConfig[6];
 2058              		.loc 3 60 9 is_stmt 1 view .LVU597
  61:hothouse.h    ****         for (int i = 0; i < 6; i++) {
 2059              		.loc 3 61 9 view .LVU598
 2060              	.LBB391:
 2061              		.loc 3 61 27 view .LVU599
 2062              	.L146:
  62:hothouse.h    ****             adcConfig[i].InitSingle(seed.GetPin(GetKnobPin(i)));
 2063              		.loc 3 62 13 discriminator 2 view .LVU600
 2064              		.loc 3 62 13 is_stmt 0 discriminator 2 view .LVU601
 2065              	.LBE391:
  63:hothouse.h    ****             adcValues_[i] = 0.0f;
  64:hothouse.h    ****         }
  65:hothouse.h    ****         seed.adc.Init(adcConfig, 6);
  66:hothouse.h    ****         seed.adc.Start();
  67:hothouse.h    ****         
  68:hothouse.h    ****         // Initialize footswitches
  69:hothouse.h    ****         for (int i = 0; i < 2; i++) {
  70:hothouse.h    ****             footswitches_[i].Init(seed.GetPin(GetFootswitchPin(i)), 1000);
  71:hothouse.h    ****             footswitchStates_[i] = false;
  72:hothouse.h    ****             footswitchPressTime_[i] = 0;
ARM GAS  /tmp/cch2Dr4w.s 			page 77


  73:hothouse.h    ****             footswitchCallbacks_[i] = nullptr;
  74:hothouse.h    ****             footswitchLongPressCallbacks_[i] = nullptr;
  75:hothouse.h    ****         }
  76:hothouse.h    ****         
  77:hothouse.h    ****         // Initialize toggles
  78:hothouse.h    ****         for (int i = 0; i < 3; i++) {
  79:hothouse.h    ****             toggles_[i].Init(seed.GetPin(GetTogglePin(i)), 1000);
  80:hothouse.h    ****             toggleStates_[i] = 0;
  81:hothouse.h    ****             toggleCallbacks_[i] = nullptr;
  82:hothouse.h    ****         }
  83:hothouse.h    ****     }
  84:hothouse.h    ****     
  85:hothouse.h    ****     void ProcessAllControls() {
  86:hothouse.h    ****         // Process ADC readings
  87:hothouse.h    ****         for (int i = 0; i < 6; i++) {
  88:hothouse.h    ****             float newValue = seed.adc.GetFloat(i);
  89:hothouse.h    ****             
  90:hothouse.h    ****             // Apply some smoothing
  91:hothouse.h    ****             adcValues_[i] = adcValues_[i] * 0.9f + newValue * 0.1f;
  92:hothouse.h    ****             
  93:hothouse.h    ****             // Call callback if value changed significantly
  94:hothouse.h    ****             if (knobCallbacks_[i] != nullptr && fabsf(adcValues_[i] - lastKnobValues_[i]) > 0.01f) 
  95:hothouse.h    ****                 knobCallbacks_[i](adcValues_[i]);
  96:hothouse.h    ****                 lastKnobValues_[i] = adcValues_[i];
  97:hothouse.h    ****             }
  98:hothouse.h    ****         }
  99:hothouse.h    ****         
 100:hothouse.h    ****         // Process footswitches
 101:hothouse.h    ****         for (int i = 0; i < 2; i++) {
 102:hothouse.h    ****             footswitches_[i].Debounce();
 103:hothouse.h    ****             
 104:hothouse.h    ****             // Check for press
 105:hothouse.h    ****             if (footswitches_[i].RisingEdge()) {
 106:hothouse.h    ****                 footswitchStates_[i] = true;
 107:hothouse.h    ****                 footswitchPressTime_[i] = daisy::System::GetNow();
 108:hothouse.h    ****                 
 109:hothouse.h    ****                 // Call callback
 110:hothouse.h    ****                 if (footswitchCallbacks_[i] != nullptr) {
 111:hothouse.h    ****                     footswitchCallbacks_[i](true);
 112:hothouse.h    ****                 }
 113:hothouse.h    ****             }
 114:hothouse.h    ****             
 115:hothouse.h    ****             // Check for release
 116:hothouse.h    ****             if (footswitches_[i].FallingEdge()) {
 117:hothouse.h    ****                 footswitchStates_[i] = false;
 118:hothouse.h    ****                 
 119:hothouse.h    ****                 // Check for long press
 120:hothouse.h    ****                 uint32_t pressDuration = daisy::System::GetNow() - footswitchPressTime_[i];
 121:hothouse.h    ****                 if (pressDuration > 1000 && footswitchLongPressCallbacks_[i] != nullptr) {
 122:hothouse.h    ****                     footswitchLongPressCallbacks_[i]();
 123:hothouse.h    ****                 }
 124:hothouse.h    ****                 
 125:hothouse.h    ****                 // Call callback
 126:hothouse.h    ****                 if (footswitchCallbacks_[i] != nullptr) {
 127:hothouse.h    ****                     footswitchCallbacks_[i](false);
 128:hothouse.h    ****                 }
 129:hothouse.h    ****             }
ARM GAS  /tmp/cch2Dr4w.s 			page 78


 130:hothouse.h    ****         }
 131:hothouse.h    ****         
 132:hothouse.h    ****         // Process toggles
 133:hothouse.h    ****         for (int i = 0; i < 3; i++) {
 134:hothouse.h    ****             toggles_[i].Debounce();
 135:hothouse.h    ****             
 136:hothouse.h    ****             // Check for state change
 137:hothouse.h    ****             int newState = toggles_[i].Pressed() ? 1 : -1;
 138:hothouse.h    ****             
 139:hothouse.h    ****             if (newState != toggleStates_[i]) {
 140:hothouse.h    ****                 toggleStates_[i] = newState;
 141:hothouse.h    ****                 
 142:hothouse.h    ****                 // Call callback
 143:hothouse.h    ****                 if (toggleCallbacks_[i] != nullptr) {
 144:hothouse.h    ****                     toggleCallbacks_[i](newState > 0);
 145:hothouse.h    ****                 }
 146:hothouse.h    ****             }
 147:hothouse.h    ****         }
 148:hothouse.h    ****     }
 149:hothouse.h    ****     
 150:hothouse.h    ****     // Start audio processing
 151:hothouse.h    ****     void StartAudio(daisy::AudioHandle::AudioCallback cb) {
 152:hothouse.h    ****         seed.StartAudio(cb);
 153:hothouse.h    ****     }
 154:hothouse.h    ****     
 155:hothouse.h    ****     // Get audio sample rate
 156:hothouse.h    ****     float AudioSampleRate() {
 157:hothouse.h    ****         return seed.AudioSampleRate();
 158:hothouse.h    ****     }
 159:hothouse.h    ****     
 160:hothouse.h    ****     // Set callbacks
 161:hothouse.h    ****     void SetKnobCallback(int knob, void (*callback)(float)) {
 162:hothouse.h    ****         if (knob >= 0 && knob < 6) {
 163:hothouse.h    ****             knobCallbacks_[knob] = callback;
 164:hothouse.h    ****         }
 165:hothouse.h    ****     }
 166:hothouse.h    ****     
 167:hothouse.h    ****     void SetFootswitchCallback(int footswitch, void (*callback)(bool)) {
 168:hothouse.h    ****         if (footswitch >= 0 && footswitch < 2) {
 169:hothouse.h    ****             footswitchCallbacks_[footswitch] = callback;
 170:hothouse.h    ****         }
 171:hothouse.h    ****     }
 172:hothouse.h    ****     
 173:hothouse.h    ****     void SetFootswitchLongPressCallback(int footswitch, void (*callback)()) {
 174:hothouse.h    ****         if (footswitch >= 0 && footswitch < 2) {
 175:hothouse.h    ****             footswitchLongPressCallbacks_[footswitch] = callback;
 176:hothouse.h    ****         }
 177:hothouse.h    ****     }
 178:hothouse.h    ****     
 179:hothouse.h    ****     void SetToggleCallback(int toggle, void (*callback)(bool)) {
 180:hothouse.h    ****         if (toggle >= 0 && toggle < 3) {
 181:hothouse.h    ****             toggleCallbacks_[toggle] = callback;
 182:hothouse.h    ****         }
 183:hothouse.h    ****     }
 184:hothouse.h    ****     
 185:hothouse.h    ****     // Helper functions to get pin numbers
 186:hothouse.h    ****     Pin GetKnobPin(int knob) {
ARM GAS  /tmp/cch2Dr4w.s 			page 79


 187:hothouse.h    ****         switch (knob) {
 2066              		.loc 3 187 9 is_stmt 1 discriminator 2 view .LVU602
 2067 0030 042D     		cmp	r5, #4
 2068 0032 94BF     		ite	ls
 2069 0034 05F11000 		addls	r0, r5, #16
 2070              	.LBB392:
  62:hothouse.h    ****             adcConfig[i].InitSingle(seed.GetPin(GetKnobPin(i)));
 2071              		.loc 3 62 36 is_stmt 0 discriminator 2 view .LVU603
 2072 0038 0F20     		movhi	r0, #15
 2073              	.LVL183:
  61:hothouse.h    ****             adcConfig[i].InitSingle(seed.GetPin(GetKnobPin(i)));
 2074              		.loc 3 61 27 discriminator 2 view .LVU604
 2075 003a 05F10105 		add	r5, r5, #1
 2076 003e 98BF     		it	ls
 2077 0040 C0B2     		uxtbls	r0, r0
  62:hothouse.h    ****             adcConfig[i].InitSingle(seed.GetPin(GetKnobPin(i)));
 2078              		.loc 3 62 36 discriminator 2 view .LVU605
 2079 0042 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 2080              	.LVL184:
 2081 0046 ADF80800 		strh	r0, [sp, #8]	@ movhi
 2082 004a 0222     		movs	r2, #2
 2083 004c 3046     		mov	r0, r6
 2084 004e 0299     		ldr	r1, [sp, #8]
  61:hothouse.h    ****             adcConfig[i].InitSingle(seed.GetPin(GetKnobPin(i)));
 2085              		.loc 3 61 27 discriminator 2 view .LVU606
 2086 0050 1236     		adds	r6, r6, #18
  62:hothouse.h    ****             adcConfig[i].InitSingle(seed.GetPin(GetKnobPin(i)));
 2087              		.loc 3 62 36 discriminator 2 view .LVU607
 2088 0052 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 2089              	.LVL185:
  63:hothouse.h    ****             adcValues_[i] = 0.0f;
 2090              		.loc 3 63 13 is_stmt 1 discriminator 2 view .LVU608
  63:hothouse.h    ****             adcValues_[i] = 0.0f;
 2091              		.loc 3 63 27 is_stmt 0 discriminator 2 view .LVU609
 2092 0056 0023     		movs	r3, #0
  61:hothouse.h    ****             adcConfig[i].InitSingle(seed.GetPin(GetKnobPin(i)));
 2093              		.loc 3 61 27 discriminator 2 view .LVU610
 2094 0058 052D     		cmp	r5, #5
  63:hothouse.h    ****             adcValues_[i] = 0.0f;
 2095              		.loc 3 63 27 discriminator 2 view .LVU611
 2096 005a 47F8043B 		str	r3, [r7], #4	@ float
  61:hothouse.h    ****             adcConfig[i].InitSingle(seed.GetPin(GetKnobPin(i)));
 2097              		.loc 3 61 9 is_stmt 1 discriminator 2 view .LVU612
  61:hothouse.h    ****             adcConfig[i].InitSingle(seed.GetPin(GetKnobPin(i)));
 2098              		.loc 3 61 27 discriminator 2 view .LVU613
 2099 005e E7D1     		bne	.L146
 2100              	.LBE392:
  65:hothouse.h    ****         seed.adc.Start();
 2101              		.loc 3 65 9 view .LVU614
  65:hothouse.h    ****         seed.adc.Start();
 2102              		.loc 3 65 22 is_stmt 0 view .LVU615
 2103 0060 04F11800 		add	r0, r4, #24
 2104 0064 0423     		movs	r3, #4
 2105 0066 0622     		movs	r2, #6
 2106 0068 4146     		mov	r1, r8
 2107 006a 0190     		str	r0, [sp, #4]
 2108 006c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
ARM GAS  /tmp/cch2Dr4w.s 			page 80


 2109              	.LVL186:
  66:hothouse.h    ****         
 2110              		.loc 3 66 9 is_stmt 1 view .LVU616
  66:hothouse.h    ****         
 2111              		.loc 3 66 23 is_stmt 0 view .LVU617
 2112 0070 0198     		ldr	r0, [sp, #4]
 2113              	.LBB393:
  71:hothouse.h    ****             footswitchPressTime_[i] = 0;
 2114              		.loc 3 71 34 view .LVU618
 2115 0072 0025     		movs	r5, #0
 2116              	.LBE393:
  66:hothouse.h    ****         
 2117              		.loc 3 66 23 view .LVU619
 2118 0074 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 2119              	.LVL187:
  69:hothouse.h    ****             footswitches_[i].Init(seed.GetPin(GetFootswitchPin(i)), 1000);
 2120              		.loc 3 69 9 is_stmt 1 view .LVU620
 2121              	.LBB394:
  69:hothouse.h    ****             footswitches_[i].Init(seed.GetPin(GetFootswitchPin(i)), 1000);
 2122              		.loc 3 69 27 view .LVU621
  70:hothouse.h    ****             footswitchStates_[i] = false;
 2123              		.loc 3 70 13 view .LVU622
  70:hothouse.h    ****             footswitchStates_[i] = false;
 2124              		.loc 3 70 13 is_stmt 0 view .LVU623
 2125              	.LBE394:
 188:hothouse.h    ****             case 0: return KNOB_1;
 189:hothouse.h    ****             case 1: return KNOB_2;
 190:hothouse.h    ****             case 2: return KNOB_3;
 191:hothouse.h    ****             case 3: return KNOB_4;
 192:hothouse.h    ****             case 4: return KNOB_5;
 193:hothouse.h    ****             case 5: return KNOB_6;
 194:hothouse.h    ****             default: return KNOB_1;
 195:hothouse.h    ****         }
 196:hothouse.h    ****     }
 197:hothouse.h    ****     
 198:hothouse.h    ****     Pin GetFootswitchPin(int footswitch) {
 199:hothouse.h    ****         switch (footswitch) {
 2126              		.loc 3 199 9 is_stmt 1 view .LVU624
 2127              	.LBB395:
  70:hothouse.h    ****             footswitchStates_[i] = false;
 2128              		.loc 3 70 34 is_stmt 0 view .LVU625
 2129 0078 0120     		movs	r0, #1
 2130 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 2131              	.LVL188:
 2132 007e ADF80C00 		strh	r0, [sp, #12]	@ movhi
 2133 0082 0399     		ldr	r1, [sp, #12]
 2134 0084 04F17000 		add	r0, r4, #112
 2135 0088 9FED290A 		vldr.32	s0, .L149
 2136 008c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 2137              	.LVL189:
  71:hothouse.h    ****             footswitchPressTime_[i] = 0;
 2138              		.loc 3 71 13 is_stmt 1 view .LVU626
  71:hothouse.h    ****             footswitchPressTime_[i] = 0;
 2139              		.loc 3 71 34 is_stmt 0 view .LVU627
 2140 0090 84F89050 		strb	r5, [r4, #144]
  72:hothouse.h    ****             footswitchCallbacks_[i] = nullptr;
 2141              		.loc 3 72 13 is_stmt 1 view .LVU628
ARM GAS  /tmp/cch2Dr4w.s 			page 81


  72:hothouse.h    ****             footswitchCallbacks_[i] = nullptr;
 2142              		.loc 3 72 37 is_stmt 0 view .LVU629
 2143 0094 C4F89450 		str	r5, [r4, #148]
  73:hothouse.h    ****             footswitchLongPressCallbacks_[i] = nullptr;
 2144              		.loc 3 73 13 is_stmt 1 view .LVU630
  70:hothouse.h    ****             footswitchStates_[i] = false;
 2145              		.loc 3 70 34 is_stmt 0 view .LVU631
 2146 0098 0220     		movs	r0, #2
  73:hothouse.h    ****             footswitchLongPressCallbacks_[i] = nullptr;
 2147              		.loc 3 73 37 view .LVU632
 2148 009a C4F8F050 		str	r5, [r4, #240]
  74:hothouse.h    ****         }
 2149              		.loc 3 74 13 is_stmt 1 view .LVU633
  74:hothouse.h    ****         }
 2150              		.loc 3 74 46 is_stmt 0 view .LVU634
 2151 009e C4F8F850 		str	r5, [r4, #248]
  69:hothouse.h    ****             footswitches_[i].Init(seed.GetPin(GetFootswitchPin(i)), 1000);
 2152              		.loc 3 69 9 is_stmt 1 view .LVU635
 2153              	.LVL190:
  69:hothouse.h    ****             footswitches_[i].Init(seed.GetPin(GetFootswitchPin(i)), 1000);
 2154              		.loc 3 69 27 view .LVU636
  70:hothouse.h    ****             footswitchStates_[i] = false;
 2155              		.loc 3 70 13 view .LVU637
  70:hothouse.h    ****             footswitchStates_[i] = false;
 2156              		.loc 3 70 13 is_stmt 0 view .LVU638
 2157              	.LBE395:
 2158              		.loc 3 199 9 is_stmt 1 view .LVU639
 200:hothouse.h    ****             case 0: return FOOTSWITCH_1;
 201:hothouse.h    ****             case 1: return FOOTSWITCH_2;
 2159              		.loc 3 201 13 view .LVU640
 2160              		.loc 3 201 21 view .LVU641
 2161              	.LBB396:
  70:hothouse.h    ****             footswitchStates_[i] = false;
 2162              		.loc 3 70 34 is_stmt 0 view .LVU642
 2163 00a2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 2164              	.LVL191:
 2165 00a6 ADF80C00 		strh	r0, [sp, #12]	@ movhi
 2166 00aa 0399     		ldr	r1, [sp, #12]
 2167 00ac 04F18000 		add	r0, r4, #128
 2168 00b0 9FED1F0A 		vldr.32	s0, .L149
 2169 00b4 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 2170              	.LVL192:
  71:hothouse.h    ****             footswitchPressTime_[i] = 0;
 2171              		.loc 3 71 13 is_stmt 1 view .LVU643
  71:hothouse.h    ****             footswitchPressTime_[i] = 0;
 2172              		.loc 3 71 34 is_stmt 0 view .LVU644
 2173 00b8 84F89150 		strb	r5, [r4, #145]
  72:hothouse.h    ****             footswitchCallbacks_[i] = nullptr;
 2174              		.loc 3 72 13 is_stmt 1 view .LVU645
  72:hothouse.h    ****             footswitchCallbacks_[i] = nullptr;
 2175              		.loc 3 72 37 is_stmt 0 view .LVU646
 2176 00bc C4F89850 		str	r5, [r4, #152]
  73:hothouse.h    ****             footswitchLongPressCallbacks_[i] = nullptr;
 2177              		.loc 3 73 13 is_stmt 1 view .LVU647
 2178              	.LBE396:
 2179              	.LBB397:
  79:hothouse.h    ****             toggleStates_[i] = 0;
ARM GAS  /tmp/cch2Dr4w.s 			page 82


 2180              		.loc 3 79 29 is_stmt 0 view .LVU648
 2181 00c0 0720     		movs	r0, #7
 2182              	.LBE397:
 2183              	.LBB398:
  73:hothouse.h    ****             footswitchLongPressCallbacks_[i] = nullptr;
 2184              		.loc 3 73 37 view .LVU649
 2185 00c2 C4F8F450 		str	r5, [r4, #244]
  74:hothouse.h    ****         }
 2186              		.loc 3 74 13 is_stmt 1 view .LVU650
  74:hothouse.h    ****         }
 2187              		.loc 3 74 46 is_stmt 0 view .LVU651
 2188 00c6 C4F8FC50 		str	r5, [r4, #252]
  69:hothouse.h    ****             footswitches_[i].Init(seed.GetPin(GetFootswitchPin(i)), 1000);
 2189              		.loc 3 69 9 is_stmt 1 view .LVU652
 2190              	.LVL193:
  69:hothouse.h    ****             footswitches_[i].Init(seed.GetPin(GetFootswitchPin(i)), 1000);
 2191              		.loc 3 69 27 view .LVU653
  69:hothouse.h    ****             footswitches_[i].Init(seed.GetPin(GetFootswitchPin(i)), 1000);
 2192              		.loc 3 69 27 is_stmt 0 view .LVU654
 2193              	.LBE398:
 2194              	.LBB399:
  78:hothouse.h    ****             toggles_[i].Init(seed.GetPin(GetTogglePin(i)), 1000);
 2195              		.loc 3 78 27 is_stmt 1 view .LVU655
  79:hothouse.h    ****             toggleStates_[i] = 0;
 2196              		.loc 3 79 13 view .LVU656
  79:hothouse.h    ****             toggleStates_[i] = 0;
 2197              		.loc 3 79 13 is_stmt 0 view .LVU657
 2198              	.LBE399:
 202:hothouse.h    ****             default: return FOOTSWITCH_1;
 203:hothouse.h    ****         }
 204:hothouse.h    ****     }
 205:hothouse.h    ****     
 206:hothouse.h    ****     Pin GetTogglePin(int toggle) {
 207:hothouse.h    ****         switch (toggle) {
 2199              		.loc 3 207 9 is_stmt 1 view .LVU658
 2200              	.LBB400:
  79:hothouse.h    ****             toggleStates_[i] = 0;
 2201              		.loc 3 79 29 is_stmt 0 view .LVU659
 2202 00ca FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 2203              	.LVL194:
 2204 00ce ADF81000 		strh	r0, [sp, #16]	@ movhi
 2205 00d2 0499     		ldr	r1, [sp, #16]
 2206 00d4 04F19C00 		add	r0, r4, #156
 2207 00d8 9FED150A 		vldr.32	s0, .L149
 2208 00dc FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 2209              	.LVL195:
  80:hothouse.h    ****             toggleCallbacks_[i] = nullptr;
 2210              		.loc 3 80 13 is_stmt 1 view .LVU660
  80:hothouse.h    ****             toggleCallbacks_[i] = nullptr;
 2211              		.loc 3 80 30 is_stmt 0 view .LVU661
 2212 00e0 C4F8CC50 		str	r5, [r4, #204]
  81:hothouse.h    ****         }
 2213              		.loc 3 81 13 is_stmt 1 view .LVU662
  81:hothouse.h    ****         }
 2214              		.loc 3 81 33 is_stmt 0 view .LVU663
 2215 00e4 C4F80051 		str	r5, [r4, #256]
  78:hothouse.h    ****             toggles_[i].Init(seed.GetPin(GetTogglePin(i)), 1000);
ARM GAS  /tmp/cch2Dr4w.s 			page 83


 2216              		.loc 3 78 9 is_stmt 1 view .LVU664
 2217              	.LVL196:
  78:hothouse.h    ****             toggles_[i].Init(seed.GetPin(GetTogglePin(i)), 1000);
 2218              		.loc 3 78 27 view .LVU665
  79:hothouse.h    ****             toggleStates_[i] = 0;
 2219              		.loc 3 79 13 view .LVU666
  79:hothouse.h    ****             toggleStates_[i] = 0;
 2220              		.loc 3 79 13 is_stmt 0 view .LVU667
 2221              	.LBE400:
 2222              		.loc 3 207 9 is_stmt 1 view .LVU668
 208:hothouse.h    ****             case 0: return TOGGLE_1;
 209:hothouse.h    ****             case 1: return TOGGLE_2;
 2223              		.loc 3 209 13 view .LVU669
 2224              		.loc 3 209 21 view .LVU670
 2225              	.LBB401:
  79:hothouse.h    ****             toggleStates_[i] = 0;
 2226              		.loc 3 79 29 is_stmt 0 view .LVU671
 2227 00e8 0820     		movs	r0, #8
 2228 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 2229              	.LVL197:
 2230 00ee ADF81000 		strh	r0, [sp, #16]	@ movhi
 2231 00f2 0499     		ldr	r1, [sp, #16]
 2232 00f4 04F1AC00 		add	r0, r4, #172
 2233 00f8 9FED0D0A 		vldr.32	s0, .L149
 2234 00fc FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 2235              	.LVL198:
  80:hothouse.h    ****             toggleCallbacks_[i] = nullptr;
 2236              		.loc 3 80 13 is_stmt 1 view .LVU672
  80:hothouse.h    ****             toggleCallbacks_[i] = nullptr;
 2237              		.loc 3 80 30 is_stmt 0 view .LVU673
 2238 0100 C4F8D050 		str	r5, [r4, #208]
  81:hothouse.h    ****         }
 2239              		.loc 3 81 13 is_stmt 1 view .LVU674
  81:hothouse.h    ****         }
 2240              		.loc 3 81 33 is_stmt 0 view .LVU675
 2241 0104 C4F80451 		str	r5, [r4, #260]
  78:hothouse.h    ****             toggles_[i].Init(seed.GetPin(GetTogglePin(i)), 1000);
 2242              		.loc 3 78 9 is_stmt 1 view .LVU676
 2243              	.LVL199:
  78:hothouse.h    ****             toggles_[i].Init(seed.GetPin(GetTogglePin(i)), 1000);
 2244              		.loc 3 78 27 view .LVU677
  79:hothouse.h    ****             toggleStates_[i] = 0;
 2245              		.loc 3 79 13 view .LVU678
  79:hothouse.h    ****             toggleStates_[i] = 0;
 2246              		.loc 3 79 13 is_stmt 0 view .LVU679
 2247              	.LBE401:
 207:hothouse.h    ****             case 0: return TOGGLE_1;
 2248              		.loc 3 207 9 is_stmt 1 view .LVU680
 210:hothouse.h    ****             case 2: return TOGGLE_3;
 2249              		.loc 3 210 13 view .LVU681
 2250              		.loc 3 210 21 view .LVU682
 2251              	.LBB402:
  79:hothouse.h    ****             toggleStates_[i] = 0;
 2252              		.loc 3 79 29 is_stmt 0 view .LVU683
 2253 0108 0920     		movs	r0, #9
 2254 010a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 2255              	.LVL200:
ARM GAS  /tmp/cch2Dr4w.s 			page 84


 2256 010e ADF81000 		strh	r0, [sp, #16]	@ movhi
 2257 0112 9FED070A 		vldr.32	s0, .L149
 2258 0116 04F1BC00 		add	r0, r4, #188
 2259 011a 0499     		ldr	r1, [sp, #16]
 2260 011c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 2261              	.LVL201:
  80:hothouse.h    ****             toggleCallbacks_[i] = nullptr;
 2262              		.loc 3 80 13 is_stmt 1 view .LVU684
  80:hothouse.h    ****             toggleCallbacks_[i] = nullptr;
 2263              		.loc 3 80 30 is_stmt 0 view .LVU685
 2264 0120 C4F8D450 		str	r5, [r4, #212]
  81:hothouse.h    ****         }
 2265              		.loc 3 81 13 is_stmt 1 view .LVU686
  81:hothouse.h    ****         }
 2266              		.loc 3 81 33 is_stmt 0 view .LVU687
 2267 0124 C4F80851 		str	r5, [r4, #264]
  78:hothouse.h    ****             toggles_[i].Init(seed.GetPin(GetTogglePin(i)), 1000);
 2268              		.loc 3 78 9 is_stmt 1 view .LVU688
 2269              	.LVL202:
  78:hothouse.h    ****             toggles_[i].Init(seed.GetPin(GetTogglePin(i)), 1000);
 2270              		.loc 3 78 27 view .LVU689
 2271              	.LBE402:
  83:hothouse.h    ****     
 2272              		.loc 3 83 5 is_stmt 0 view .LVU690
 2273 0128 20B0     		add	sp, sp, #128
 2274              		.cfi_def_cfa_offset 24
 2275              		@ sp needed
 2276 012a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2277              	.LVL203:
 2278              	.L150:
  83:hothouse.h    ****     
 2279              		.loc 3 83 5 view .LVU691
 2280 012e 00BF     		.align	2
 2281              	.L149:
 2282 0130 00007A44 		.word	1148846080
 2283              		.cfi_endproc
 2284              	.LFE4713:
 2286              		.section	.text._ZN16clevelandmusicco8Hothouse18ProcessAllControlsEv,"axG",%progbits,_ZN16cleveland
 2287              		.align	1
 2288              		.weak	_ZN16clevelandmusicco8Hothouse18ProcessAllControlsEv
 2289              		.syntax unified
 2290              		.thumb
 2291              		.thumb_func
 2292              		.fpu fpv5-d16
 2294              	_ZN16clevelandmusicco8Hothouse18ProcessAllControlsEv:
 2295              	.LVL204:
 2296              	.LFB4714:
  85:hothouse.h    ****         // Process ADC readings
 2297              		.loc 3 85 10 is_stmt 1 view -0
 2298              		.cfi_startproc
 2299              		@ args = 0, pretend = 0, frame = 0
 2300              		@ frame_needed = 0, uses_anonymous_args = 0
  87:hothouse.h    ****             float newValue = seed.adc.GetFloat(i);
 2301              		.loc 3 87 9 view .LVU693
 2302              	.LBB417:
  87:hothouse.h    ****             float newValue = seed.adc.GetFloat(i);
 2303              		.loc 3 87 27 view .LVU694
ARM GAS  /tmp/cch2Dr4w.s 			page 85


 2304              	.LBE417:
  85:hothouse.h    ****         // Process ADC readings
 2305              		.loc 3 85 10 is_stmt 0 view .LVU695
 2306 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2307              		.cfi_def_cfa_offset 32
 2308              		.cfi_offset 3, -32
 2309              		.cfi_offset 4, -28
 2310              		.cfi_offset 5, -24
 2311              		.cfi_offset 6, -20
 2312              		.cfi_offset 7, -16
 2313              		.cfi_offset 8, -12
 2314              		.cfi_offset 9, -8
 2315              		.cfi_offset 14, -4
  85:hothouse.h    ****         // Process ADC readings
 2316              		.loc 3 85 10 view .LVU696
 2317 0004 0446     		mov	r4, r0
 2318 0006 00F14005 		add	r5, r0, #64
 2319              	.LBB419:
  87:hothouse.h    ****             float newValue = seed.adc.GetFloat(i);
 2320              		.loc 3 87 18 view .LVU697
 2321 000a 0026     		movs	r6, #0
 2322              	.LVL205:
 2323              	.L154:
 2324              	.LBB418:
  88:hothouse.h    ****             
 2325              		.loc 3 88 13 is_stmt 1 view .LVU698
  88:hothouse.h    ****             
 2326              		.loc 3 88 47 is_stmt 0 view .LVU699
 2327 000c F1B2     		uxtb	r1, r6
 2328 000e 04F11800 		add	r0, r4, #24
 2329 0012 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2330              	.LVL206:
  91:hothouse.h    ****             
 2331              		.loc 3 91 13 is_stmt 1 view .LVU700
  91:hothouse.h    ****             
 2332              		.loc 3 91 61 is_stmt 0 view .LVU701
 2333 0016 DFED3C7A 		vldr.32	s15, .L189
  91:hothouse.h    ****             
 2334              		.loc 3 91 41 view .LVU702
 2335 001a 95ED007A 		vldr.32	s14, [r5]
  91:hothouse.h    ****             
 2336              		.loc 3 91 61 view .LVU703
 2337 001e 20EE270A 		vmul.f32	s0, s0, s15
 2338              	.LVL207:
  91:hothouse.h    ****             
 2339              		.loc 3 91 50 view .LVU704
 2340 0022 DFED3A7A 		vldr.32	s15, .L189+4
 2341 0026 A7EE270A 		vfma.f32	s0, s14, s15
  91:hothouse.h    ****             
 2342              		.loc 3 91 27 view .LVU705
 2343 002a A5EC010A 		vstmia.32	r5!, {s0}
  94:hothouse.h    ****                 knobCallbacks_[i](adcValues_[i]);
 2344              		.loc 3 94 13 is_stmt 1 view .LVU706
  94:hothouse.h    ****                 knobCallbacks_[i](adcValues_[i]);
 2345              		.loc 3 94 33 is_stmt 0 view .LVU707
 2346 002e D5F89430 		ldr	r3, [r5, #148]
  94:hothouse.h    ****                 knobCallbacks_[i](adcValues_[i]);
ARM GAS  /tmp/cch2Dr4w.s 			page 86


 2347              		.loc 3 94 13 view .LVU708
 2348 0032 83B1     		cbz	r3, .L152
  94:hothouse.h    ****                 knobCallbacks_[i](adcValues_[i]);
 2349              		.loc 3 94 69 discriminator 1 view .LVU709
 2350 0034 D5ED057A 		vldr.32	s15, [r5, #20]
  94:hothouse.h    ****                 knobCallbacks_[i](adcValues_[i]);
 2351              		.loc 3 94 46 discriminator 1 view .LVU710
 2352 0038 9FED357A 		vldr.32	s14, .L189+8
  94:hothouse.h    ****                 knobCallbacks_[i](adcValues_[i]);
 2353              		.loc 3 94 69 discriminator 1 view .LVU711
 2354 003c 70EE677A 		vsub.f32	s15, s0, s15
  94:hothouse.h    ****                 knobCallbacks_[i](adcValues_[i]);
 2355              		.loc 3 94 54 discriminator 1 view .LVU712
 2356 0040 F0EEE77A 		vabs.f32	s15, s15
  94:hothouse.h    ****                 knobCallbacks_[i](adcValues_[i]);
 2357              		.loc 3 94 46 discriminator 1 view .LVU713
 2358 0044 F4EEC77A 		vcmpe.f32	s15, s14
 2359 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2360 004c 03DD     		ble	.L152
  95:hothouse.h    ****                 lastKnobValues_[i] = adcValues_[i];
 2361              		.loc 3 95 17 is_stmt 1 view .LVU714
  95:hothouse.h    ****                 lastKnobValues_[i] = adcValues_[i];
 2362              		.loc 3 95 34 is_stmt 0 view .LVU715
 2363 004e 9847     		blx	r3
 2364              	.LVL208:
  96:hothouse.h    ****             }
 2365              		.loc 3 96 17 is_stmt 1 view .LVU716
  96:hothouse.h    ****             }
 2366              		.loc 3 96 36 is_stmt 0 view .LVU717
 2367 0050 55F8043C 		ldr	r3, [r5, #-4]	@ float
 2368 0054 6B61     		str	r3, [r5, #20]	@ float
 2369              	.L152:
 2370              	.LBE418:
  87:hothouse.h    ****             float newValue = seed.adc.GetFloat(i);
 2371              		.loc 3 87 9 is_stmt 1 discriminator 2 view .LVU718
 2372 0056 0136     		adds	r6, r6, #1
 2373              	.LVL209:
  87:hothouse.h    ****             float newValue = seed.adc.GetFloat(i);
 2374              		.loc 3 87 27 discriminator 2 view .LVU719
 2375 0058 062E     		cmp	r6, #6
 2376 005a D7D1     		bne	.L154
 2377 005c 04F19007 		add	r7, r4, #144
 2378 0060 04F17005 		add	r5, r4, #112
 2379 0064 04F19406 		add	r6, r4, #148
 2380              	.LVL210:
  87:hothouse.h    ****             float newValue = seed.adc.GetFloat(i);
 2381              		.loc 3 87 27 is_stmt 0 discriminator 2 view .LVU720
 2382 0068 B846     		mov	r8, r7
 2383              	.L163:
 2384              	.LBE419:
 2385              	.LBB420:
 2386              	.LBB421:
 102:hothouse.h    ****             
 2387              		.loc 3 102 13 is_stmt 1 view .LVU721
 102:hothouse.h    ****             
 2388              		.loc 3 102 38 is_stmt 0 view .LVU722
 2389 006a 2846     		mov	r0, r5
ARM GAS  /tmp/cch2Dr4w.s 			page 87


 2390 006c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 2391              	.LVL211:
 105:hothouse.h    ****                 footswitchStates_[i] = true;
 2392              		.loc 3 105 13 is_stmt 1 view .LVU723
 2393              	.LBB422:
 2394              	.LBI422:
 2395              		.file 11 "/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** #pragma once
   2:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** #include "sys/system.h"
   7:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** 
   8:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** namespace daisy
   9:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** {
  10:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** /** 
  11:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     @date December 2019
  15:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     @ingroup controls
  16:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** */
  17:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** class Switch
  18:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** {
  19:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****   public:
  20:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     enum Type
  22:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     {
  23:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     };
  26:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     enum Polarity
  28:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     {
  29:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     };
  32:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** 
  33:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     enum Pull
  35:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     {
  36:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     };
  40:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** 
  41:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     Switch() {}
  42:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     ~Switch() {}
  43:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** 
  44:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     /** 
  45:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
ARM GAS  /tmp/cch2Dr4w.s 			page 88


  51:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     */
  52:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     void
  53:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** 
  55:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     /**
  56:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****        Simplified Init.
  57:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     */
  60:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** 
  62:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     /** 
  63:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     */
  67:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     void Debounce();
  68:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** 
  69:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 2396              		.loc 11 70 17 view .LVU724
 2397              	.LBB423:
 2398              		.loc 11 70 38 view .LVU725
 2399              		.loc 11 70 54 is_stmt 0 view .LVU726
 2400 0070 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 2401 0072 2BB1     		cbz	r3, .L156
 2402              	.LVL212:
 2403              		.loc 11 70 54 view .LVU727
 2404              	.LBE423:
 2405              	.LBE422:
 105:hothouse.h    ****                 footswitchStates_[i] = true;
 2406              		.loc 3 105 13 view .LVU728
 2407 0074 AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
 2408 0076 7F2B     		cmp	r3, #127
 2409 0078 25D0     		beq	.L157
 2410              	.L161:
 2411              	.LBB424:
 116:hothouse.h    ****                 footswitchStates_[i] = false;
 2412              		.loc 3 116 13 view .LVU729
 2413 007a AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
 2414 007c 802B     		cmp	r3, #128
 2415 007e 31D0     		beq	.L158
 2416              	.L156:
 2417              	.LBE424:
 2418              	.LBE421:
 101:hothouse.h    ****             footswitches_[i].Debounce();
 2419              		.loc 3 101 9 is_stmt 1 discriminator 2 view .LVU730
 101:hothouse.h    ****             footswitches_[i].Debounce();
 2420              		.loc 3 101 27 discriminator 2 view .LVU731
 2421 0080 1035     		adds	r5, r5, #16
 2422 0082 0436     		adds	r6, r6, #4
 2423 0084 0137     		adds	r7, r7, #1
 2424 0086 4545     		cmp	r5, r8
 2425 0088 EFD1     		bne	.L163
 2426 008a 04F19C05 		add	r5, r4, #156
 2427 008e CC34     		adds	r4, r4, #204
 2428              	.LVL213:
ARM GAS  /tmp/cch2Dr4w.s 			page 89


 101:hothouse.h    ****             footswitches_[i].Debounce();
 2429              		.loc 3 101 27 is_stmt 0 discriminator 2 view .LVU732
 2430 0090 2646     		mov	r6, r4
 2431              	.L168:
 2432              	.LBE420:
 2433              	.LBB430:
 2434              	.LBB431:
 134:hothouse.h    ****             
 2435              		.loc 3 134 13 is_stmt 1 view .LVU733
 134:hothouse.h    ****             
 2436              		.loc 3 134 33 is_stmt 0 view .LVU734
 2437 0092 2846     		mov	r0, r5
 2438 0094 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 2439              	.LVL214:
 137:hothouse.h    ****             
 2440              		.loc 3 137 13 is_stmt 1 view .LVU735
 2441              	.LBB432:
 2442              	.LBI432:
  71:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** 
  72:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  73:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     inline bool FallingEdge() const
  74:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     {
  75:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     }
  77:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h **** 
  78:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 2443              		.loc 11 79 17 view .LVU736
 2444              	.LBB433:
 2445              		.loc 11 79 35 view .LVU737
 2446              		.loc 11 79 35 is_stmt 0 view .LVU738
 2447              	.LBE433:
 2448              	.LBE432:
 137:hothouse.h    ****             
 2449              		.loc 3 137 50 view .LVU739
 2450 0098 AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
 2451 009a FF2B     		cmp	r3, #255
 139:hothouse.h    ****                 toggleStates_[i] = newState;
 2452              		.loc 3 139 13 view .LVU740
 2453 009c 2368     		ldr	r3, [r4]
 137:hothouse.h    ****             
 2454              		.loc 3 137 50 view .LVU741
 2455 009e 0CBF     		ite	eq
 2456 00a0 0120     		moveq	r0, #1
 2457 00a2 4FF0FF30 		movne	r0, #-1
 2458              	.LVL215:
 139:hothouse.h    ****                 toggleStates_[i] = newState;
 2459              		.loc 3 139 13 is_stmt 1 view .LVU742
 2460 00a6 8342     		cmp	r3, r0
 2461 00a8 07D0     		beq	.L166
 140:hothouse.h    ****                 
 2462              		.loc 3 140 17 view .LVU743
 143:hothouse.h    ****                     toggleCallbacks_[i](newState > 0);
 2463              		.loc 3 143 39 is_stmt 0 view .LVU744
 2464 00aa 636B     		ldr	r3, [r4, #52]
 140:hothouse.h    ****                 
 2465              		.loc 3 140 34 view .LVU745
ARM GAS  /tmp/cch2Dr4w.s 			page 90


 2466 00ac 2060     		str	r0, [r4]
 143:hothouse.h    ****                     toggleCallbacks_[i](newState > 0);
 2467              		.loc 3 143 17 is_stmt 1 view .LVU746
 2468 00ae 23B1     		cbz	r3, .L166
 144:hothouse.h    ****                 }
 2469              		.loc 3 144 21 view .LVU747
 144:hothouse.h    ****                 }
 2470              		.loc 3 144 40 is_stmt 0 view .LVU748
 2471 00b0 0028     		cmp	r0, #0
 2472 00b2 D4BF     		ite	le
 2473 00b4 0020     		movle	r0, #0
 2474              	.LVL216:
 144:hothouse.h    ****                 }
 2475              		.loc 3 144 40 view .LVU749
 2476 00b6 0120     		movgt	r0, #1
 2477 00b8 9847     		blx	r3
 2478              	.LVL217:
 2479              	.L166:
 144:hothouse.h    ****                 }
 2480              		.loc 3 144 40 view .LVU750
 2481              	.LBE431:
 133:hothouse.h    ****             toggles_[i].Debounce();
 2482              		.loc 3 133 9 is_stmt 1 discriminator 2 view .LVU751
 133:hothouse.h    ****             toggles_[i].Debounce();
 2483              		.loc 3 133 27 discriminator 2 view .LVU752
 2484 00ba 1035     		adds	r5, r5, #16
 2485 00bc 0434     		adds	r4, r4, #4
 2486 00be AE42     		cmp	r6, r5
 2487 00c0 E7D1     		bne	.L168
 2488              	.LBE430:
 148:hothouse.h    ****     
 2489              		.loc 3 148 5 is_stmt 0 view .LVU753
 2490 00c2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2491              	.LVL218:
 2492              	.L157:
 2493              	.LBB434:
 2494              	.LBB429:
 106:hothouse.h    ****                 footswitchPressTime_[i] = daisy::System::GetNow();
 2495              		.loc 3 106 17 is_stmt 1 view .LVU754
 106:hothouse.h    ****                 footswitchPressTime_[i] = daisy::System::GetNow();
 2496              		.loc 3 106 38 is_stmt 0 view .LVU755
 2497 00c6 4FF00109 		mov	r9, #1
 2498 00ca 87F80090 		strb	r9, [r7]
 107:hothouse.h    ****                 
 2499              		.loc 3 107 17 is_stmt 1 view .LVU756
 107:hothouse.h    ****                 
 2500              		.loc 3 107 64 is_stmt 0 view .LVU757
 2501 00ce FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 2502              	.LVL219:
 110:hothouse.h    ****                     footswitchCallbacks_[i](true);
 2503              		.loc 3 110 43 view .LVU758
 2504 00d2 F36D     		ldr	r3, [r6, #92]
 107:hothouse.h    ****                 
 2505              		.loc 3 107 41 view .LVU759
 2506 00d4 3060     		str	r0, [r6]
 110:hothouse.h    ****                     footswitchCallbacks_[i](true);
 2507              		.loc 3 110 17 is_stmt 1 view .LVU760
ARM GAS  /tmp/cch2Dr4w.s 			page 91


 2508 00d6 0BB1     		cbz	r3, .L160
 111:hothouse.h    ****                 }
 2509              		.loc 3 111 21 view .LVU761
 111:hothouse.h    ****                 }
 2510              		.loc 3 111 44 is_stmt 0 view .LVU762
 2511 00d8 4846     		mov	r0, r9
 2512 00da 9847     		blx	r3
 2513              	.LVL220:
 2514              	.L160:
 116:hothouse.h    ****                 footswitchStates_[i] = false;
 2515              		.loc 3 116 13 is_stmt 1 view .LVU763
 2516              	.LBB428:
 2517              	.LBB425:
 2518              	.LBI425:
  73:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     {
 2519              		.loc 11 73 17 view .LVU764
 2520              	.LBB426:
  75:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     }
 2521              		.loc 11 75 9 view .LVU765
  75:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     }
 2522              		.loc 11 75 25 is_stmt 0 view .LVU766
 2523 00dc 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 2524 00de 002B     		cmp	r3, #0
 2525 00e0 CBD1     		bne	.L161
 2526 00e2 CDE7     		b	.L156
 2527              	.LVL221:
 2528              	.L158:
  75:/home/ubuntu/DaisyExamples/libDaisy/src/hid/switch.h ****     }
 2529              		.loc 11 75 25 view .LVU767
 2530              	.LBE426:
 2531              	.LBE425:
 2532              	.LBB427:
 117:hothouse.h    ****                 
 2533              		.loc 3 117 17 is_stmt 1 view .LVU768
 117:hothouse.h    ****                 
 2534              		.loc 3 117 38 is_stmt 0 view .LVU769
 2535 00e4 0023     		movs	r3, #0
 2536 00e6 3B70     		strb	r3, [r7]
 120:hothouse.h    ****                 if (pressDuration > 1000 && footswitchLongPressCallbacks_[i] != nullptr) {
 2537              		.loc 3 120 17 is_stmt 1 view .LVU770
 120:hothouse.h    ****                 if (pressDuration > 1000 && footswitchLongPressCallbacks_[i] != nullptr) {
 2538              		.loc 3 120 63 is_stmt 0 view .LVU771
 2539 00e8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 2540              	.LVL222:
 121:hothouse.h    ****                     footswitchLongPressCallbacks_[i]();
 2541              		.loc 3 121 17 is_stmt 1 view .LVU772
 120:hothouse.h    ****                 if (pressDuration > 1000 && footswitchLongPressCallbacks_[i] != nullptr) {
 2542              		.loc 3 120 90 is_stmt 0 view .LVU773
 2543 00ec 3368     		ldr	r3, [r6]
 2544 00ee C01A     		subs	r0, r0, r3
 2545              	.LVL223:
 121:hothouse.h    ****                     footswitchLongPressCallbacks_[i]();
 2546              		.loc 3 121 17 view .LVU774
 2547 00f0 B0F57A7F 		cmp	r0, #1000
 2548 00f4 02D9     		bls	.L162
 121:hothouse.h    ****                     footswitchLongPressCallbacks_[i]();
 2549              		.loc 3 121 76 discriminator 1 view .LVU775
ARM GAS  /tmp/cch2Dr4w.s 			page 92


 2550 00f6 736E     		ldr	r3, [r6, #100]
 121:hothouse.h    ****                     footswitchLongPressCallbacks_[i]();
 2551              		.loc 3 121 42 discriminator 1 view .LVU776
 2552 00f8 03B1     		cbz	r3, .L162
 122:hothouse.h    ****                 }
 2553              		.loc 3 122 21 is_stmt 1 view .LVU777
 122:hothouse.h    ****                 }
 2554              		.loc 3 122 53 is_stmt 0 view .LVU778
 2555 00fa 9847     		blx	r3
 2556              	.LVL224:
 2557              	.L162:
 126:hothouse.h    ****                     footswitchCallbacks_[i](false);
 2558              		.loc 3 126 17 is_stmt 1 view .LVU779
 126:hothouse.h    ****                     footswitchCallbacks_[i](false);
 2559              		.loc 3 126 43 is_stmt 0 view .LVU780
 2560 00fc F36D     		ldr	r3, [r6, #92]
 126:hothouse.h    ****                     footswitchCallbacks_[i](false);
 2561              		.loc 3 126 17 view .LVU781
 2562 00fe 002B     		cmp	r3, #0
 2563 0100 BED0     		beq	.L156
 127:hothouse.h    ****                 }
 2564              		.loc 3 127 21 is_stmt 1 view .LVU782
 127:hothouse.h    ****                 }
 2565              		.loc 3 127 44 is_stmt 0 view .LVU783
 2566 0102 0020     		movs	r0, #0
 2567 0104 9847     		blx	r3
 2568              	.LVL225:
 2569 0106 BBE7     		b	.L156
 2570              	.L190:
 2571              		.align	2
 2572              	.L189:
 2573 0108 CDCCCC3D 		.word	1036831949
 2574 010c 6666663F 		.word	1063675494
 2575 0110 0AD7233C 		.word	1008981770
 2576              	.LBE427:
 2577              	.LBE428:
 2578              	.LBE429:
 2579              	.LBE434:
 2580              		.cfi_endproc
 2581              	.LFE4714:
 2583              		.section	.text._ZN8IRLoader6LoadIREv,"axG",%progbits,_ZN8IRLoader6LoadIREv,comdat
 2584              		.align	1
 2585              		.weak	_ZN8IRLoader6LoadIREv
 2586              		.syntax unified
 2587              		.thumb
 2588              		.thumb_func
 2589              		.fpu fpv5-d16
 2591              	_ZN8IRLoader6LoadIREv:
 2592              	.LVL226:
 2593              	.LFB4729:
  44:IRLoader.h    ****         if (!usbh_ || !mounted_) {
 2594              		.loc 10 44 10 is_stmt 1 view -0
 2595              		.cfi_startproc
 2596              		@ args = 0, pretend = 0, frame = 0
 2597              		@ frame_needed = 0, uses_anonymous_args = 0
  45:IRLoader.h    ****             return false;
 2598              		.loc 10 45 9 view .LVU785
ARM GAS  /tmp/cch2Dr4w.s 			page 93


  44:IRLoader.h    ****         if (!usbh_ || !mounted_) {
 2599              		.loc 10 44 10 is_stmt 0 view .LVU786
 2600 0000 08B5     		push	{r3, lr}
 2601              		.cfi_def_cfa_offset 8
 2602              		.cfi_offset 3, -8
 2603              		.cfi_offset 14, -4
  45:IRLoader.h    ****             return false;
 2604              		.loc 10 45 9 view .LVU787
 2605 0002 0368     		ldr	r3, [r0]
 2606 0004 43B1     		cbz	r3, .L193
  45:IRLoader.h    ****             return false;
 2607              		.loc 10 45 24 discriminator 1 view .LVU788
 2608 0006 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 2609              	.LVL227:
  45:IRLoader.h    ****             return false;
 2610              		.loc 10 45 20 discriminator 1 view .LVU789
 2611 0008 38B1     		cbz	r0, .L192
 2612              	.LBB437:
 2613              	.LBI437:
  44:IRLoader.h    ****         if (!usbh_ || !mounted_) {
 2614              		.loc 10 44 10 is_stmt 1 view .LVU790
 2615              	.LVL228:
 2616              	.LBB438:
  50:IRLoader.h    ****             return true;
 2617              		.loc 10 50 9 view .LVU791
  50:IRLoader.h    ****             return true;
 2618              		.loc 10 50 23 is_stmt 0 view .LVU792
 2619 000a FFF7FEFF 		bl	_ZN8IRLoader10LoadMonoIREv.isra.0
 2620              	.LVL229:
  50:IRLoader.h    ****             return true;
 2621              		.loc 10 50 9 view .LVU793
 2622 000e 20B9     		cbnz	r0, .L192
  55:IRLoader.h    ****     }
 2623              		.loc 10 55 9 is_stmt 1 view .LVU794
 2624              	.LBE438:
 2625              	.LBE437:
  56:IRLoader.h    ****     
 2626              		.loc 10 56 5 is_stmt 0 view .LVU795
 2627 0010 BDE80840 		pop	{r3, lr}
 2628              		.cfi_remember_state
 2629              		.cfi_restore 14
 2630              		.cfi_restore 3
 2631              		.cfi_def_cfa_offset 0
 2632              	.LBB440:
 2633              	.LBB439:
  55:IRLoader.h    ****     }
 2634              		.loc 10 55 28 view .LVU796
 2635 0014 FFF7FEBF 		b	_ZN8IRLoader12LoadStereoIREv.isra.0
 2636              	.LVL230:
 2637              	.L193:
 2638              		.cfi_restore_state
  55:IRLoader.h    ****     }
 2639              		.loc 10 55 28 view .LVU797
 2640              	.LBE439:
 2641              	.LBE440:
  46:IRLoader.h    ****         }
 2642              		.loc 10 46 20 view .LVU798
ARM GAS  /tmp/cch2Dr4w.s 			page 94


 2643 0018 1846     		mov	r0, r3
 2644              	.LVL231:
 2645              	.L192:
  56:IRLoader.h    ****     
 2646              		.loc 10 56 5 view .LVU799
 2647 001a 08BD     		pop	{r3, pc}
 2648              		.cfi_endproc
 2649              	.LFE4729:
 2651              		.section	.text._Z26HandleFootswitch1LongPressv,"ax",%progbits
 2652              		.align	1
 2653              		.global	_Z26HandleFootswitch1LongPressv
 2654              		.syntax unified
 2655              		.thumb
 2656              		.thumb_func
 2657              		.fpu fpv5-d16
 2659              	_Z26HandleFootswitch1LongPressv:
 2660              	.LFB5523:
 655:EchoBridgeWithUSB.cpp ****     // Set LED1 to blink during IR loading (temporary indicator)
 2661              		.loc 2 655 35 is_stmt 1 view -0
 2662              		.cfi_startproc
 2663              		@ args = 0, pretend = 0, frame = 0
 2664              		@ frame_needed = 0, uses_anonymous_args = 0
 657:EchoBridgeWithUSB.cpp ****     
 2665              		.loc 2 657 5 view .LVU801
 657:EchoBridgeWithUSB.cpp ****     
 2666              		.loc 2 657 13 is_stmt 0 view .LVU802
 2667 0000 B7EE000A 		vmov.f32	s0, #1.0e+0
 2668 0004 2048     		ldr	r0, .L208
 655:EchoBridgeWithUSB.cpp ****     // Set LED1 to blink during IR loading (temporary indicator)
 2669              		.loc 2 655 35 view .LVU803
 2670 0006 10B5     		push	{r4, lr}
 2671              		.cfi_def_cfa_offset 8
 2672              		.cfi_offset 4, -8
 2673              		.cfi_offset 14, -4
 657:EchoBridgeWithUSB.cpp ****     
 2674              		.loc 2 657 13 view .LVU804
 2675 0008 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 2676              	.LVL232:
 660:EchoBridgeWithUSB.cpp ****         irLoaded = true;
 2677              		.loc 2 660 5 is_stmt 1 view .LVU805
 2678              	.LBB441:
 660:EchoBridgeWithUSB.cpp ****         irLoaded = true;
 2679              		.loc 2 660 24 is_stmt 0 view .LVU806
 2680 000c 1F48     		ldr	r0, .L208+4
 2681 000e FFF7FEFF 		bl	_ZN8IRLoader6LoadIREv
 2682              	.LVL233:
 2683 0012 1F4B     		ldr	r3, .L208+8
 660:EchoBridgeWithUSB.cpp ****         irLoaded = true;
 2684              		.loc 2 660 5 view .LVU807
 2685 0014 10B3     		cbz	r0, .L198
 2686              	.LBB442:
 661:EchoBridgeWithUSB.cpp ****         
 2687              		.loc 2 661 9 is_stmt 1 view .LVU808
 661:EchoBridgeWithUSB.cpp ****         
 2688              		.loc 2 661 18 is_stmt 0 view .LVU809
 2689 0016 0122     		movs	r2, #1
 2690 0018 0524     		movs	r4, #5
ARM GAS  /tmp/cch2Dr4w.s 			page 95


 2691 001a 1A70     		strb	r2, [r3]
 664:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2692              		.loc 2 664 9 is_stmt 1 view .LVU810
 2693              	.LVL234:
 2694              	.LBB443:
 664:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2695              		.loc 2 664 27 view .LVU811
 2696              	.L200:
 665:EchoBridgeWithUSB.cpp ****             System::Delay(50);
 2697              		.loc 2 665 13 discriminator 2 view .LVU812
 665:EchoBridgeWithUSB.cpp ****             System::Delay(50);
 2698              		.loc 2 665 21 is_stmt 0 discriminator 2 view .LVU813
 2699 001c 9FED1D0A 		vldr.32	s0, .L208+12
 2700 0020 1948     		ldr	r0, .L208
 2701 0022 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 2702              	.LVL235:
 666:EchoBridgeWithUSB.cpp ****             led1.Set(1.0f);
 2703              		.loc 2 666 13 is_stmt 1 discriminator 2 view .LVU814
 666:EchoBridgeWithUSB.cpp ****             led1.Set(1.0f);
 2704              		.loc 2 666 26 is_stmt 0 discriminator 2 view .LVU815
 2705 0026 3220     		movs	r0, #50
 2706 0028 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 2707              	.LVL236:
 667:EchoBridgeWithUSB.cpp ****             System::Delay(50);
 2708              		.loc 2 667 13 is_stmt 1 discriminator 2 view .LVU816
 667:EchoBridgeWithUSB.cpp ****             System::Delay(50);
 2709              		.loc 2 667 21 is_stmt 0 discriminator 2 view .LVU817
 2710 002c B7EE000A 		vmov.f32	s0, #1.0e+0
 2711 0030 1548     		ldr	r0, .L208
 2712 0032 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 2713              	.LVL237:
 668:EchoBridgeWithUSB.cpp ****         }
 2714              		.loc 2 668 13 is_stmt 1 discriminator 2 view .LVU818
 668:EchoBridgeWithUSB.cpp ****         }
 2715              		.loc 2 668 26 is_stmt 0 discriminator 2 view .LVU819
 2716 0036 3220     		movs	r0, #50
 2717 0038 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 2718              	.LVL238:
 664:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2719              		.loc 2 664 9 is_stmt 1 discriminator 2 view .LVU820
 664:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2720              		.loc 2 664 27 discriminator 2 view .LVU821
 2721 003c 013C     		subs	r4, r4, #1
 2722              	.LVL239:
 664:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2723              		.loc 2 664 27 is_stmt 0 discriminator 2 view .LVU822
 2724 003e EDD1     		bne	.L200
 2725              	.LVL240:
 2726              	.L199:
 664:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2727              		.loc 2 664 27 discriminator 2 view .LVU823
 2728              	.LBE443:
 2729              	.LBE442:
 2730              	.LBE441:
 683:EchoBridgeWithUSB.cpp **** }
 2731              		.loc 2 683 5 is_stmt 1 view .LVU824
 683:EchoBridgeWithUSB.cpp **** }
ARM GAS  /tmp/cch2Dr4w.s 			page 96


 2732              		.loc 2 683 13 is_stmt 0 view .LVU825
 2733 0040 154B     		ldr	r3, .L208+16
 2734 0042 B7EE000A 		vmov.f32	s0, #1.0e+0
 2735 0046 DFED137A 		vldr.32	s15, .L208+12
 2736 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2737 004c 0E48     		ldr	r0, .L208
 2738 004e 002B     		cmp	r3, #0
 684:EchoBridgeWithUSB.cpp **** 
 2739              		.loc 2 684 1 view .LVU826
 2740 0050 BDE81040 		pop	{r4, lr}
 2741              		.cfi_remember_state
 2742              		.cfi_restore 14
 2743              		.cfi_restore 4
 2744              		.cfi_def_cfa_offset 0
 683:EchoBridgeWithUSB.cpp **** }
 2745              		.loc 2 683 13 view .LVU827
 2746 0054 07FE800A 		vseleq.f32	s0, s15, s0
 2747 0058 FFF7FEBF 		b	_ZN5daisy3Led3SetEf
 2748              	.LVL241:
 2749              	.L198:
 2750              		.cfi_restore_state
 2751              	.LBB446:
 2752              	.LBB444:
 671:EchoBridgeWithUSB.cpp ****         
 2753              		.loc 2 671 9 is_stmt 1 view .LVU828
 671:EchoBridgeWithUSB.cpp ****         
 2754              		.loc 2 671 18 is_stmt 0 view .LVU829
 2755 005c 0324     		movs	r4, #3
 2756 005e 1870     		strb	r0, [r3]
 674:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2757              		.loc 2 674 9 is_stmt 1 view .LVU830
 2758              	.LVL242:
 2759              	.LBB445:
 674:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2760              		.loc 2 674 27 view .LVU831
 2761              	.L201:
 675:EchoBridgeWithUSB.cpp ****             System::Delay(200);
 2762              		.loc 2 675 13 discriminator 2 view .LVU832
 675:EchoBridgeWithUSB.cpp ****             System::Delay(200);
 2763              		.loc 2 675 21 is_stmt 0 discriminator 2 view .LVU833
 2764 0060 9FED0C0A 		vldr.32	s0, .L208+12
 2765 0064 0848     		ldr	r0, .L208
 2766 0066 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 2767              	.LVL243:
 676:EchoBridgeWithUSB.cpp ****             led1.Set(1.0f);
 2768              		.loc 2 676 13 is_stmt 1 discriminator 2 view .LVU834
 676:EchoBridgeWithUSB.cpp ****             led1.Set(1.0f);
 2769              		.loc 2 676 26 is_stmt 0 discriminator 2 view .LVU835
 2770 006a C820     		movs	r0, #200
 2771 006c FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 2772              	.LVL244:
 677:EchoBridgeWithUSB.cpp ****             System::Delay(200);
 2773              		.loc 2 677 13 is_stmt 1 discriminator 2 view .LVU836
 677:EchoBridgeWithUSB.cpp ****             System::Delay(200);
 2774              		.loc 2 677 21 is_stmt 0 discriminator 2 view .LVU837
 2775 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 2776 0074 0448     		ldr	r0, .L208
ARM GAS  /tmp/cch2Dr4w.s 			page 97


 2777 0076 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 2778              	.LVL245:
 678:EchoBridgeWithUSB.cpp ****         }
 2779              		.loc 2 678 13 is_stmt 1 discriminator 2 view .LVU838
 678:EchoBridgeWithUSB.cpp ****         }
 2780              		.loc 2 678 26 is_stmt 0 discriminator 2 view .LVU839
 2781 007a C820     		movs	r0, #200
 2782 007c FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 2783              	.LVL246:
 674:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2784              		.loc 2 674 9 is_stmt 1 discriminator 2 view .LVU840
 674:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2785              		.loc 2 674 27 discriminator 2 view .LVU841
 2786 0080 013C     		subs	r4, r4, #1
 2787              	.LVL247:
 674:EchoBridgeWithUSB.cpp ****             led1.Set(0.0f);
 2788              		.loc 2 674 27 is_stmt 0 discriminator 2 view .LVU842
 2789 0082 EDD1     		bne	.L201
 2790 0084 DCE7     		b	.L199
 2791              	.L209:
 2792 0086 00BF     		.align	2
 2793              	.L208:
 2794 0088 00000000 		.word	.LANCHOR1
 2795 008c 00000000 		.word	.LANCHOR5
 2796 0090 00000000 		.word	.LANCHOR6
 2797 0094 00000000 		.word	0
 2798 0098 00000000 		.word	.LANCHOR0
 2799              	.LBE445:
 2800              	.LBE444:
 2801              	.LBE446:
 2802              		.cfi_endproc
 2803              	.LFE5523:
 2805              		.section	.text._ZN28PartitionedConvolutionReverb13UpdateFiltersEv,"axG",%progbits,_ZN28Partitioned
 2806              		.align	1
 2807              		.weak	_ZN28PartitionedConvolutionReverb13UpdateFiltersEv
 2808              		.syntax unified
 2809              		.thumb
 2810              		.thumb_func
 2811              		.fpu fpv5-d16
 2813              	_ZN28PartitionedConvolutionReverb13UpdateFiltersEv:
 2814              	.LVL248:
 2815              	.LFB5517:
 376:EchoBridgeWithUSB.cpp ****         // Low cut filter (high pass)
 2816              		.loc 2 376 10 is_stmt 1 view -0
 2817              		.cfi_startproc
 2818              		@ args = 0, pretend = 0, frame = 8
 2819              		@ frame_needed = 0, uses_anonymous_args = 0
 378:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetRes(0.707f);
 2820              		.loc 2 378 9 view .LVU844
 376:EchoBridgeWithUSB.cpp ****         // Low cut filter (high pass)
 2821              		.loc 2 376 10 is_stmt 0 view .LVU845
 2822 0000 30B5     		push	{r4, r5, lr}
 2823              		.cfi_def_cfa_offset 12
 2824              		.cfi_offset 4, -12
 2825              		.cfi_offset 5, -8
 2826              		.cfi_offset 14, -4
 2827 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cch2Dr4w.s 			page 98


 378:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetRes(0.707f);
 2828              		.loc 2 378 30 view .LVU846
 2829 0004 00F54850 		add	r0, r0, #12800
 2830              	.LVL249:
 378:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetRes(0.707f);
 2831              		.loc 2 378 30 view .LVU847
 2832 0008 04F54055 		add	r5, r4, #12288
 2833 000c 3C30     		adds	r0, r0, #60
 376:EchoBridgeWithUSB.cpp ****         // Low cut filter (high pass)
 2834              		.loc 2 376 10 view .LVU848
 2835 000e 2DED028B 		vpush.64	{d8}
 2836              		.cfi_def_cfa_offset 20
 2837              		.cfi_offset 80, -20
 2838              		.cfi_offset 81, -16
 379:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetDrive(1.0f);
 2839              		.loc 2 379 29 view .LVU849
 2840 0012 9FED268A 		vldr.32	s16, .L211
 376:EchoBridgeWithUSB.cpp ****         // Low cut filter (high pass)
 2841              		.loc 2 376 10 view .LVU850
 2842 0016 83B0     		sub	sp, sp, #12
 2843              		.cfi_def_cfa_offset 32
 378:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetRes(0.707f);
 2844              		.loc 2 378 30 view .LVU851
 2845 0018 95ED8A0A 		vldr.32	s0, [r5, #552]
 2846 001c 0190     		str	r0, [sp, #4]
 2847 001e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2848              	.LVL250:
 379:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetDrive(1.0f);
 2849              		.loc 2 379 9 is_stmt 1 view .LVU852
 379:EchoBridgeWithUSB.cpp ****         lowCutFilterL.SetDrive(1.0f);
 2850              		.loc 2 379 29 is_stmt 0 view .LVU853
 2851 0022 B0EE480A 		vmov.f32	s0, s16
 2852 0026 0198     		ldr	r0, [sp, #4]
 2853 0028 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2854              	.LVL251:
 380:EchoBridgeWithUSB.cpp ****         
 2855              		.loc 2 380 9 is_stmt 1 view .LVU854
 380:EchoBridgeWithUSB.cpp ****         
 2856              		.loc 2 380 31 is_stmt 0 view .LVU855
 2857 002c 0198     		ldr	r0, [sp, #4]
 2858 002e B7EE000A 		vmov.f32	s0, #1.0e+0
 2859 0032 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 2860              	.LVL252:
 382:EchoBridgeWithUSB.cpp ****         highCutFilterL.SetRes(0.707f);
 2861              		.loc 2 382 9 is_stmt 1 view .LVU856
 382:EchoBridgeWithUSB.cpp ****         highCutFilterL.SetRes(0.707f);
 2862              		.loc 2 382 31 is_stmt 0 view .LVU857
 2863 0036 04F54A50 		add	r0, r4, #12928
 2864 003a 95ED8B0A 		vldr.32	s0, [r5, #556]
 2865 003e 0830     		adds	r0, r0, #8
 2866 0040 0190     		str	r0, [sp, #4]
 2867 0042 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2868              	.LVL253:
 383:EchoBridgeWithUSB.cpp ****         highCutFilterL.SetDrive(1.0f);
 2869              		.loc 2 383 9 is_stmt 1 view .LVU858
 383:EchoBridgeWithUSB.cpp ****         highCutFilterL.SetDrive(1.0f);
 2870              		.loc 2 383 30 is_stmt 0 view .LVU859
ARM GAS  /tmp/cch2Dr4w.s 			page 99


 2871 0046 B0EE480A 		vmov.f32	s0, s16
 2872 004a 0198     		ldr	r0, [sp, #4]
 2873 004c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2874              	.LVL254:
 384:EchoBridgeWithUSB.cpp ****         
 2875              		.loc 2 384 9 is_stmt 1 view .LVU860
 384:EchoBridgeWithUSB.cpp ****         
 2876              		.loc 2 384 32 is_stmt 0 view .LVU861
 2877 0050 0198     		ldr	r0, [sp, #4]
 2878 0052 B7EE000A 		vmov.f32	s0, #1.0e+0
 2879 0056 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 2880              	.LVL255:
 386:EchoBridgeWithUSB.cpp ****         lowCutFilterR.SetRes(0.707f);
 2881              		.loc 2 386 9 is_stmt 1 view .LVU862
 386:EchoBridgeWithUSB.cpp ****         lowCutFilterR.SetRes(0.707f);
 2882              		.loc 2 386 30 is_stmt 0 view .LVU863
 2883 005a 04F54B50 		add	r0, r4, #12992
 2884 005e 95ED8A0A 		vldr.32	s0, [r5, #552]
 2885 0062 1430     		adds	r0, r0, #20
 2886 0064 0190     		str	r0, [sp, #4]
 2887 0066 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2888              	.LVL256:
 387:EchoBridgeWithUSB.cpp ****         lowCutFilterR.SetDrive(1.0f);
 2889              		.loc 2 387 9 is_stmt 1 view .LVU864
 387:EchoBridgeWithUSB.cpp ****         lowCutFilterR.SetDrive(1.0f);
 2890              		.loc 2 387 29 is_stmt 0 view .LVU865
 2891 006a B0EE480A 		vmov.f32	s0, s16
 2892 006e 0198     		ldr	r0, [sp, #4]
 2893 0070 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2894              	.LVL257:
 388:EchoBridgeWithUSB.cpp ****         
 2895              		.loc 2 388 9 is_stmt 1 view .LVU866
 388:EchoBridgeWithUSB.cpp ****         
 2896              		.loc 2 388 31 is_stmt 0 view .LVU867
 2897 0074 0198     		ldr	r0, [sp, #4]
 2898 0076 B7EE000A 		vmov.f32	s0, #1.0e+0
 2899 007a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 2900              	.LVL258:
 390:EchoBridgeWithUSB.cpp ****         highCutFilterR.SetRes(0.707f);
 2901              		.loc 2 390 9 is_stmt 1 view .LVU868
 390:EchoBridgeWithUSB.cpp ****         highCutFilterR.SetRes(0.707f);
 2902              		.loc 2 390 31 is_stmt 0 view .LVU869
 2903 007e 04F54C50 		add	r0, r4, #13056
 2904 0082 95ED8B0A 		vldr.32	s0, [r5, #556]
 2905 0086 2030     		adds	r0, r0, #32
 2906 0088 0190     		str	r0, [sp, #4]
 2907 008a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2908              	.LVL259:
 391:EchoBridgeWithUSB.cpp ****         highCutFilterR.SetDrive(1.0f);
 2909              		.loc 2 391 9 is_stmt 1 view .LVU870
 391:EchoBridgeWithUSB.cpp ****         highCutFilterR.SetDrive(1.0f);
 2910              		.loc 2 391 30 is_stmt 0 view .LVU871
 2911 008e B0EE480A 		vmov.f32	s0, s16
 2912 0092 0198     		ldr	r0, [sp, #4]
 2913 0094 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2914              	.LVL260:
 392:EchoBridgeWithUSB.cpp ****     }
ARM GAS  /tmp/cch2Dr4w.s 			page 100


 2915              		.loc 2 392 9 is_stmt 1 view .LVU872
 392:EchoBridgeWithUSB.cpp ****     }
 2916              		.loc 2 392 32 is_stmt 0 view .LVU873
 2917 0098 B7EE000A 		vmov.f32	s0, #1.0e+0
 2918 009c 0198     		ldr	r0, [sp, #4]
 393:EchoBridgeWithUSB.cpp ****     
 2919              		.loc 2 393 5 view .LVU874
 2920 009e 03B0     		add	sp, sp, #12
 2921              		.cfi_def_cfa_offset 20
 2922              		@ sp needed
 2923 00a0 BDEC028B 		vldm	sp!, {d8}
 2924              		.cfi_restore 80
 2925              		.cfi_restore 81
 2926              		.cfi_def_cfa_offset 12
 2927 00a4 BDE83040 		pop	{r4, r5, lr}
 2928              		.cfi_restore 14
 2929              		.cfi_restore 5
 2930              		.cfi_restore 4
 2931              		.cfi_def_cfa_offset 0
 2932              	.LVL261:
 392:EchoBridgeWithUSB.cpp ****     }
 2933              		.loc 2 392 32 view .LVU875
 2934 00a8 FFF7FEBF 		b	_ZN7daisysp3Svf8SetDriveEf
 2935              	.LVL262:
 2936              	.L212:
 2937              		.align	2
 2938              	.L211:
 2939 00ac F4FD343F 		.word	1060437492
 2940              		.cfi_endproc
 2941              	.LFE5517:
 2943              		.section	.text._Z11HandleKnob4f,"ax",%progbits
 2944              		.align	1
 2945              		.global	_Z11HandleKnob4f
 2946              		.syntax unified
 2947              		.thumb
 2948              		.thumb_func
 2949              		.fpu fpv5-d16
 2951              	_Z11HandleKnob4f:
 2952              	.LVL263:
 2953              	.LFB5527:
 704:EchoBridgeWithUSB.cpp ****     if (value < 0.5f) {
 2954              		.loc 2 704 31 is_stmt 1 view -0
 2955              		.cfi_startproc
 2956              		@ args = 0, pretend = 0, frame = 0
 2957              		@ frame_needed = 0, uses_anonymous_args = 0
 705:EchoBridgeWithUSB.cpp ****         // First half: low cut (20Hz - 1000Hz)
 2958              		.loc 2 705 5 view .LVU877
 2959              	.LBB466:
 2960 0000 B6EE007A 		vmov.f32	s14, #5.0e-1
 2961 0004 F3EE047A 		vmov.f32	s15, #2.0e+1
 2962 0008 B4EEC70A 		vcmpe.f32	s0, s14
 2963              	.LBE466:
 704:EchoBridgeWithUSB.cpp ****     if (value < 0.5f) {
 2964              		.loc 2 704 31 is_stmt 0 view .LVU878
 2965 000c 10B5     		push	{r4, lr}
 2966              		.cfi_def_cfa_offset 8
 2967              		.cfi_offset 4, -8
ARM GAS  /tmp/cch2Dr4w.s 			page 101


 2968              		.cfi_offset 14, -4
 2969              	.LBB471:
 705:EchoBridgeWithUSB.cpp ****         // First half: low cut (20Hz - 1000Hz)
 2970              		.loc 2 705 5 view .LVU879
 2971 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2972 0012 124C     		ldr	r4, .L220
 2973              	.LBE471:
 704:EchoBridgeWithUSB.cpp ****     if (value < 0.5f) {
 2974              		.loc 2 704 31 view .LVU880
 2975 0014 2DED028B 		vpush.64	{d8}
 2976              		.cfi_def_cfa_offset 16
 2977              		.cfi_offset 80, -16
 2978              		.cfi_offset 81, -12
 2979              	.LBB472:
 2980              	.LBB473:
 2981              	.LBB474:
 712:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(20.0f);
 2982              		.loc 2 712 47 view .LVU881
 2983 0018 52BF     		itee	pl
 2984 001a 30EE470A 		vsubpl.f32	s0, s0, s14
 2985              	.LVL264:
 712:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(20.0f);
 2986              		.loc 2 712 47 view .LVU882
 2987              	.LBE474:
 2988              	.LBE473:
 2989              	.LBE472:
 2990              	.LBB485:
 2991              	.LBB467:
 707:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(lowCutFreq);
 2992              		.loc 2 707 15 view .LVU883
 2993 001e 9FED107A 		vldrmi.32	s14, .L220+4
 707:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(lowCutFreq);
 2994              		.loc 2 707 42 view .LVU884
 2995 0022 30EE000A 		vaddmi.f32	s0, s0, s0
 2996 0026 9FED0F8A 		vldr.32	s16, .L220+8
 707:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(lowCutFreq);
 2997              		.loc 2 707 9 is_stmt 1 view .LVU885
 2998              	.LBE467:
 2999              	.LBE485:
 3000              	.LBB486:
 3001              	.LBB483:
 3002              	.LBB481:
 712:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(20.0f);
 3003              		.loc 2 712 15 is_stmt 0 view .LVU886
 3004 002a 58BF     		it	pl
 3005 002c 9FED0E7A 		vldrpl.32	s14, .L220+12
 3006              	.LBB475:
 3007              	.LBB476:
 361:EchoBridgeWithUSB.cpp ****     }
 3008              		.loc 2 361 22 view .LVU887
 3009 0030 A4F54050 		sub	r0, r4, #12288
 3010              	.LBE476:
 3011              	.LBE475:
 712:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(20.0f);
 3012              		.loc 2 712 55 view .LVU888
 3013 0034 56BF     		itet	pl
 3014 0036 30EE000A 		vaddpl.f32	s0, s0, s0
ARM GAS  /tmp/cch2Dr4w.s 			page 102


 3015              	.LBE481:
 3016              	.LBE483:
 3017              	.LBE486:
 3018              	.LBB487:
 3019              	.LBB470:
 707:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(lowCutFreq);
 3020              		.loc 2 707 15 view .LVU889
 3021 003a E0EE077A 		vfmami.f32	s15, s0, s14
 3022              	.LVL265:
 708:EchoBridgeWithUSB.cpp ****         reverb.SetHighCut(20000.0f);
 3023              		.loc 2 708 9 is_stmt 1 view .LVU890
 3024              	.LBB468:
 3025              	.LBI468:
 359:EchoBridgeWithUSB.cpp ****         lowCutFreq = freq;
 3026              		.loc 2 359 10 view .LVU891
 3027              	.LBB469:
 360:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3028              		.loc 2 360 9 view .LVU892
 3029              	.LBE469:
 3030              	.LBE468:
 3031              	.LBE470:
 3032              	.LBE487:
 3033              	.LBB488:
 3034              	.LBI472:
 704:EchoBridgeWithUSB.cpp ****     if (value < 0.5f) {
 3035              		.loc 2 704 6 view .LVU893
 3036              	.LBB484:
 3037              	.LBB482:
 712:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(20.0f);
 3038              		.loc 2 712 9 view .LVU894
 712:EchoBridgeWithUSB.cpp ****         reverb.SetLowCut(20.0f);
 3039              		.loc 2 712 15 is_stmt 0 view .LVU895
 3040 003e A0EE478A 		vfmspl.f32	s16, s0, s14
 3041              	.LVL266:
 713:EchoBridgeWithUSB.cpp ****         reverb.SetHighCut(highCutFreq);
 3042              		.loc 2 713 9 is_stmt 1 view .LVU896
 3043              	.LBB478:
 3044              	.LBI475:
 359:EchoBridgeWithUSB.cpp ****         lowCutFreq = freq;
 3045              		.loc 2 359 10 view .LVU897
 3046              	.LBB477:
 360:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3047              		.loc 2 360 9 view .LVU898
 360:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3048              		.loc 2 360 20 is_stmt 0 view .LVU899
 3049 0042 C4ED8A7A 		vstr.32	s15, [r4, #552]
 361:EchoBridgeWithUSB.cpp ****     }
 3050              		.loc 2 361 9 is_stmt 1 view .LVU900
 361:EchoBridgeWithUSB.cpp ****     }
 3051              		.loc 2 361 22 is_stmt 0 view .LVU901
 3052 0046 FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb13UpdateFiltersEv
 3053              	.LVL267:
 361:EchoBridgeWithUSB.cpp ****     }
 3054              		.loc 2 361 22 view .LVU902
 3055              	.LBE477:
 3056              	.LBE478:
 714:EchoBridgeWithUSB.cpp ****     }
ARM GAS  /tmp/cch2Dr4w.s 			page 103


 3057              		.loc 2 714 9 is_stmt 1 view .LVU903
 3058              	.LBB479:
 3059              	.LBI479:
 365:EchoBridgeWithUSB.cpp ****         highCutFreq = freq;
 3060              		.loc 2 365 10 view .LVU904
 3061              	.LBB480:
 366:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3062              		.loc 2 366 9 view .LVU905
 367:EchoBridgeWithUSB.cpp ****     }
 3063              		.loc 2 367 22 is_stmt 0 view .LVU906
 3064 004a A4F54050 		sub	r0, r4, #12288
 366:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3065              		.loc 2 366 21 view .LVU907
 3066 004e 84ED8B8A 		vstr.32	s16, [r4, #556]
 367:EchoBridgeWithUSB.cpp ****     }
 3067              		.loc 2 367 9 is_stmt 1 view .LVU908
 367:EchoBridgeWithUSB.cpp ****     }
 3068              		.loc 2 367 22 is_stmt 0 view .LVU909
 3069 0052 FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb13UpdateFiltersEv
 3070              	.LVL268:
 367:EchoBridgeWithUSB.cpp ****     }
 3071              		.loc 2 367 22 view .LVU910
 3072              	.LBE480:
 3073              	.LBE479:
 3074              	.LBE482:
 3075              	.LBE484:
 3076              	.LBE488:
 716:EchoBridgeWithUSB.cpp **** 
 3077              		.loc 2 716 1 view .LVU911
 3078 0056 BDEC028B 		vldm	sp!, {d8}
 3079              		.cfi_restore 80
 3080              		.cfi_restore 81
 3081              		.cfi_def_cfa_offset 8
 3082 005a 10BD     		pop	{r4, pc}
 3083              	.L221:
 3084              		.align	2
 3085              	.L220:
 3086 005c 00300000 		.word	reverb+12288
 3087 0060 00007544 		.word	1148518400
 3088 0064 00409C46 		.word	1184645120
 3089 0068 00709446 		.word	1184133120
 3090              		.cfi_endproc
 3091              	.LFE5527:
 3093              		.section	.text._ZN6ShyFFTIfLj64EE6DirectEPKfPf,"axG",%progbits,_ZN6ShyFFTIfLj64EE6DirectEPKfPf,com
 3094              		.align	1
 3095              		.weak	_ZN6ShyFFTIfLj64EE6DirectEPKfPf
 3096              		.syntax unified
 3097              		.thumb
 3098              		.thumb_func
 3099              		.fpu fpv5-d16
 3101              	_ZN6ShyFFTIfLj64EE6DirectEPKfPf:
 3102              	.LVL269:
 3103              	.LFB5842:
 3104              		.file 12 "shy_fft.h"
   1:shy_fft.h     **** #pragma once
   2:shy_fft.h     **** 
   3:shy_fft.h     **** // ShyFFT - A simple FFT implementation for embedded systems
ARM GAS  /tmp/cch2Dr4w.s 			page 104


   4:shy_fft.h     **** // Based on Cooley-Tukey FFT algorithm
   5:shy_fft.h     **** 
   6:shy_fft.h     **** #include <cmath>
   7:shy_fft.h     **** #include <complex>
   8:shy_fft.h     **** 
   9:shy_fft.h     **** template <typename T, size_t N>
  10:shy_fft.h     **** class ShyFFT {
  11:shy_fft.h     **** public:
  12:shy_fft.h     ****     ShyFFT() {
  13:shy_fft.h     ****         // Precompute twiddle factors
  14:shy_fft.h     ****         for (size_t i = 0; i < N / 2; i++) {
  15:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
  16:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
  17:shy_fft.h     ****             twiddles_imag_[i] = sin(angle);
  18:shy_fft.h     ****         }
  19:shy_fft.h     ****     }
  20:shy_fft.h     ****     
  21:shy_fft.h     ****     void Init() {
  22:shy_fft.h     ****         // Precompute bit-reversed indices
  23:shy_fft.h     ****         for (size_t i = 0; i < N; i++) {
  24:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
  25:shy_fft.h     ****         }
  26:shy_fft.h     ****     }
  27:shy_fft.h     ****     
  28:shy_fft.h     ****     // Direct FFT (time domain to frequency domain)
  29:shy_fft.h     ****     void Direct(const T* input, T* output) {
 3105              		.loc 12 29 10 is_stmt 1 view -0
 3106              		.cfi_startproc
 3107              		@ args = 0, pretend = 0, frame = 0
 3108              		@ frame_needed = 0, uses_anonymous_args = 0
 3109              	.LBB497:
  30:shy_fft.h     ****         // Copy input to output with bit reversal
  31:shy_fft.h     ****         for (size_t i = 0; i < N; i++) {
 3110              		.loc 12 31 30 view .LVU913
 3111              	.LBE497:
  29:shy_fft.h     ****         // Copy input to output with bit reversal
 3112              		.loc 12 29 10 is_stmt 0 view .LVU914
 3113 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3114              		.cfi_def_cfa_offset 28
 3115              		.cfi_offset 4, -28
 3116              		.cfi_offset 5, -24
 3117              		.cfi_offset 6, -20
 3118              		.cfi_offset 7, -16
 3119              		.cfi_offset 8, -12
 3120              		.cfi_offset 9, -8
 3121              		.cfi_offset 14, -4
 3122 0004 00F58073 		add	r3, r0, #256
 3123 0008 00F50076 		add	r6, r0, #512
  29:shy_fft.h     ****         // Copy input to output with bit reversal
 3124              		.loc 12 29 10 view .LVU915
 3125 000c 1546     		mov	r5, r2
 3126              	.LVL270:
 3127              	.L223:
 3128              	.LBB498:
  32:shy_fft.h     ****             output[i] = input[bit_reverse_[i]];
 3129              		.loc 12 32 43 discriminator 2 view .LVU916
 3130 000e 53F8044B 		ldr	r4, [r3], #4
ARM GAS  /tmp/cch2Dr4w.s 			page 105


 3131              		.loc 12 32 30 discriminator 2 view .LVU917
 3132 0012 01EB8404 		add	r4, r1, r4, lsl #2
  31:shy_fft.h     ****             output[i] = input[bit_reverse_[i]];
 3133              		.loc 12 31 30 discriminator 2 view .LVU918
 3134 0016 9E42     		cmp	r6, r3
 3135              		.loc 12 32 30 discriminator 2 view .LVU919
 3136 0018 2468     		ldr	r4, [r4]	@ float
 3137              		.loc 12 32 23 discriminator 2 view .LVU920
 3138 001a 45F8044B 		str	r4, [r5], #4	@ float
  31:shy_fft.h     ****             output[i] = input[bit_reverse_[i]];
 3139              		.loc 12 31 9 is_stmt 1 discriminator 2 view .LVU921
  31:shy_fft.h     ****             output[i] = input[bit_reverse_[i]];
 3140              		.loc 12 31 30 discriminator 2 view .LVU922
 3141 001e F6D1     		bne	.L223
 3142              	.LBE498:
 3143              	.LBB499:
  33:shy_fft.h     ****         }
  34:shy_fft.h     ****         
  35:shy_fft.h     ****         // Perform FFT
  36:shy_fft.h     ****         for (size_t stage = 1; stage <= log2N(); stage++) {
 3144              		.loc 12 36 21 is_stmt 0 view .LVU923
 3145 0020 0123     		movs	r3, #1
 3146              	.LVL271:
 3147              	.L226:
 3148              	.LBB500:
  37:shy_fft.h     ****             size_t m = 1 << stage;
 3149              		.loc 12 37 26 view .LVU924
 3150 0022 0125     		movs	r5, #1
 3151 0024 4FF0040E 		mov	lr, #4
 3152              	.LBB501:
  38:shy_fft.h     ****             size_t m2 = m >> 1;
  39:shy_fft.h     ****             
  40:shy_fft.h     ****             for (size_t k = 0; k < N; k += m) {
 3153              		.loc 12 40 25 view .LVU925
 3154 0028 0024     		movs	r4, #0
 3155              	.LBE501:
  37:shy_fft.h     ****             size_t m = 1 << stage;
 3156              		.loc 12 37 26 view .LVU926
 3157 002a 9D40     		lsls	r5, r5, r3
 3158              	.LVL272:
  37:shy_fft.h     ****             size_t m = 1 << stage;
 3159              		.loc 12 37 26 view .LVU927
 3160 002c 0EFA03FE 		lsl	lr, lr, r3
  38:shy_fft.h     ****             size_t m2 = m >> 1;
 3161              		.loc 12 38 20 view .LVU928
 3162 0030 4FEA5508 		lsr	r8, r5, #1
 3163              	.LVL273:
 3164              	.LBB507:
 3165              		.loc 12 40 34 is_stmt 1 view .LVU929
 3166 0034 02EB880C 		add	ip, r2, r8, lsl #2
 3167              	.LVL274:
 3168              	.L225:
 3169              		.loc 12 40 34 is_stmt 0 view .LVU930
 3170 0038 02EB8407 		add	r7, r2, r4, lsl #2
 3171              	.LVL275:
 3172              	.LBB502:
  41:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
ARM GAS  /tmp/cch2Dr4w.s 			page 106


 3173              		.loc 12 41 38 is_stmt 1 view .LVU931
 3174              	.LBE502:
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3175              		.loc 12 40 25 is_stmt 0 view .LVU932
 3176 003c E146     		mov	r9, ip
 3177              	.LBB506:
 3178              		.loc 12 41 29 view .LVU933
 3179 003e 0026     		movs	r6, #0
 3180              	.LVL276:
 3181              	.L224:
 3182              	.LBB503:
  42:shy_fft.h     ****                     size_t i1 = k + j;
  43:shy_fft.h     ****                     size_t i2 = i1 + m2;
  44:shy_fft.h     ****                     
  45:shy_fft.h     ****                     T re = output[i2] * twiddles_real_[j * N / m] - 0 * twiddles_imag_[j * N / m];
 3183              		.loc 12 45 62 discriminator 2 view .LVU934
 3184 0040 B101     		lsls	r1, r6, #6
 3185              		.loc 12 45 23 discriminator 2 view .LVU935
 3186 0042 DFED137A 		vldr.32	s15, .L231
 3187              		.loc 12 45 34 discriminator 2 view .LVU936
 3188 0046 D9ED006A 		vldr.32	s13, [r9]
 3189              	.LBE503:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3190              		.loc 12 41 17 discriminator 2 view .LVU937
 3191 004a 0136     		adds	r6, r6, #1
 3192              	.LVL277:
 3193              	.LBB504:
 3194              		.loc 12 45 62 discriminator 2 view .LVU938
 3195 004c D940     		lsrs	r1, r1, r3
 3196              	.LBE504:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3197              		.loc 12 41 38 discriminator 2 view .LVU939
 3198 004e B045     		cmp	r8, r6
 3199 0050 00EB8101 		add	r1, r0, r1, lsl #2
 3200              	.LBB505:
 3201              		.loc 12 45 71 discriminator 2 view .LVU940
 3202 0054 91ED207A 		vldr.32	s14, [r1, #128]
 3203              		.loc 12 45 23 discriminator 2 view .LVU941
 3204 0058 67EEC77A 		vnmul.f32	s15, s15, s14
 3205 005c 91ED007A 		vldr.32	s14, [r1]
 3206 0060 E6EE877A 		vfma.f32	s15, s13, s14
 3207              	.LVL278:
  46:shy_fft.h     ****                     T im = output[i2] * twiddles_imag_[j * N / m] + 0 * twiddles_real_[j * N / m];
  47:shy_fft.h     ****                     
  48:shy_fft.h     ****                     output[i2] = output[i1] - re;
 3208              		.loc 12 48 40 discriminator 2 view .LVU942
 3209 0064 97ED007A 		vldr.32	s14, [r7]
 3210              	.LVL279:
 3211              		.loc 12 48 45 discriminator 2 view .LVU943
 3212 0068 37EE677A 		vsub.f32	s14, s14, s15
 3213              		.loc 12 48 32 discriminator 2 view .LVU944
 3214 006c A9EC017A 		vstmia.32	r9!, {s14}
 3215              	.LVL280:
  49:shy_fft.h     ****                     output[i1] = output[i1] + re;
 3216              		.loc 12 49 45 discriminator 2 view .LVU945
 3217 0070 B7EC017A 		vldmia.32	r7!, {s14}
 3218 0074 77EE277A 		vadd.f32	s15, s14, s15
ARM GAS  /tmp/cch2Dr4w.s 			page 107


 3219              	.LVL281:
 3220              		.loc 12 49 32 discriminator 2 view .LVU946
 3221 0078 47ED017A 		vstr.32	s15, [r7, #-4]
 3222              	.LBE505:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3223              		.loc 12 41 17 is_stmt 1 discriminator 2 view .LVU947
 3224              	.LVL282:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3225              		.loc 12 41 38 discriminator 2 view .LVU948
 3226 007c E0D1     		bne	.L224
 3227              	.LBE506:
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3228              		.loc 12 40 13 discriminator 2 view .LVU949
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3229              		.loc 12 40 41 is_stmt 0 discriminator 2 view .LVU950
 3230 007e 2C44     		add	r4, r4, r5
 3231              	.LVL283:
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3232              		.loc 12 40 34 is_stmt 1 discriminator 2 view .LVU951
 3233 0080 F444     		add	ip, ip, lr
 3234 0082 3F2C     		cmp	r4, #63
 3235 0084 D8D9     		bls	.L225
 3236              	.LBE507:
 3237              	.LBE500:
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3238              		.loc 12 36 9 discriminator 2 view .LVU952
 3239 0086 0133     		adds	r3, r3, #1
 3240              	.LVL284:
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3241              		.loc 12 36 38 discriminator 2 view .LVU953
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3242              		.loc 12 36 38 is_stmt 0 discriminator 2 view .LVU954
 3243              	.LBE499:
  50:shy_fft.h     ****                 }
  51:shy_fft.h     ****             }
  52:shy_fft.h     ****         }
  53:shy_fft.h     ****     }
  54:shy_fft.h     ****     
  55:shy_fft.h     ****     // Inverse FFT (frequency domain to time domain)
  56:shy_fft.h     ****     void Inverse(T* real, T* imag, size_t size) {
  57:shy_fft.h     ****         // Perform complex conjugate
  58:shy_fft.h     ****         for (size_t i = 0; i < size; i++) {
  59:shy_fft.h     ****             imag[i] = -imag[i];
  60:shy_fft.h     ****         }
  61:shy_fft.h     ****         
  62:shy_fft.h     ****         // Perform FFT
  63:shy_fft.h     ****         Complex(real, imag, size);
  64:shy_fft.h     ****         
  65:shy_fft.h     ****         // Scale output
  66:shy_fft.h     ****         T scale = 1.0 / size;
  67:shy_fft.h     ****         for (size_t i = 0; i < size; i++) {
  68:shy_fft.h     ****             real[i] *= scale;
  69:shy_fft.h     ****             imag[i] *= scale;
  70:shy_fft.h     ****         }
  71:shy_fft.h     ****     }
  72:shy_fft.h     ****     
  73:shy_fft.h     ****     // Complex FFT (frequency domain to frequency domain)
ARM GAS  /tmp/cch2Dr4w.s 			page 108


  74:shy_fft.h     ****     void Complex(T* real, T* imag, size_t size) {
  75:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
  76:shy_fft.h     ****         T temp_real[N];
  77:shy_fft.h     ****         T temp_imag[N];
  78:shy_fft.h     ****         
  79:shy_fft.h     ****         for (size_t i = 0; i < size; i++) {
  80:shy_fft.h     ****             temp_real[bit_reverse_[i]] = real[i];
  81:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
  82:shy_fft.h     ****         }
  83:shy_fft.h     ****         
  84:shy_fft.h     ****         // Perform FFT
  85:shy_fft.h     ****         for (size_t stage = 1; stage <= log2N(); stage++) {
  86:shy_fft.h     ****             size_t m = 1 << stage;
  87:shy_fft.h     ****             size_t m2 = m >> 1;
  88:shy_fft.h     ****             
  89:shy_fft.h     ****             for (size_t k = 0; k < size; k += m) {
  90:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
  91:shy_fft.h     ****                     size_t i1 = k + j;
  92:shy_fft.h     ****                     size_t i2 = i1 + m2;
  93:shy_fft.h     ****                     
  94:shy_fft.h     ****                     T re = temp_real[i2] * twiddles_real_[j * N / m] - temp_imag[i2] * twiddles_ima
  95:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
  96:shy_fft.h     ****                     
  97:shy_fft.h     ****                     temp_real[i2] = temp_real[i1] - re;
  98:shy_fft.h     ****                     temp_imag[i2] = temp_imag[i1] - im;
  99:shy_fft.h     ****                     temp_real[i1] = temp_real[i1] + re;
 100:shy_fft.h     ****                     temp_imag[i1] = temp_imag[i1] + im;
 101:shy_fft.h     ****                 }
 102:shy_fft.h     ****             }
 103:shy_fft.h     ****         }
 104:shy_fft.h     ****         
 105:shy_fft.h     ****         // Copy result back to input
 106:shy_fft.h     ****         for (size_t i = 0; i < size; i++) {
 107:shy_fft.h     ****             real[i] = temp_real[i];
 108:shy_fft.h     ****             imag[i] = temp_imag[i];
 109:shy_fft.h     ****         }
 110:shy_fft.h     ****     }
 111:shy_fft.h     ****     
 112:shy_fft.h     **** private:
 113:shy_fft.h     ****     // Precomputed twiddle factors
 114:shy_fft.h     ****     T twiddles_real_[N / 2];
 115:shy_fft.h     ****     T twiddles_imag_[N / 2];
 116:shy_fft.h     ****     
 117:shy_fft.h     ****     // Precomputed bit-reversed indices
 118:shy_fft.h     ****     size_t bit_reverse_[N];
 119:shy_fft.h     ****     
 120:shy_fft.h     ****     // Compute log2(N)
 121:shy_fft.h     ****     constexpr size_t log2N() const {
 122:shy_fft.h     ****         size_t log2n = 0;
 123:shy_fft.h     ****         size_t n = N;
 124:shy_fft.h     ****         while (n > 1) {
 3244              		.loc 12 124 18 is_stmt 1 discriminator 2 view .LVU955
 3245              		.loc 12 124 18 discriminator 2 view .LVU956
 3246              		.loc 12 124 18 discriminator 2 view .LVU957
 3247              		.loc 12 124 18 discriminator 2 view .LVU958
 3248              		.loc 12 124 18 discriminator 2 view .LVU959
 3249              		.loc 12 124 18 discriminator 2 view .LVU960
ARM GAS  /tmp/cch2Dr4w.s 			page 109


 3250              		.loc 12 124 18 discriminator 2 view .LVU961
 3251              	.LBB508:
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3252              		.loc 12 36 38 is_stmt 0 discriminator 2 view .LVU962
 3253 0088 072B     		cmp	r3, #7
 3254 008a CAD1     		bne	.L226
 3255              	.LBE508:
  53:shy_fft.h     ****     
 3256              		.loc 12 53 5 view .LVU963
 3257 008c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3258              	.LVL285:
 3259              	.L232:
  53:shy_fft.h     ****     
 3260              		.loc 12 53 5 view .LVU964
 3261              		.align	2
 3262              	.L231:
 3263 0090 00000000 		.word	0
 3264              		.cfi_endproc
 3265              	.LFE5842:
 3267              		.section	.text._ZN6ShyFFTIfLj1024EE6DirectEPKfPf,"axG",%progbits,_ZN6ShyFFTIfLj1024EE6DirectEPKfPf
 3268              		.align	1
 3269              		.weak	_ZN6ShyFFTIfLj1024EE6DirectEPKfPf
 3270              		.syntax unified
 3271              		.thumb
 3272              		.thumb_func
 3273              		.fpu fpv5-d16
 3275              	_ZN6ShyFFTIfLj1024EE6DirectEPKfPf:
 3276              	.LVL286:
 3277              	.LFB5844:
  29:shy_fft.h     ****         // Copy input to output with bit reversal
 3278              		.loc 12 29 10 is_stmt 1 view -0
 3279              		.cfi_startproc
 3280              		@ args = 0, pretend = 0, frame = 0
 3281              		@ frame_needed = 0, uses_anonymous_args = 0
 3282              	.LBB517:
  31:shy_fft.h     ****             output[i] = input[bit_reverse_[i]];
 3283              		.loc 12 31 30 view .LVU966
 3284              	.LBE517:
  29:shy_fft.h     ****         // Copy input to output with bit reversal
 3285              		.loc 12 29 10 is_stmt 0 view .LVU967
 3286 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3287              		.cfi_def_cfa_offset 32
 3288              		.cfi_offset 4, -32
 3289              		.cfi_offset 5, -28
 3290              		.cfi_offset 6, -24
 3291              		.cfi_offset 7, -20
 3292              		.cfi_offset 8, -16
 3293              		.cfi_offset 9, -12
 3294              		.cfi_offset 10, -8
 3295              		.cfi_offset 14, -4
 3296 0004 00F58053 		add	r3, r0, #4096
 3297 0008 00F50056 		add	r6, r0, #8192
  29:shy_fft.h     ****         // Copy input to output with bit reversal
 3298              		.loc 12 29 10 view .LVU968
 3299 000c 1546     		mov	r5, r2
 3300              	.LVL287:
 3301              	.L234:
ARM GAS  /tmp/cch2Dr4w.s 			page 110


 3302              	.LBB518:
  32:shy_fft.h     ****         }
 3303              		.loc 12 32 43 discriminator 2 view .LVU969
 3304 000e 53F8044B 		ldr	r4, [r3], #4
  32:shy_fft.h     ****         }
 3305              		.loc 12 32 30 discriminator 2 view .LVU970
 3306 0012 01EB8404 		add	r4, r1, r4, lsl #2
  31:shy_fft.h     ****             output[i] = input[bit_reverse_[i]];
 3307              		.loc 12 31 30 discriminator 2 view .LVU971
 3308 0016 B342     		cmp	r3, r6
  32:shy_fft.h     ****         }
 3309              		.loc 12 32 30 discriminator 2 view .LVU972
 3310 0018 2468     		ldr	r4, [r4]	@ float
  32:shy_fft.h     ****         }
 3311              		.loc 12 32 23 discriminator 2 view .LVU973
 3312 001a 45F8044B 		str	r4, [r5], #4	@ float
  31:shy_fft.h     ****             output[i] = input[bit_reverse_[i]];
 3313              		.loc 12 31 9 is_stmt 1 discriminator 2 view .LVU974
  31:shy_fft.h     ****             output[i] = input[bit_reverse_[i]];
 3314              		.loc 12 31 30 discriminator 2 view .LVU975
 3315 001e F6D1     		bne	.L234
 3316              	.LBE518:
 3317              	.LBB519:
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3318              		.loc 12 36 21 is_stmt 0 view .LVU976
 3319 0020 0123     		movs	r3, #1
 3320              	.LVL288:
 3321              	.L238:
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3322              		.loc 12 36 38 is_stmt 1 discriminator 1 view .LVU977
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3323              		.loc 12 36 38 is_stmt 0 discriminator 1 view .LVU978
 3324              	.LBE519:
 3325              		.loc 12 124 18 is_stmt 1 discriminator 1 view .LVU979
 3326              		.loc 12 124 18 discriminator 1 view .LVU980
 3327              	.LBB528:
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3328              		.loc 12 36 38 is_stmt 0 discriminator 1 view .LVU981
 3329 0022 0B2B     		cmp	r3, #11
 3330 0024 36D0     		beq	.L233
 3331              	.LBB520:
  37:shy_fft.h     ****             size_t m2 = m >> 1;
 3332              		.loc 12 37 26 view .LVU982
 3333 0026 0125     		movs	r5, #1
 3334 0028 4FF0040E 		mov	lr, #4
 3335              	.LBB521:
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3336              		.loc 12 40 25 view .LVU983
 3337 002c 0024     		movs	r4, #0
 3338              	.LBE521:
  37:shy_fft.h     ****             size_t m2 = m >> 1;
 3339              		.loc 12 37 26 view .LVU984
 3340 002e 9D40     		lsls	r5, r5, r3
 3341              	.LVL289:
  37:shy_fft.h     ****             size_t m2 = m >> 1;
 3342              		.loc 12 37 26 view .LVU985
 3343 0030 0EFA03FE 		lsl	lr, lr, r3
ARM GAS  /tmp/cch2Dr4w.s 			page 111


  38:shy_fft.h     ****             
 3344              		.loc 12 38 20 view .LVU986
 3345 0034 4FEA5509 		lsr	r9, r5, #1
 3346              	.LVL290:
 3347              	.LBB527:
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3348              		.loc 12 40 34 is_stmt 1 view .LVU987
 3349 0038 02EB890C 		add	ip, r2, r9, lsl #2
 3350              	.LVL291:
 3351              	.L237:
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3352              		.loc 12 40 34 is_stmt 0 view .LVU988
 3353 003c 02EB8407 		add	r7, r2, r4, lsl #2
 3354              	.LVL292:
 3355              	.LBB522:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3356              		.loc 12 41 38 is_stmt 1 view .LVU989
 3357              	.LBE522:
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3358              		.loc 12 40 25 is_stmt 0 view .LVU990
 3359 0040 E046     		mov	r8, ip
 3360              	.LBB526:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3361              		.loc 12 41 29 view .LVU991
 3362 0042 0026     		movs	r6, #0
 3363              	.LVL293:
 3364              	.L236:
 3365              	.LBB523:
  45:shy_fft.h     ****                     T im = output[i2] * twiddles_imag_[j * N / m] + 0 * twiddles_real_[j * N / m];
 3366              		.loc 12 45 62 discriminator 2 view .LVU992
 3367 0044 B102     		lsls	r1, r6, #10
  45:shy_fft.h     ****                     T im = output[i2] * twiddles_imag_[j * N / m] + 0 * twiddles_real_[j * N / m];
 3368              		.loc 12 45 23 discriminator 2 view .LVU993
 3369 0046 DFED147A 		vldr.32	s15, .L242
  45:shy_fft.h     ****                     T im = output[i2] * twiddles_imag_[j * N / m] + 0 * twiddles_real_[j * N / m];
 3370              		.loc 12 45 34 discriminator 2 view .LVU994
 3371 004a D8ED006A 		vldr.32	s13, [r8]
 3372              	.LBE523:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3373              		.loc 12 41 17 discriminator 2 view .LVU995
 3374 004e 0136     		adds	r6, r6, #1
 3375              	.LVL294:
 3376              	.LBB524:
  45:shy_fft.h     ****                     T im = output[i2] * twiddles_imag_[j * N / m] + 0 * twiddles_real_[j * N / m];
 3377              		.loc 12 45 62 discriminator 2 view .LVU996
 3378 0050 D940     		lsrs	r1, r1, r3
 3379              	.LBE524:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3380              		.loc 12 41 38 discriminator 2 view .LVU997
 3381 0052 B145     		cmp	r9, r6
 3382 0054 00EB8101 		add	r1, r0, r1, lsl #2
 3383              	.LBB525:
  45:shy_fft.h     ****                     T im = output[i2] * twiddles_imag_[j * N / m] + 0 * twiddles_real_[j * N / m];
 3384              		.loc 12 45 87 discriminator 2 view .LVU998
 3385 0058 01F5006A 		add	r10, r1, #2048
  45:shy_fft.h     ****                     T im = output[i2] * twiddles_imag_[j * N / m] + 0 * twiddles_real_[j * N / m];
 3386              		.loc 12 45 71 discriminator 2 view .LVU999
ARM GAS  /tmp/cch2Dr4w.s 			page 112


 3387 005c 9AED007A 		vldr.32	s14, [r10]
  45:shy_fft.h     ****                     T im = output[i2] * twiddles_imag_[j * N / m] + 0 * twiddles_real_[j * N / m];
 3388              		.loc 12 45 23 discriminator 2 view .LVU1000
 3389 0060 67EEC77A 		vnmul.f32	s15, s15, s14
 3390 0064 91ED007A 		vldr.32	s14, [r1]
 3391 0068 E6EE877A 		vfma.f32	s15, s13, s14
 3392              	.LVL295:
  48:shy_fft.h     ****                     output[i1] = output[i1] + re;
 3393              		.loc 12 48 40 discriminator 2 view .LVU1001
 3394 006c 97ED007A 		vldr.32	s14, [r7]
 3395              	.LVL296:
  48:shy_fft.h     ****                     output[i1] = output[i1] + re;
 3396              		.loc 12 48 45 discriminator 2 view .LVU1002
 3397 0070 37EE677A 		vsub.f32	s14, s14, s15
  48:shy_fft.h     ****                     output[i1] = output[i1] + re;
 3398              		.loc 12 48 32 discriminator 2 view .LVU1003
 3399 0074 A8EC017A 		vstmia.32	r8!, {s14}
 3400              	.LVL297:
  49:shy_fft.h     ****                 }
 3401              		.loc 12 49 45 discriminator 2 view .LVU1004
 3402 0078 B7EC017A 		vldmia.32	r7!, {s14}
 3403 007c 77EE277A 		vadd.f32	s15, s14, s15
 3404              	.LVL298:
  49:shy_fft.h     ****                 }
 3405              		.loc 12 49 32 discriminator 2 view .LVU1005
 3406 0080 47ED017A 		vstr.32	s15, [r7, #-4]
 3407              	.LBE525:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3408              		.loc 12 41 17 is_stmt 1 discriminator 2 view .LVU1006
 3409              	.LVL299:
  41:shy_fft.h     ****                     size_t i1 = k + j;
 3410              		.loc 12 41 38 discriminator 2 view .LVU1007
 3411 0084 DED1     		bne	.L236
 3412              	.LBE526:
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3413              		.loc 12 40 13 discriminator 2 view .LVU1008
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3414              		.loc 12 40 41 is_stmt 0 discriminator 2 view .LVU1009
 3415 0086 2C44     		add	r4, r4, r5
 3416              	.LVL300:
  40:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 3417              		.loc 12 40 34 is_stmt 1 discriminator 2 view .LVU1010
 3418 0088 F444     		add	ip, ip, lr
 3419 008a B4F5806F 		cmp	r4, #1024
 3420 008e D5D3     		bcc	.L237
 3421              	.LBE527:
 3422              	.LBE520:
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3423              		.loc 12 36 9 discriminator 2 view .LVU1011
 3424 0090 0133     		adds	r3, r3, #1
 3425              	.LVL301:
  36:shy_fft.h     ****             size_t m = 1 << stage;
 3426              		.loc 12 36 9 is_stmt 0 discriminator 2 view .LVU1012
 3427 0092 C6E7     		b	.L238
 3428              	.LVL302:
 3429              	.L233:
  36:shy_fft.h     ****             size_t m = 1 << stage;
ARM GAS  /tmp/cch2Dr4w.s 			page 113


 3430              		.loc 12 36 9 discriminator 2 view .LVU1013
 3431              	.LBE528:
  53:shy_fft.h     ****     
 3432              		.loc 12 53 5 view .LVU1014
 3433 0094 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3434              	.L243:
 3435              		.align	2
 3436              	.L242:
 3437 0098 00000000 		.word	0
 3438              		.cfi_endproc
 3439              	.LFE5844:
 3441              		.section	.text._ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv,"axG",%progbits,_ZN28P
 3442              		.align	1
 3443              		.weak	_ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv
 3444              		.syntax unified
 3445              		.thumb
 3446              		.thumb_func
 3447              		.fpu fpv5-d16
 3449              	_ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv:
 3450              	.LVL303:
 3451              	.LFB5501:
 110:EchoBridgeWithUSB.cpp ****         // Clear the frequency domain buffers
 3452              		.loc 2 110 10 is_stmt 1 view -0
 3453              		.cfi_startproc
 3454              		@ args = 0, pretend = 0, frame = 8712
 3455              		@ frame_needed = 0, uses_anonymous_args = 0
 112:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImag, 0, EARLY_FFT_SIZE * sizeof(float));
 3456              		.loc 2 112 9 view .LVU1016
 110:EchoBridgeWithUSB.cpp ****         // Clear the frequency domain buffers
 3457              		.loc 2 110 10 is_stmt 0 view .LVU1017
 3458 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3459              		.cfi_def_cfa_offset 36
 3460              		.cfi_offset 4, -36
 3461              		.cfi_offset 5, -32
 3462              		.cfi_offset 6, -28
 3463              		.cfi_offset 7, -24
 3464              		.cfi_offset 8, -20
 3465              		.cfi_offset 9, -16
 3466              		.cfi_offset 10, -12
 3467              		.cfi_offset 11, -8
 3468              		.cfi_offset 14, -4
 3469 0004 0446     		mov	r4, r0
 112:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImag, 0, EARLY_FFT_SIZE * sizeof(float));
 3470              		.loc 2 112 15 view .LVU1018
 3471 0006 00F5205B 		add	fp, r0, #10240
 110:EchoBridgeWithUSB.cpp ****         // Clear the frequency domain buffers
 3472              		.loc 2 110 10 view .LVU1019
 3473 000a ADF5085D 		sub	sp, sp, #8704
 3474              		.cfi_def_cfa_offset 8740
 112:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImag, 0, EARLY_FFT_SIZE * sizeof(float));
 3475              		.loc 2 112 15 view .LVU1020
 3476 000e 4FF48072 		mov	r2, #256
 113:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqRealRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3477              		.loc 2 113 15 view .LVU1021
 3478 0012 04F5245A 		add	r10, r4, #10496
 112:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImag, 0, EARLY_FFT_SIZE * sizeof(float));
 3479              		.loc 2 112 15 view .LVU1022
ARM GAS  /tmp/cch2Dr4w.s 			page 114


 3480 0016 0BF10C0B 		add	fp, fp, #12
 114:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImagRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3481              		.loc 2 114 15 view .LVU1023
 3482 001a 04F52859 		add	r9, r4, #10752
 115:EchoBridgeWithUSB.cpp ****         
 3483              		.loc 2 115 15 view .LVU1024
 3484 001e 04F52C57 		add	r7, r4, #11008
 113:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqRealRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3485              		.loc 2 113 15 view .LVU1025
 3486 0022 0AF10C0A 		add	r10, r10, #12
 110:EchoBridgeWithUSB.cpp ****         // Clear the frequency domain buffers
 3487              		.loc 2 110 10 view .LVU1026
 3488 0026 83B0     		sub	sp, sp, #12
 3489              		.cfi_def_cfa_offset 8752
 112:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImag, 0, EARLY_FFT_SIZE * sizeof(float));
 3490              		.loc 2 112 15 view .LVU1027
 3491 0028 0021     		movs	r1, #0
 3492 002a 5846     		mov	r0, fp
 3493              	.LVL304:
 114:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImagRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3494              		.loc 2 114 15 view .LVU1028
 3495 002c 09F10C09 		add	r9, r9, #12
 112:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImag, 0, EARLY_FFT_SIZE * sizeof(float));
 3496              		.loc 2 112 15 view .LVU1029
 3497 0030 FFF7FEFF 		bl	memset
 3498              	.LVL305:
 113:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqRealRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3499              		.loc 2 113 9 is_stmt 1 view .LVU1030
 115:EchoBridgeWithUSB.cpp ****         
 3500              		.loc 2 115 15 is_stmt 0 view .LVU1031
 3501 0034 0C37     		adds	r7, r7, #12
 113:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqRealRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3502              		.loc 2 113 15 view .LVU1032
 3503 0036 4FF48072 		mov	r2, #256
 3504 003a 0021     		movs	r1, #0
 3505 003c 5046     		mov	r0, r10
 3506 003e FFF7FEFF 		bl	memset
 3507              	.LVL306:
 114:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImagRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3508              		.loc 2 114 9 is_stmt 1 view .LVU1033
 114:EchoBridgeWithUSB.cpp ****         memset(earlyIrFreqImagRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3509              		.loc 2 114 15 is_stmt 0 view .LVU1034
 3510 0042 4FF48072 		mov	r2, #256
 3511 0046 0021     		movs	r1, #0
 3512 0048 4846     		mov	r0, r9
 3513 004a FFF7FEFF 		bl	memset
 3514              	.LVL307:
 115:EchoBridgeWithUSB.cpp ****         
 3515              		.loc 2 115 9 is_stmt 1 view .LVU1035
 115:EchoBridgeWithUSB.cpp ****         
 3516              		.loc 2 115 15 is_stmt 0 view .LVU1036
 3517 004e 4FF48072 		mov	r2, #256
 3518 0052 0021     		movs	r1, #0
 3519 0054 3846     		mov	r0, r7
 3520 0056 FFF7FEFF 		bl	memset
 3521              	.LVL308:
 117:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqImag, 0, LATE_FFT_SIZE * sizeof(float));
ARM GAS  /tmp/cch2Dr4w.s 			page 115


 3522              		.loc 2 117 9 is_stmt 1 view .LVU1037
 117:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqImag, 0, LATE_FFT_SIZE * sizeof(float));
 3523              		.loc 2 117 15 is_stmt 0 view .LVU1038
 3524 005a 4FF48052 		mov	r2, #4096
 3525 005e 0021     		movs	r1, #0
 3526 0060 6448     		ldr	r0, .L252
 3527 0062 FFF7FEFF 		bl	memset
 3528              	.LVL309:
 118:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqRealRight, 0, LATE_FFT_SIZE * sizeof(float));
 3529              		.loc 2 118 9 is_stmt 1 view .LVU1039
 118:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqRealRight, 0, LATE_FFT_SIZE * sizeof(float));
 3530              		.loc 2 118 15 is_stmt 0 view .LVU1040
 3531 0066 4FF48052 		mov	r2, #4096
 3532 006a 0021     		movs	r1, #0
 3533 006c 6248     		ldr	r0, .L252+4
 3534 006e FFF7FEFF 		bl	memset
 3535              	.LVL310:
 119:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqImagRight, 0, LATE_FFT_SIZE * sizeof(float));
 3536              		.loc 2 119 9 is_stmt 1 view .LVU1041
 119:EchoBridgeWithUSB.cpp ****         memset(g_lateIrFreqImagRight, 0, LATE_FFT_SIZE * sizeof(float));
 3537              		.loc 2 119 15 is_stmt 0 view .LVU1042
 3538 0072 4FF48052 		mov	r2, #4096
 3539 0076 0021     		movs	r1, #0
 3540 0078 6048     		ldr	r0, .L252+8
 3541 007a FFF7FEFF 		bl	memset
 3542              	.LVL311:
 120:EchoBridgeWithUSB.cpp ****         
 3543              		.loc 2 120 9 is_stmt 1 view .LVU1043
 120:EchoBridgeWithUSB.cpp ****         
 3544              		.loc 2 120 15 is_stmt 0 view .LVU1044
 3545 007e 4FF48052 		mov	r2, #4096
 3546 0082 0021     		movs	r1, #0
 3547 0084 5E48     		ldr	r0, .L252+12
 3548 0086 FFF7FEFF 		bl	memset
 3549              	.LVL312:
 123:EchoBridgeWithUSB.cpp ****         if (effectiveIrLength > irLength) effectiveIrLength = irLength;
 3550              		.loc 2 123 9 is_stmt 1 view .LVU1045
 124:EchoBridgeWithUSB.cpp ****         
 3551              		.loc 2 124 9 view .LVU1046
 123:EchoBridgeWithUSB.cpp ****         if (effectiveIrLength > irLength) effectiveIrLength = irLength;
 3552              		.loc 2 123 54 is_stmt 0 view .LVU1047
 3553 008a D4ED027A 		vldr.32	s15, [r4, #8]	@ int
 123:EchoBridgeWithUSB.cpp ****         if (effectiveIrLength > irLength) effectiveIrLength = irLength;
 3554              		.loc 2 123 56 view .LVU1048
 3555 008e 04F54058 		add	r8, r4, #12288
 3556 0092 A368     		ldr	r3, [r4, #8]
 123:EchoBridgeWithUSB.cpp ****         if (effectiveIrLength > irLength) effectiveIrLength = irLength;
 3557              		.loc 2 123 54 view .LVU1049
 3558 0094 F8EE677A 		vcvt.f32.u32	s15, s15
 130:EchoBridgeWithUSB.cpp ****         memset(earlyIrPaddedRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3559              		.loc 2 130 15 view .LVU1050
 3560 0098 4FF48072 		mov	r2, #256
 123:EchoBridgeWithUSB.cpp ****         if (effectiveIrLength > irLength) effectiveIrLength = irLength;
 3561              		.loc 2 123 54 view .LVU1051
 3562 009c 98ED897A 		vldr.32	s14, [r8, #548]
 130:EchoBridgeWithUSB.cpp ****         memset(earlyIrPaddedRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3563              		.loc 2 130 15 view .LVU1052
ARM GAS  /tmp/cch2Dr4w.s 			page 116


 3564 00a0 0021     		movs	r1, #0
 3565 00a2 02A8     		add	r0, sp, #8
 123:EchoBridgeWithUSB.cpp ****         if (effectiveIrLength > irLength) effectiveIrLength = irLength;
 3566              		.loc 2 123 54 view .LVU1053
 3567 00a4 67EE877A 		vmul.f32	s15, s15, s14
 123:EchoBridgeWithUSB.cpp ****         if (effectiveIrLength > irLength) effectiveIrLength = irLength;
 3568              		.loc 2 123 36 view .LVU1054
 3569 00a8 FCEEE77A 		vcvt.u32.f32	s15, s15
 3570 00ac 17EE905A 		vmov	r5, s15	@ int
 3571 00b0 9D42     		cmp	r5, r3
 3572 00b2 28BF     		it	cs
 3573 00b4 1D46     		movcs	r5, r3
 3574              	.LVL313:
 127:EchoBridgeWithUSB.cpp ****         float earlyIrPaddedRight[EARLY_FFT_SIZE];
 3575              		.loc 2 127 9 is_stmt 1 view .LVU1055
 128:EchoBridgeWithUSB.cpp ****         
 3576              		.loc 2 128 9 view .LVU1056
 130:EchoBridgeWithUSB.cpp ****         memset(earlyIrPaddedRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3577              		.loc 2 130 9 view .LVU1057
 130:EchoBridgeWithUSB.cpp ****         memset(earlyIrPaddedRight, 0, EARLY_FFT_SIZE * sizeof(float));
 3578              		.loc 2 130 15 is_stmt 0 view .LVU1058
 3579 00b6 FFF7FEFF 		bl	memset
 3580              	.LVL314:
 131:EchoBridgeWithUSB.cpp ****         
 3581              		.loc 2 131 9 is_stmt 1 view .LVU1059
 131:EchoBridgeWithUSB.cpp ****         
 3582              		.loc 2 131 15 is_stmt 0 view .LVU1060
 3583 00ba 4FF48072 		mov	r2, #256
 3584 00be 0021     		movs	r1, #0
 3585 00c0 42A8     		add	r0, sp, #264
 3586 00c2 FFF7FEFF 		bl	memset
 3587              	.LVL315:
 134:EchoBridgeWithUSB.cpp ****         memcpy(earlyIrPadded, irBuffer, earlyLength * sizeof(float));
 3588              		.loc 2 134 9 is_stmt 1 view .LVU1061
 134:EchoBridgeWithUSB.cpp ****         memcpy(earlyIrPadded, irBuffer, earlyLength * sizeof(float));
 3589              		.loc 2 134 67 is_stmt 0 view .LVU1062
 3590 00c6 3F2D     		cmp	r5, #63
 135:EchoBridgeWithUSB.cpp ****         
 3591              		.loc 2 135 31 view .LVU1063
 3592 00c8 2168     		ldr	r1, [r4]
 135:EchoBridgeWithUSB.cpp ****         
 3593              		.loc 2 135 15 view .LVU1064
 3594 00ca 02A8     		add	r0, sp, #8
 134:EchoBridgeWithUSB.cpp ****         memcpy(earlyIrPadded, irBuffer, earlyLength * sizeof(float));
 3595              		.loc 2 134 67 view .LVU1065
 3596 00cc 94BF     		ite	ls
 3597 00ce 2A46     		movls	r2, r5
 3598 00d0 4022     		movhi	r2, #64
 3599              	.LVL316:
 135:EchoBridgeWithUSB.cpp ****         
 3600              		.loc 2 135 9 is_stmt 1 view .LVU1066
 135:EchoBridgeWithUSB.cpp ****         
 3601              		.loc 2 135 15 is_stmt 0 view .LVU1067
 3602 00d2 9200     		lsls	r2, r2, #2
 3603              	.LVL317:
 135:EchoBridgeWithUSB.cpp ****         
 3604              		.loc 2 135 15 view .LVU1068
ARM GAS  /tmp/cch2Dr4w.s 			page 117


 3605 00d4 CDE90012 		strd	r1, r2, [sp]
 3606 00d8 FFF7FEFF 		bl	memcpy
 3607              	.LVL318:
 137:EchoBridgeWithUSB.cpp ****             memcpy(earlyIrPaddedRight, irBufferRight, earlyLength * sizeof(float));
 3608              		.loc 2 137 9 is_stmt 1 view .LVU1069
 3609 00dc 98F83832 		ldrb	r3, [r8, #568]	@ zero_extendqisi2
 3610 00e0 DDE90012 		ldrd	r1, r2, [sp]
 3611 00e4 03B1     		cbz	r3, .L246
 138:EchoBridgeWithUSB.cpp ****         } else {
 3612              		.loc 2 138 13 view .LVU1070
 138:EchoBridgeWithUSB.cpp ****         } else {
 3613              		.loc 2 138 19 is_stmt 0 view .LVU1071
 3614 00e6 6168     		ldr	r1, [r4, #4]
 3615              	.L246:
 140:EchoBridgeWithUSB.cpp ****         }
 3616              		.loc 2 140 13 is_stmt 1 view .LVU1072
 144:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 3617              		.loc 2 144 40 is_stmt 0 view .LVU1073
 3618 00e8 04F50C56 		add	r6, r4, #8960
 140:EchoBridgeWithUSB.cpp ****         }
 3619              		.loc 2 140 19 view .LVU1074
 3620 00ec 42A8     		add	r0, sp, #264
 3621 00ee FFF7FEFF 		bl	memcpy
 3622              	.LVL319:
 144:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 3623              		.loc 2 144 9 is_stmt 1 view .LVU1075
 144:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 3624              		.loc 2 144 24 is_stmt 0 view .LVU1076
 3625 00f2 04F10C03 		add	r3, r4, #12
 144:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 3626              		.loc 2 144 40 view .LVU1077
 3627 00f6 0C36     		adds	r6, r6, #12
 144:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 3628              		.loc 2 144 24 view .LVU1078
 3629 00f8 02A9     		add	r1, sp, #8
 3630 00fa 1846     		mov	r0, r3
 3631 00fc 0093     		str	r3, [sp]
 3632 00fe 3246     		mov	r2, r6
 3633 0100 FFF7FEFF 		bl	_ZN6ShyFFTIfLj64EE6DirectEPKfPf
 3634              	.LVL320:
 145:EchoBridgeWithUSB.cpp ****             earlyIrFreqReal[i] = earlyTimeOut[i];
 3635              		.loc 2 145 9 is_stmt 1 view .LVU1079
 3636              	.LBB529:
 145:EchoBridgeWithUSB.cpp ****             earlyIrFreqReal[i] = earlyTimeOut[i];
 3637              		.loc 2 145 30 view .LVU1080
 146:EchoBridgeWithUSB.cpp ****             earlyIrFreqImag[i] = 0.0f;
 3638              		.loc 2 146 32 is_stmt 0 view .LVU1081
 3639 0104 4FF48072 		mov	r2, #256
 3640 0108 3146     		mov	r1, r6
 3641 010a 5846     		mov	r0, fp
 3642 010c FFF7FEFF 		bl	memcpy
 3643              	.LVL321:
 147:EchoBridgeWithUSB.cpp ****         }
 3644              		.loc 2 147 32 view .LVU1082
 3645 0110 4FF48072 		mov	r2, #256
 3646 0114 0021     		movs	r1, #0
 3647 0116 5046     		mov	r0, r10
ARM GAS  /tmp/cch2Dr4w.s 			page 118


 3648 0118 FFF7FEFF 		bl	memset
 3649              	.LVL322:
 147:EchoBridgeWithUSB.cpp ****         }
 3650              		.loc 2 147 32 view .LVU1083
 3651              	.LBE529:
 150:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 3652              		.loc 2 150 9 is_stmt 1 view .LVU1084
 150:EchoBridgeWithUSB.cpp ****         for (size_t i = 0; i < EARLY_FFT_SIZE; i++) {
 3653              		.loc 2 150 24 is_stmt 0 view .LVU1085
 3654 011c 009B     		ldr	r3, [sp]
 3655 011e 3246     		mov	r2, r6
 3656 0120 42A9     		add	r1, sp, #264
 3657 0122 1846     		mov	r0, r3
 3658 0124 FFF7FEFF 		bl	_ZN6ShyFFTIfLj64EE6DirectEPKfPf
 3659              	.LVL323:
 151:EchoBridgeWithUSB.cpp ****             earlyIrFreqRealRight[i] = earlyTimeOut[i];
 3660              		.loc 2 151 9 is_stmt 1 view .LVU1086
 3661              	.LBB530:
 151:EchoBridgeWithUSB.cpp ****             earlyIrFreqRealRight[i] = earlyTimeOut[i];
 3662              		.loc 2 151 30 view .LVU1087
 152:EchoBridgeWithUSB.cpp ****             earlyIrFreqImagRight[i] = 0.0f;
 3663              		.loc 2 152 37 is_stmt 0 view .LVU1088
 3664 0128 4FF48072 		mov	r2, #256
 3665 012c 3146     		mov	r1, r6
 3666 012e 4846     		mov	r0, r9
 3667 0130 FFF7FEFF 		bl	memcpy
 3668              	.LVL324:
 153:EchoBridgeWithUSB.cpp ****         }
 3669              		.loc 2 153 37 view .LVU1089
 3670 0134 4FF48072 		mov	r2, #256
 3671 0138 0021     		movs	r1, #0
 3672 013a 3846     		mov	r0, r7
 3673 013c FFF7FEFF 		bl	memset
 3674              	.LVL325:
 153:EchoBridgeWithUSB.cpp ****         }
 3675              		.loc 2 153 37 view .LVU1090
 3676              	.LBE530:
 157:EchoBridgeWithUSB.cpp ****             float lateIrPadded[LATE_FFT_SIZE];
 3677              		.loc 2 157 9 is_stmt 1 view .LVU1091
 3678              	.LBB531:
 3679 0140 402D     		cmp	r5, #64
 3680 0142 50D9     		bls	.L248
 3681              	.LBB532:
 158:EchoBridgeWithUSB.cpp ****             float lateIrPaddedRight[LATE_FFT_SIZE];
 3682              		.loc 2 158 13 view .LVU1092
 159:EchoBridgeWithUSB.cpp ****             
 3683              		.loc 2 159 13 view .LVU1093
 161:EchoBridgeWithUSB.cpp ****             memset(lateIrPaddedRight, 0, LATE_FFT_SIZE * sizeof(float));
 3684              		.loc 2 161 13 view .LVU1094
 161:EchoBridgeWithUSB.cpp ****             memset(lateIrPaddedRight, 0, LATE_FFT_SIZE * sizeof(float));
 3685              		.loc 2 161 19 is_stmt 0 view .LVU1095
 3686 0144 4FF48052 		mov	r2, #4096
 3687 0148 0021     		movs	r1, #0
 3688 014a 82A8     		add	r0, sp, #520
 3689 014c FFF7FEFF 		bl	memset
 3690              	.LVL326:
 162:EchoBridgeWithUSB.cpp ****             
ARM GAS  /tmp/cch2Dr4w.s 			page 119


 3691              		.loc 2 162 13 is_stmt 1 view .LVU1096
 162:EchoBridgeWithUSB.cpp ****             
 3692              		.loc 2 162 19 is_stmt 0 view .LVU1097
 3693 0150 0DF59050 		add	r0, sp, #4608
 3694 0154 4FF48052 		mov	r2, #4096
 3695 0158 0021     		movs	r1, #0
 3696 015a 0830     		adds	r0, r0, #8
 3697 015c FFF7FEFF 		bl	memset
 3698              	.LVL327:
 165:EchoBridgeWithUSB.cpp ****             if (lateLength > LATE_FFT_SIZE) lateLength = LATE_FFT_SIZE;
 3699              		.loc 2 165 13 is_stmt 1 view .LVU1098
 165:EchoBridgeWithUSB.cpp ****             if (lateLength > LATE_FFT_SIZE) lateLength = LATE_FFT_SIZE;
 3700              		.loc 2 165 20 is_stmt 0 view .LVU1099
 3701 0160 A5F14002 		sub	r2, r5, #64
 3702              	.LVL328:
 166:EchoBridgeWithUSB.cpp ****             
 3703              		.loc 2 166 13 is_stmt 1 view .LVU1100
 168:EchoBridgeWithUSB.cpp ****             
 3704              		.loc 2 168 13 view .LVU1101
 168:EchoBridgeWithUSB.cpp ****             
 3705              		.loc 2 168 43 is_stmt 0 view .LVU1102
 3706 0164 2168     		ldr	r1, [r4]
 168:EchoBridgeWithUSB.cpp ****             
 3707              		.loc 2 168 19 view .LVU1103
 3708 0166 82A8     		add	r0, sp, #520
 3709 0168 B2F5806F 		cmp	r2, #1024
 168:EchoBridgeWithUSB.cpp ****             
 3710              		.loc 2 168 43 view .LVU1104
 3711 016c 01F58071 		add	r1, r1, #256
 168:EchoBridgeWithUSB.cpp ****             
 3712              		.loc 2 168 19 view .LVU1105
 3713 0170 28BF     		it	cs
 3714 0172 4FF48062 		movcs	r2, #1024
 3715              	.LVL329:
 168:EchoBridgeWithUSB.cpp ****             
 3716              		.loc 2 168 19 view .LVU1106
 3717 0176 9200     		lsls	r2, r2, #2
 3718 0178 CDE90012 		strd	r1, r2, [sp]
 3719 017c FFF7FEFF 		bl	memcpy
 3720              	.LVL330:
 170:EchoBridgeWithUSB.cpp ****                 memcpy(lateIrPaddedRight, irBufferRight + EARLY_FFT_SIZE, lateLength * sizeof(float
 3721              		.loc 2 170 13 is_stmt 1 view .LVU1107
 3722 0180 98F83832 		ldrb	r3, [r8, #568]	@ zero_extendqisi2
 3723 0184 DDE90012 		ldrd	r1, r2, [sp]
 3724 0188 13B1     		cbz	r3, .L249
 171:EchoBridgeWithUSB.cpp ****             } else {
 3725              		.loc 2 171 17 view .LVU1108
 171:EchoBridgeWithUSB.cpp ****             } else {
 3726              		.loc 2 171 57 is_stmt 0 view .LVU1109
 3727 018a 6168     		ldr	r1, [r4, #4]
 171:EchoBridgeWithUSB.cpp ****             } else {
 3728              		.loc 2 171 23 view .LVU1110
 3729 018c 01F58071 		add	r1, r1, #256
 3730              	.L249:
 173:EchoBridgeWithUSB.cpp ****             }
 3731              		.loc 2 173 17 is_stmt 1 view .LVU1111
 173:EchoBridgeWithUSB.cpp ****             }
ARM GAS  /tmp/cch2Dr4w.s 			page 120


 3732              		.loc 2 173 23 is_stmt 0 view .LVU1112
 3733 0190 0DF59050 		add	r0, sp, #4608
 177:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 3734              		.loc 2 177 27 view .LVU1113
 3735 0194 04F50374 		add	r4, r4, #524
 3736              	.LVL331:
 173:EchoBridgeWithUSB.cpp ****             }
 3737              		.loc 2 173 23 view .LVU1114
 3738 0198 0830     		adds	r0, r0, #8
 3739 019a FFF7FEFF 		bl	memcpy
 3740              	.LVL332:
 177:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 3741              		.loc 2 177 13 is_stmt 1 view .LVU1115
 177:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 3742              		.loc 2 177 27 is_stmt 0 view .LVU1116
 3743 019e 194A     		ldr	r2, .L252+16
 3744 01a0 82A9     		add	r1, sp, #520
 3745 01a2 2046     		mov	r0, r4
 3746 01a4 FFF7FEFF 		bl	_ZN6ShyFFTIfLj1024EE6DirectEPKfPf
 3747              	.LVL333:
 178:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqReal[i] = g_lateTimeOut[i];
 3748              		.loc 2 178 13 is_stmt 1 view .LVU1117
 3749              	.LBB533:
 178:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqReal[i] = g_lateTimeOut[i];
 3750              		.loc 2 178 34 view .LVU1118
 179:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqImag[i] = 0.0f;
 3751              		.loc 2 179 37 is_stmt 0 view .LVU1119
 3752 01a8 4FF48052 		mov	r2, #4096
 3753 01ac 1549     		ldr	r1, .L252+16
 3754 01ae 1148     		ldr	r0, .L252
 3755 01b0 FFF7FEFF 		bl	memcpy
 3756              	.LVL334:
 180:EchoBridgeWithUSB.cpp ****             }
 3757              		.loc 2 180 37 view .LVU1120
 3758 01b4 4FF48052 		mov	r2, #4096
 3759 01b8 0021     		movs	r1, #0
 3760 01ba 0F48     		ldr	r0, .L252+4
 3761 01bc FFF7FEFF 		bl	memset
 3762              	.LVL335:
 180:EchoBridgeWithUSB.cpp ****             }
 3763              		.loc 2 180 37 view .LVU1121
 3764              	.LBE533:
 183:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 3765              		.loc 2 183 13 is_stmt 1 view .LVU1122
 183:EchoBridgeWithUSB.cpp ****             for (size_t i = 0; i < LATE_FFT_SIZE; i++) {
 3766              		.loc 2 183 27 is_stmt 0 view .LVU1123
 3767 01c0 0DF59051 		add	r1, sp, #4608
 3768 01c4 0F4A     		ldr	r2, .L252+16
 3769 01c6 2046     		mov	r0, r4
 3770 01c8 0831     		adds	r1, r1, #8
 3771 01ca FFF7FEFF 		bl	_ZN6ShyFFTIfLj1024EE6DirectEPKfPf
 3772              	.LVL336:
 184:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqRealRight[i] = g_lateTimeOut[i];
 3773              		.loc 2 184 13 is_stmt 1 view .LVU1124
 3774              	.LBB534:
 184:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqRealRight[i] = g_lateTimeOut[i];
 3775              		.loc 2 184 34 view .LVU1125
ARM GAS  /tmp/cch2Dr4w.s 			page 121


 185:EchoBridgeWithUSB.cpp ****                 g_lateIrFreqImagRight[i] = 0.0f;
 3776              		.loc 2 185 42 is_stmt 0 view .LVU1126
 3777 01ce 4FF48052 		mov	r2, #4096
 3778 01d2 0C49     		ldr	r1, .L252+16
 3779 01d4 0948     		ldr	r0, .L252+8
 3780 01d6 FFF7FEFF 		bl	memcpy
 3781              	.LVL337:
 186:EchoBridgeWithUSB.cpp ****             }
 3782              		.loc 2 186 42 view .LVU1127
 3783 01da 4FF48052 		mov	r2, #4096
 3784 01de 0021     		movs	r1, #0
 3785 01e0 0748     		ldr	r0, .L252+12
 3786 01e2 FFF7FEFF 		bl	memset
 3787              	.LVL338:
 3788              	.L248:
 186:EchoBridgeWithUSB.cpp ****             }
 3789              		.loc 2 186 42 view .LVU1128
 3790              	.LBE534:
 3791              	.LBE532:
 3792              	.LBE531:
 190:EchoBridgeWithUSB.cpp ****     }
 3793              		.loc 2 190 9 is_stmt 1 view .LVU1129
 191:EchoBridgeWithUSB.cpp ****     
 3794              		.loc 2 191 5 is_stmt 0 view .LVU1130
 3795 01e6 0120     		movs	r0, #1
 3796 01e8 0DF5085D 		add	sp, sp, #8704
 3797 01ec 03B0     		add	sp, sp, #12
 3798              		.cfi_def_cfa_offset 36
 3799              		@ sp needed
 3800 01ee BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3801              	.LVL339:
 3802              	.L253:
 191:EchoBridgeWithUSB.cpp ****     
 3803              		.loc 2 191 5 view .LVU1131
 3804 01f2 00BF     		.align	2
 3805              	.L252:
 3806 01f4 00000000 		.word	g_lateIrFreqReal
 3807 01f8 00000000 		.word	g_lateIrFreqImag
 3808 01fc 00000000 		.word	g_lateIrFreqRealRight
 3809 0200 00000000 		.word	g_lateIrFreqImagRight
 3810 0204 00000000 		.word	g_lateTimeOut
 3811              		.cfi_endproc
 3812              	.LFE5501:
 3814              		.section	.text._Z26HandleFootswitch2LongPressv,"ax",%progbits
 3815              		.align	1
 3816              		.global	_Z26HandleFootswitch2LongPressv
 3817              		.syntax unified
 3818              		.thumb
 3819              		.thumb_func
 3820              		.fpu fpv5-d16
 3822              	_Z26HandleFootswitch2LongPressv:
 3823              	.LFB5522:
 644:EchoBridgeWithUSB.cpp ****     // Reset parameters
 3824              		.loc 2 644 35 is_stmt 1 view -0
 3825              		.cfi_startproc
 3826              		@ args = 0, pretend = 0, frame = 0
 3827              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cch2Dr4w.s 			page 122


 646:EchoBridgeWithUSB.cpp ****     reverb.SetPredelay(0.0f);
 3828              		.loc 2 646 5 view .LVU1133
 3829              	.LVL340:
 3830              	.LBB547:
 3831              	.LBI547:
 337:EchoBridgeWithUSB.cpp ****         dryWet = value;
 3832              		.loc 2 337 10 view .LVU1134
 3833              	.LBB548:
 338:EchoBridgeWithUSB.cpp ****     }
 3834              		.loc 2 338 9 view .LVU1135
 3835              	.LBE548:
 3836              	.LBE547:
 644:EchoBridgeWithUSB.cpp ****     // Reset parameters
 3837              		.loc 2 644 35 is_stmt 0 view .LVU1136
 3838 0000 10B5     		push	{r4, lr}
 3839              		.cfi_def_cfa_offset 8
 3840              		.cfi_offset 4, -8
 3841              		.cfi_offset 14, -4
 3842              	.LBB551:
 3843              	.LBB549:
 338:EchoBridgeWithUSB.cpp ****     }
 3844              		.loc 2 338 16 view .LVU1137
 3845 0002 1F4C     		ldr	r4, .L258
 3846 0004 4FF07C53 		mov	r3, #1056964608
 3847              	.LBE549:
 3848              	.LBE551:
 3849              	.LBB552:
 3850              	.LBB553:
 343:EchoBridgeWithUSB.cpp ****         predelayInSamples = (size_t)(predelayMs * sampleRate / 1000.0f);
 3851              		.loc 2 343 20 view .LVU1138
 3852 0008 DFED1E7A 		vldr.32	s15, .L258+4
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3853              		.loc 2 344 49 view .LVU1139
 3854 000c 94ED8D7A 		vldr.32	s14, [r4, #564]
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3855              		.loc 2 344 62 view .LVU1140
 3856 0010 DFED1D6A 		vldr.32	s13, .L258+8
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3857              		.loc 2 344 49 view .LVU1141
 3858 0014 27EE277A 		vmul.f32	s14, s14, s15
 343:EchoBridgeWithUSB.cpp ****         predelayInSamples = (size_t)(predelayMs * sampleRate / 1000.0f);
 3859              		.loc 2 343 20 view .LVU1142
 3860 0018 C4ED887A 		vstr.32	s15, [r4, #544]
 3861              	.LBE553:
 3862              	.LBE552:
 3863              	.LBB557:
 3864              	.LBB550:
 338:EchoBridgeWithUSB.cpp ****     }
 3865              		.loc 2 338 16 view .LVU1143
 3866 001c C4F81C32 		str	r3, [r4, #540]	@ float
 3867              	.LVL341:
 338:EchoBridgeWithUSB.cpp ****     }
 3868              		.loc 2 338 16 view .LVU1144
 3869              	.LBE550:
 3870              	.LBE557:
 647:EchoBridgeWithUSB.cpp ****     reverb.SetIRLengthFactor(1.0f);
 3871              		.loc 2 647 5 is_stmt 1 view .LVU1145
ARM GAS  /tmp/cch2Dr4w.s 			page 123


 3872              	.LBB558:
 3873              	.LBI552:
 342:EchoBridgeWithUSB.cpp ****         predelayMs = ms;
 3874              		.loc 2 342 10 view .LVU1146
 3875              	.LBB554:
 343:EchoBridgeWithUSB.cpp ****         predelayInSamples = (size_t)(predelayMs * sampleRate / 1000.0f);
 3876              		.loc 2 343 9 view .LVU1147
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3877              		.loc 2 344 9 view .LVU1148
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3878              		.loc 2 344 27 is_stmt 0 view .LVU1149
 3879 0020 45F6BF53 		movw	r3, #23999
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3880              		.loc 2 344 62 view .LVU1150
 3881 0024 C7EE267A 		vdiv.f32	s15, s14, s13
 3882              	.LBE554:
 3883              	.LBE558:
 644:EchoBridgeWithUSB.cpp ****     // Reset parameters
 3884              		.loc 2 644 35 view .LVU1151
 3885 0028 2DED028B 		vpush.64	{d8}
 3886              		.cfi_def_cfa_offset 16
 3887              		.cfi_offset 80, -16
 3888              		.cfi_offset 81, -12
 3889              	.LBB559:
 3890              	.LBB560:
 352:EchoBridgeWithUSB.cpp ****             irLengthFactor = factor;
 3891              		.loc 2 352 9 view .LVU1152
 3892 002c B7EE008A 		vmov.f32	s16, #1.0e+0
 3893              	.LBE560:
 3894              	.LBE559:
 3895              	.LBB563:
 3896              	.LBB555:
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3897              		.loc 2 344 29 view .LVU1153
 3898 0030 FCEEE77A 		vcvt.u32.f32	s15, s15
 345:EchoBridgeWithUSB.cpp ****             predelayInSamples = MAX_PREDELAY_SAMPLES - 1;
 3899              		.loc 2 345 9 is_stmt 1 view .LVU1154
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3900              		.loc 2 344 27 is_stmt 0 view .LVU1155
 3901 0034 17EE902A 		vmov	r2, s15	@ int
 3902              	.LBE555:
 3903              	.LBE563:
 3904              	.LBB564:
 3905              	.LBB561:
 352:EchoBridgeWithUSB.cpp ****             irLengthFactor = factor;
 3906              		.loc 2 352 9 view .LVU1156
 3907 0038 D4ED897A 		vldr.32	s15, [r4, #548]
 3908 003c F4EE487A 		vcmp.f32	s15, s16
 3909              	.LBE561:
 3910              	.LBE564:
 3911              	.LBB565:
 3912              	.LBB556:
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3913              		.loc 2 344 27 view .LVU1157
 3914 0040 9A42     		cmp	r2, r3
 3915 0042 94BF     		ite	ls
 3916 0044 C4F81822 		strls	r2, [r4, #536]
ARM GAS  /tmp/cch2Dr4w.s 			page 124


 3917 0048 C4F81832 		strhi	r3, [r4, #536]
 3918              	.LVL342:
 344:EchoBridgeWithUSB.cpp ****         if (predelayInSamples >= MAX_PREDELAY_SAMPLES) {
 3919              		.loc 2 344 27 view .LVU1158
 3920              	.LBE556:
 3921              	.LBE565:
 648:EchoBridgeWithUSB.cpp ****     reverb.SetLowCut(100.0f);
 3922              		.loc 2 648 5 is_stmt 1 view .LVU1159
 3923              	.LBB566:
 3924              	.LBI559:
 351:EchoBridgeWithUSB.cpp ****         if (factor != irLengthFactor) {
 3925              		.loc 2 351 10 view .LVU1160
 3926              	.LBB562:
 352:EchoBridgeWithUSB.cpp ****             irLengthFactor = factor;
 3927              		.loc 2 352 9 view .LVU1161
 3928 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3929 0050 05D0     		beq	.L257
 353:EchoBridgeWithUSB.cpp ****             UpdateIRFrequencyDomain();
 3930              		.loc 2 353 13 view .LVU1162
 354:EchoBridgeWithUSB.cpp ****         }
 3931              		.loc 2 354 36 is_stmt 0 view .LVU1163
 3932 0052 A4F54050 		sub	r0, r4, #12288
 353:EchoBridgeWithUSB.cpp ****             UpdateIRFrequencyDomain();
 3933              		.loc 2 353 28 view .LVU1164
 3934 0056 84ED898A 		vstr.32	s16, [r4, #548]
 354:EchoBridgeWithUSB.cpp ****         }
 3935              		.loc 2 354 13 is_stmt 1 view .LVU1165
 354:EchoBridgeWithUSB.cpp ****         }
 3936              		.loc 2 354 36 is_stmt 0 view .LVU1166
 3937 005a FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv
 3938              	.LVL343:
 3939              	.L257:
 354:EchoBridgeWithUSB.cpp ****         }
 3940              		.loc 2 354 36 view .LVU1167
 3941              	.LBE562:
 3942              	.LBE566:
 649:EchoBridgeWithUSB.cpp ****     reverb.SetHighCut(10000.0f);
 3943              		.loc 2 649 5 is_stmt 1 view .LVU1168
 3944              	.LBB567:
 3945              	.LBI567:
 359:EchoBridgeWithUSB.cpp ****         lowCutFreq = freq;
 3946              		.loc 2 359 10 view .LVU1169
 3947              	.LBB568:
 360:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3948              		.loc 2 360 9 view .LVU1170
 360:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3949              		.loc 2 360 20 is_stmt 0 view .LVU1171
 3950 005e 0B4B     		ldr	r3, .L258+12
 361:EchoBridgeWithUSB.cpp ****     }
 3951              		.loc 2 361 22 view .LVU1172
 3952 0060 0B48     		ldr	r0, .L258+16
 360:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3953              		.loc 2 360 20 view .LVU1173
 3954 0062 C4F82832 		str	r3, [r4, #552]	@ float
 361:EchoBridgeWithUSB.cpp ****     }
 3955              		.loc 2 361 9 is_stmt 1 view .LVU1174
 361:EchoBridgeWithUSB.cpp ****     }
ARM GAS  /tmp/cch2Dr4w.s 			page 125


 3956              		.loc 2 361 22 is_stmt 0 view .LVU1175
 3957 0066 FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb13UpdateFiltersEv
 3958              	.LVL344:
 361:EchoBridgeWithUSB.cpp ****     }
 3959              		.loc 2 361 22 view .LVU1176
 3960              	.LBE568:
 3961              	.LBE567:
 650:EchoBridgeWithUSB.cpp ****     reverb.SetStereoWidth(1.0f);
 3962              		.loc 2 650 5 is_stmt 1 view .LVU1177
 3963              	.LBB569:
 3964              	.LBI569:
 365:EchoBridgeWithUSB.cpp ****         highCutFreq = freq;
 3965              		.loc 2 365 10 view .LVU1178
 3966              	.LBB570:
 366:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3967              		.loc 2 366 9 view .LVU1179
 366:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3968              		.loc 2 366 21 is_stmt 0 view .LVU1180
 3969 006a 0A4B     		ldr	r3, .L258+20
 367:EchoBridgeWithUSB.cpp ****     }
 3970              		.loc 2 367 22 view .LVU1181
 3971 006c 0848     		ldr	r0, .L258+16
 366:EchoBridgeWithUSB.cpp ****         UpdateFilters();
 3972              		.loc 2 366 21 view .LVU1182
 3973 006e C4F82C32 		str	r3, [r4, #556]	@ float
 367:EchoBridgeWithUSB.cpp ****     }
 3974              		.loc 2 367 9 is_stmt 1 view .LVU1183
 367:EchoBridgeWithUSB.cpp ****     }
 3975              		.loc 2 367 22 is_stmt 0 view .LVU1184
 3976 0072 FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb13UpdateFiltersEv
 3977              	.LVL345:
 367:EchoBridgeWithUSB.cpp ****     }
 3978              		.loc 2 367 22 view .LVU1185
 3979              	.LBE570:
 3980              	.LBE569:
 651:EchoBridgeWithUSB.cpp **** }
 3981              		.loc 2 651 5 is_stmt 1 view .LVU1186
 3982              	.LBB571:
 3983              	.LBI571:
 371:EchoBridgeWithUSB.cpp ****         stereoWidth = width;
 3984              		.loc 2 371 10 view .LVU1187
 3985              	.LBB572:
 372:EchoBridgeWithUSB.cpp ****     }
 3986              		.loc 2 372 9 view .LVU1188
 372:EchoBridgeWithUSB.cpp ****     }
 3987              		.loc 2 372 21 is_stmt 0 view .LVU1189
 3988 0076 84ED8C8A 		vstr.32	s16, [r4, #560]
 3989              	.LVL346:
 372:EchoBridgeWithUSB.cpp ****     }
 3990              		.loc 2 372 21 view .LVU1190
 3991              	.LBE572:
 3992              	.LBE571:
 652:EchoBridgeWithUSB.cpp **** 
 3993              		.loc 2 652 1 view .LVU1191
 3994 007a BDEC028B 		vldm	sp!, {d8}
 3995              		.cfi_restore 80
 3996              		.cfi_restore 81
ARM GAS  /tmp/cch2Dr4w.s 			page 126


 3997              		.cfi_def_cfa_offset 8
 3998 007e 10BD     		pop	{r4, pc}
 3999              	.L259:
 4000              		.align	2
 4001              	.L258:
 4002 0080 00300000 		.word	reverb+12288
 4003 0084 00000000 		.word	0
 4004 0088 00007A44 		.word	1148846080
 4005 008c 0000C842 		.word	1120403456
 4006 0090 00000000 		.word	reverb
 4007 0094 00401C46 		.word	1176256512
 4008              		.cfi_endproc
 4009              	.LFE5522:
 4011              		.section	.text._Z14LoadIRCallbackPfS_j,"ax",%progbits
 4012              		.align	1
 4013              		.global	_Z14LoadIRCallbackPfS_j
 4014              		.syntax unified
 4015              		.thumb
 4016              		.thumb_func
 4017              		.fpu fpv5-d16
 4019              	_Z14LoadIRCallbackPfS_j:
 4020              	.LVL347:
 4021              	.LFB5530:
 729:EchoBridgeWithUSB.cpp **** 
 730:EchoBridgeWithUSB.cpp **** // Set up IR loader callback
 731:EchoBridgeWithUSB.cpp **** bool LoadIRCallback(float* bufferL, float* bufferR, size_t length) {
 4022              		.loc 2 731 68 is_stmt 1 view -0
 4023              		.cfi_startproc
 4024              		@ args = 0, pretend = 0, frame = 8
 4025              		@ frame_needed = 0, uses_anonymous_args = 0
 4026              		.loc 2 731 68 is_stmt 0 view .LVU1193
 4027 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 4028              		.cfi_def_cfa_offset 40
 4029              		.cfi_offset 4, -28
 4030              		.cfi_offset 5, -24
 4031              		.cfi_offset 6, -20
 4032              		.cfi_offset 7, -16
 4033              		.cfi_offset 8, -12
 4034              		.cfi_offset 9, -8
 4035              		.cfi_offset 14, -4
 4036              	.LBB583:
 4037              	.LBB584:
 293:EchoBridgeWithUSB.cpp ****             return false;
 4038              		.loc 2 293 25 view .LVU1194
 4039 0004 531E     		subs	r3, r2, #1
 4040              	.LBE584:
 4041              	.LBE583:
 4042              		.loc 2 731 68 view .LVU1195
 4043 0006 0746     		mov	r7, r0
 732:EchoBridgeWithUSB.cpp ****     if (bufferR) {
 4044              		.loc 2 732 5 is_stmt 1 view .LVU1196
 731:EchoBridgeWithUSB.cpp ****     if (bufferR) {
 4045              		.loc 2 731 68 is_stmt 0 view .LVU1197
 4046 0008 1646     		mov	r6, r2
 4047              		.loc 2 732 5 view .LVU1198
 4048 000a 0C46     		mov	r4, r1
 4049 000c 0029     		cmp	r1, #0
ARM GAS  /tmp/cch2Dr4w.s 			page 127


 4050 000e 36D0     		beq	.L261
 733:EchoBridgeWithUSB.cpp ****         return reverb.LoadStereoIR(bufferL, bufferR, length);
 4051              		.loc 2 733 9 is_stmt 1 view .LVU1199
 4052              	.LVL348:
 4053              	.LBB589:
 4054              	.LBI583:
 291:EchoBridgeWithUSB.cpp ****         // Check if length is valid
 4055              		.loc 2 291 10 view .LVU1200
 4056              	.LBB587:
 293:EchoBridgeWithUSB.cpp ****             return false;
 4057              		.loc 2 293 9 view .LVU1201
 4058 0010 B3F5805F 		cmp	r3, #4096
 4059 0014 1BD2     		bcs	.L267
 298:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 4060              		.loc 2 298 9 view .LVU1202
 298:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 4061              		.loc 2 298 13 is_stmt 0 view .LVU1203
 4062 0016 264D     		ldr	r5, .L279
 4063 0018 2868     		ldr	r0, [r5]
 4064              	.LVL349:
 298:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 4065              		.loc 2 298 9 view .LVU1204
 4066 001a 08B1     		cbz	r0, .L263
 299:EchoBridgeWithUSB.cpp ****         }
 4067              		.loc 2 299 13 is_stmt 1 view .LVU1205
 299:EchoBridgeWithUSB.cpp ****         }
 4068              		.loc 2 299 22 is_stmt 0 view .LVU1206
 4069 001c FFF7FEFF 		bl	_ZdaPv
 4070              	.LVL350:
 4071              	.L263:
 302:EchoBridgeWithUSB.cpp ****             delete[] irBufferRight;
 4072              		.loc 2 302 9 is_stmt 1 view .LVU1207
 302:EchoBridgeWithUSB.cpp ****             delete[] irBufferRight;
 4073              		.loc 2 302 13 is_stmt 0 view .LVU1208
 4074 0020 6868     		ldr	r0, [r5, #4]
 302:EchoBridgeWithUSB.cpp ****             delete[] irBufferRight;
 4075              		.loc 2 302 9 view .LVU1209
 4076 0022 08B1     		cbz	r0, .L264
 303:EchoBridgeWithUSB.cpp ****         }
 4077              		.loc 2 303 13 is_stmt 1 view .LVU1210
 303:EchoBridgeWithUSB.cpp ****         }
 4078              		.loc 2 303 22 is_stmt 0 view .LVU1211
 4079 0024 FFF7FEFF 		bl	_ZdaPv
 4080              	.LVL351:
 4081              	.L264:
 307:EchoBridgeWithUSB.cpp ****         irBufferRight = new float[length];
 4082              		.loc 2 307 9 is_stmt 1 view .LVU1212
 307:EchoBridgeWithUSB.cpp ****         irBufferRight = new float[length];
 4083              		.loc 2 307 36 is_stmt 0 view .LVU1213
 4084 0028 4FEA8608 		lsl	r8, r6, #2
 4085 002c 4046     		mov	r0, r8
 4086 002e FFF7FEFF 		bl	_Znaj
 4087              	.LVL352:
 307:EchoBridgeWithUSB.cpp ****         irBufferRight = new float[length];
 4088              		.loc 2 307 18 view .LVU1214
 4089 0032 2860     		str	r0, [r5]
 308:EchoBridgeWithUSB.cpp ****         
ARM GAS  /tmp/cch2Dr4w.s 			page 128


 4090              		.loc 2 308 9 is_stmt 1 view .LVU1215
 308:EchoBridgeWithUSB.cpp ****         
 4091              		.loc 2 308 41 is_stmt 0 view .LVU1216
 4092 0034 4046     		mov	r0, r8
 4093 0036 FFF7FEFF 		bl	_Znaj
 4094              	.LVL353:
 310:EchoBridgeWithUSB.cpp ****             if (irBuffer) {
 4095              		.loc 2 310 14 view .LVU1217
 4096 003a D5F80090 		ldr	r9, [r5]
 308:EchoBridgeWithUSB.cpp ****         
 4097              		.loc 2 308 23 view .LVU1218
 4098 003e 6860     		str	r0, [r5, #4]
 310:EchoBridgeWithUSB.cpp ****             if (irBuffer) {
 4099              		.loc 2 310 9 is_stmt 1 view .LVU1219
 4100 0040 B9F1000F 		cmp	r9, #0
 4101 0044 05D1     		bne	.L265
 311:EchoBridgeWithUSB.cpp ****                 delete[] irBuffer;
 4102              		.loc 2 311 13 view .LVU1220
 4103              	.LVL354:
 4104              	.LBB585:
 4105              	.LBI585:
 291:EchoBridgeWithUSB.cpp ****         // Check if length is valid
 4106              		.loc 2 291 10 view .LVU1221
 4107              	.LBB586:
 316:EchoBridgeWithUSB.cpp ****                 delete[] irBufferRight;
 4108              		.loc 2 316 13 view .LVU1222
 317:EchoBridgeWithUSB.cpp ****                 irBufferRight = nullptr;
 4109              		.loc 2 317 17 view .LVU1223
 317:EchoBridgeWithUSB.cpp ****                 irBufferRight = nullptr;
 4110              		.loc 2 317 26 is_stmt 0 view .LVU1224
 4111 0046 FFF7FEFF 		bl	_ZdaPv
 4112              	.LVL355:
 318:EchoBridgeWithUSB.cpp ****             }
 4113              		.loc 2 318 17 is_stmt 1 view .LVU1225
 318:EchoBridgeWithUSB.cpp ****             }
 4114              		.loc 2 318 31 is_stmt 0 view .LVU1226
 4115 004a C5F80490 		str	r9, [r5, #4]
 4116              	.LVL356:
 4117              	.L267:
 318:EchoBridgeWithUSB.cpp ****             }
 4118              		.loc 2 318 31 view .LVU1227
 4119              	.LBE586:
 4120              	.LBE585:
 294:EchoBridgeWithUSB.cpp ****         }
 4121              		.loc 2 294 20 view .LVU1228
 4122 004e 0020     		movs	r0, #0
 4123 0050 12E0     		b	.L262
 4124              	.L265:
 325:EchoBridgeWithUSB.cpp ****         memcpy(irBufferRight, bufferR, length * sizeof(float));
 4125              		.loc 2 325 9 is_stmt 1 view .LVU1229
 325:EchoBridgeWithUSB.cpp ****         memcpy(irBufferRight, bufferR, length * sizeof(float));
 4126              		.loc 2 325 15 is_stmt 0 view .LVU1230
 4127 0052 4246     		mov	r2, r8
 4128 0054 3946     		mov	r1, r7
 4129 0056 4846     		mov	r0, r9
 4130 0058 FFF7FEFF 		bl	memcpy
 4131              	.LVL357:
ARM GAS  /tmp/cch2Dr4w.s 			page 129


 326:EchoBridgeWithUSB.cpp ****         irLength = length;
 4132              		.loc 2 326 9 is_stmt 1 view .LVU1231
 326:EchoBridgeWithUSB.cpp ****         irLength = length;
 4133              		.loc 2 326 15 is_stmt 0 view .LVU1232
 4134 005c 4246     		mov	r2, r8
 4135 005e 2146     		mov	r1, r4
 4136 0060 6868     		ldr	r0, [r5, #4]
 4137 0062 FFF7FEFF 		bl	memcpy
 4138              	.LVL358:
 327:EchoBridgeWithUSB.cpp ****         
 4139              		.loc 2 327 9 is_stmt 1 view .LVU1233
 330:EchoBridgeWithUSB.cpp ****         
 4140              		.loc 2 330 22 is_stmt 0 view .LVU1234
 4141 0066 1348     		ldr	r0, .L279+4
 4142 0068 0123     		movs	r3, #1
 327:EchoBridgeWithUSB.cpp ****         
 4143              		.loc 2 327 18 view .LVU1235
 4144 006a AE60     		str	r6, [r5, #8]
 330:EchoBridgeWithUSB.cpp ****         
 4145              		.loc 2 330 9 is_stmt 1 view .LVU1236
 4146              	.LVL359:
 4147              	.L278:
 330:EchoBridgeWithUSB.cpp ****         
 4148              		.loc 2 330 9 is_stmt 0 view .LVU1237
 4149              	.LBE587:
 4150              	.LBE589:
 4151              	.LBB590:
 4152              	.LBB591:
 4153              	.LBB592:
 4154              	.LBB593:
 4155              	.LBB594:
 4156              	.LBB595:
 284:EchoBridgeWithUSB.cpp ****         
 4157              		.loc 2 284 22 view .LVU1238
 4158 006c 80F83832 		strb	r3, [r0, #568]
 287:EchoBridgeWithUSB.cpp ****     }
 4159              		.loc 2 287 9 is_stmt 1 view .LVU1239
 287:EchoBridgeWithUSB.cpp ****     }
 4160              		.loc 2 287 39 is_stmt 0 view .LVU1240
 4161 0070 A0F54050 		sub	r0, r0, #12288
 4162 0074 FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv
 4163              	.LVL360:
 4164              	.L262:
 4165              	.LBE595:
 4166              	.LBE594:
 4167              	.LBE593:
 4168              	.LBE592:
 4169              	.LBE591:
 4170              	.LBE590:
 734:EchoBridgeWithUSB.cpp ****     } else {
 735:EchoBridgeWithUSB.cpp ****         return reverb.LoadIR(bufferL, length);
 736:EchoBridgeWithUSB.cpp ****     }
 737:EchoBridgeWithUSB.cpp **** }
 4171              		.loc 2 737 1 view .LVU1241
 4172 0078 03B0     		add	sp, sp, #12
 4173              		.cfi_remember_state
 4174              		.cfi_def_cfa_offset 28
ARM GAS  /tmp/cch2Dr4w.s 			page 130


 4175              		@ sp needed
 4176 007a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4177              	.LVL361:
 4178              	.L261:
 4179              		.cfi_restore_state
 4180              	.LBB601:
 4181              	.LBI590:
 731:EchoBridgeWithUSB.cpp ****     if (bufferR) {
 4182              		.loc 2 731 6 is_stmt 1 view .LVU1242
 4183              	.LBB600:
 735:EchoBridgeWithUSB.cpp ****     }
 4184              		.loc 2 735 9 view .LVU1243
 4185              	.LBB599:
 4186              	.LBI592:
 262:EchoBridgeWithUSB.cpp ****         // Check if length is valid
 4187              		.loc 2 262 10 view .LVU1244
 4188              	.LBB598:
 264:EchoBridgeWithUSB.cpp ****             return false;
 4189              		.loc 2 264 9 view .LVU1245
 4190 007e B3F5805F 		cmp	r3, #4096
 4191 0082 12D2     		bcs	.L268
 4192              	.LVL362:
 4193              	.LBB597:
 4194              	.LBI594:
 262:EchoBridgeWithUSB.cpp ****         // Check if length is valid
 4195              		.loc 2 262 10 view .LVU1246
 4196              	.LBB596:
 269:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 4197              		.loc 2 269 9 view .LVU1247
 269:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 4198              		.loc 2 269 13 is_stmt 0 view .LVU1248
 4199 0084 0A4C     		ldr	r4, .L279
 4200 0086 2068     		ldr	r0, [r4]
 4201              	.LVL363:
 269:EchoBridgeWithUSB.cpp ****             delete[] irBuffer;
 4202              		.loc 2 269 9 view .LVU1249
 4203 0088 08B1     		cbz	r0, .L266
 270:EchoBridgeWithUSB.cpp ****         }
 4204              		.loc 2 270 13 is_stmt 1 view .LVU1250
 270:EchoBridgeWithUSB.cpp ****         }
 4205              		.loc 2 270 22 is_stmt 0 view .LVU1251
 4206 008a FFF7FEFF 		bl	_ZdaPv
 4207              	.LVL364:
 4208              	.L266:
 274:EchoBridgeWithUSB.cpp ****         if (!irBuffer) {
 4209              		.loc 2 274 9 is_stmt 1 view .LVU1252
 274:EchoBridgeWithUSB.cpp ****         if (!irBuffer) {
 4210              		.loc 2 274 36 is_stmt 0 view .LVU1253
 4211 008e B200     		lsls	r2, r6, #2
 4212 0090 1046     		mov	r0, r2
 4213 0092 0192     		str	r2, [sp, #4]
 4214 0094 FFF7FEFF 		bl	_Znaj
 4215              	.LVL365:
 280:EchoBridgeWithUSB.cpp ****         irLength = length;
 4216              		.loc 2 280 15 view .LVU1254
 4217 0098 019A     		ldr	r2, [sp, #4]
 4218 009a 3946     		mov	r1, r7
ARM GAS  /tmp/cch2Dr4w.s 			page 131


 274:EchoBridgeWithUSB.cpp ****         if (!irBuffer) {
 4219              		.loc 2 274 18 view .LVU1255
 4220 009c 2060     		str	r0, [r4]
 275:EchoBridgeWithUSB.cpp ****             return false;
 4221              		.loc 2 275 9 is_stmt 1 view .LVU1256
 280:EchoBridgeWithUSB.cpp ****         irLength = length;
 4222              		.loc 2 280 9 view .LVU1257
 280:EchoBridgeWithUSB.cpp ****         irLength = length;
 4223              		.loc 2 280 15 is_stmt 0 view .LVU1258
 4224 009e FFF7FEFF 		bl	memcpy
 4225              	.LVL366:
 281:EchoBridgeWithUSB.cpp ****         
 4226              		.loc 2 281 9 is_stmt 1 view .LVU1259
 284:EchoBridgeWithUSB.cpp ****         
 4227              		.loc 2 284 22 is_stmt 0 view .LVU1260
 4228 00a2 0448     		ldr	r0, .L279+4
 4229 00a4 0023     		movs	r3, #0
 281:EchoBridgeWithUSB.cpp ****         
 4230              		.loc 2 281 18 view .LVU1261
 4231 00a6 A660     		str	r6, [r4, #8]
 284:EchoBridgeWithUSB.cpp ****         
 4232              		.loc 2 284 9 is_stmt 1 view .LVU1262
 4233 00a8 E0E7     		b	.L278
 4234              	.LVL367:
 4235              	.L268:
 284:EchoBridgeWithUSB.cpp ****         
 4236              		.loc 2 284 9 is_stmt 0 view .LVU1263
 4237              	.LBE596:
 4238              	.LBE597:
 4239              	.LBE598:
 4240              	.LBE599:
 4241              	.LBE600:
 4242              	.LBE601:
 4243              	.LBB602:
 4244              	.LBB588:
 294:EchoBridgeWithUSB.cpp ****         }
 4245              		.loc 2 294 20 view .LVU1264
 4246 00aa 0846     		mov	r0, r1
 4247              	.LVL368:
 294:EchoBridgeWithUSB.cpp ****         }
 4248              		.loc 2 294 20 view .LVU1265
 4249 00ac E4E7     		b	.L262
 4250              	.L280:
 4251 00ae 00BF     		.align	2
 4252              	.L279:
 4253 00b0 00000000 		.word	reverb
 4254 00b4 00300000 		.word	reverb+12288
 4255              	.LBE588:
 4256              	.LBE602:
 4257              		.cfi_endproc
 4258              	.LFE5530:
 4260              		.section	.text._Z11HandleKnob3f,"ax",%progbits
 4261              		.align	1
 4262              		.global	_Z11HandleKnob3f
 4263              		.syntax unified
 4264              		.thumb
 4265              		.thumb_func
ARM GAS  /tmp/cch2Dr4w.s 			page 132


 4266              		.fpu fpv5-d16
 4268              	_Z11HandleKnob3f:
 4269              	.LVL369:
 4270              	.LFB5526:
 699:EchoBridgeWithUSB.cpp ****     reverb.SetIRLengthFactor(value);
 4271              		.loc 2 699 31 is_stmt 1 view -0
 4272              		.cfi_startproc
 4273              		@ args = 0, pretend = 0, frame = 0
 4274              		@ frame_needed = 0, uses_anonymous_args = 0
 700:EchoBridgeWithUSB.cpp **** }
 4275              		.loc 2 700 5 view .LVU1267
 4276              	.LBB605:
 4277              	.LBI605:
 351:EchoBridgeWithUSB.cpp ****         if (factor != irLengthFactor) {
 4278              		.loc 2 351 10 view .LVU1268
 4279              	.LBB606:
 352:EchoBridgeWithUSB.cpp ****             irLengthFactor = factor;
 4280              		.loc 2 352 9 view .LVU1269
 352:EchoBridgeWithUSB.cpp ****             irLengthFactor = factor;
 4281              		.loc 2 352 23 is_stmt 0 view .LVU1270
 4282 0000 0748     		ldr	r0, .L283
 352:EchoBridgeWithUSB.cpp ****             irLengthFactor = factor;
 4283              		.loc 2 352 9 view .LVU1271
 4284 0002 D0ED897A 		vldr.32	s15, [r0, #548]
 4285 0006 B4EE670A 		vcmp.f32	s0, s15
 4286              	.LBE606:
 4287              	.LBE605:
 699:EchoBridgeWithUSB.cpp ****     reverb.SetIRLengthFactor(value);
 4288              		.loc 2 699 31 view .LVU1272
 4289 000a 08B5     		push	{r3, lr}
 4290              		.cfi_def_cfa_offset 8
 4291              		.cfi_offset 3, -8
 4292              		.cfi_offset 14, -4
 4293              	.LBB608:
 4294              	.LBB607:
 352:EchoBridgeWithUSB.cpp ****             irLengthFactor = factor;
 4295              		.loc 2 352 9 view .LVU1273
 4296 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4297 0010 05D0     		beq	.L281
 353:EchoBridgeWithUSB.cpp ****             UpdateIRFrequencyDomain();
 4298              		.loc 2 353 13 is_stmt 1 view .LVU1274
 353:EchoBridgeWithUSB.cpp ****             UpdateIRFrequencyDomain();
 4299              		.loc 2 353 28 is_stmt 0 view .LVU1275
 4300 0012 80ED890A 		vstr.32	s0, [r0, #548]
 354:EchoBridgeWithUSB.cpp ****         }
 4301              		.loc 2 354 13 is_stmt 1 view .LVU1276
 354:EchoBridgeWithUSB.cpp ****         }
 4302              		.loc 2 354 36 is_stmt 0 view .LVU1277
 4303 0016 A0F54050 		sub	r0, r0, #12288
 4304 001a FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv
 4305              	.LVL370:
 4306              	.L281:
 354:EchoBridgeWithUSB.cpp ****         }
 4307              		.loc 2 354 36 view .LVU1278
 4308              	.LBE607:
 4309              	.LBE608:
 701:EchoBridgeWithUSB.cpp **** 
ARM GAS  /tmp/cch2Dr4w.s 			page 133


 4310              		.loc 2 701 1 view .LVU1279
 4311 001e 08BD     		pop	{r3, pc}
 4312              	.L284:
 4313              		.align	2
 4314              	.L283:
 4315 0020 00300000 		.word	reverb+12288
 4316              		.cfi_endproc
 4317              	.LFE5526:
 4319              		.section	.text._ZN6ShyFFTIfLj64EE4InitEv,"axG",%progbits,_ZN6ShyFFTIfLj64EE4InitEv,comdat
 4320              		.align	1
 4321              		.weak	_ZN6ShyFFTIfLj64EE4InitEv
 4322              		.syntax unified
 4323              		.thumb
 4324              		.thumb_func
 4325              		.fpu fpv5-d16
 4327              	_ZN6ShyFFTIfLj64EE4InitEv:
 4328              	.LVL371:
 4329              	.LFB5852:
  21:shy_fft.h     ****         // Precompute bit-reversed indices
 4330              		.loc 12 21 10 is_stmt 1 view -0
 4331              		.cfi_startproc
 4332              		@ args = 0, pretend = 0, frame = 0
 4333              		@ frame_needed = 0, uses_anonymous_args = 0
 4334              	.LBB615:
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4335              		.loc 12 23 30 view .LVU1281
 4336 0000 00F58070 		add	r0, r0, #256
 4337              	.LVL372:
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4338              		.loc 12 23 21 is_stmt 0 view .LVU1282
 4339 0004 0023     		movs	r3, #0
 4340              	.LBE615:
  21:shy_fft.h     ****         // Precompute bit-reversed indices
 4341              		.loc 12 21 10 view .LVU1283
 4342 0006 30B5     		push	{r4, r5, lr}
 4343              		.cfi_def_cfa_offset 12
 4344              		.cfi_offset 4, -12
 4345              		.cfi_offset 5, -8
 4346              		.cfi_offset 14, -4
 4347              	.LVL373:
 4348              	.L287:
 4349              		.loc 12 124 18 is_stmt 1 view .LVU1284
 4350              		.loc 12 124 18 view .LVU1285
 4351              		.loc 12 124 18 view .LVU1286
 4352              		.loc 12 124 18 view .LVU1287
 4353              		.loc 12 124 18 view .LVU1288
 4354              		.loc 12 124 18 view .LVU1289
 4355              		.loc 12 124 18 view .LVU1290
 4356              	.LBB622:
 4357              	.LBB616:
 4358              	.LBB617:
 4359              	.LBB618:
 125:shy_fft.h     ****             n >>= 1;
 126:shy_fft.h     ****             log2n++;
 127:shy_fft.h     ****         }
 128:shy_fft.h     ****         return log2n;
 129:shy_fft.h     ****     }
ARM GAS  /tmp/cch2Dr4w.s 			page 134


 130:shy_fft.h     ****     
 131:shy_fft.h     ****     // Bit-reverse an index
 132:shy_fft.h     ****     size_t BitReverse(size_t index, size_t bits) const {
 133:shy_fft.h     ****         size_t result = 0;
 134:shy_fft.h     ****         for (size_t i = 0; i < bits; i++) {
 4360              		.loc 12 134 30 view .LVU1291
 4361              	.LBE618:
 133:shy_fft.h     ****         for (size_t i = 0; i < bits; i++) {
 4362              		.loc 12 133 16 is_stmt 0 view .LVU1292
 4363 0008 0022     		movs	r2, #0
 4364              	.LBE617:
 4365              	.LBE616:
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4366              		.loc 12 23 21 view .LVU1293
 4367 000a 1C46     		mov	r4, r3
 4368              	.LBB621:
 4369              	.LBB620:
 4370              	.LBB619:
 4371              		.loc 12 134 21 view .LVU1294
 4372 000c 1146     		mov	r1, r2
 4373              	.LVL374:
 4374              	.L286:
 4375              		.loc 12 134 9 view .LVU1295
 4376 000e 0131     		adds	r1, r1, #1
 4377              	.LVL375:
 135:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4378              		.loc 12 135 45 view .LVU1296
 4379 0010 04F00105 		and	r5, r4, #1
 136:shy_fft.h     ****             index >>= 1;
 4380              		.loc 12 136 19 view .LVU1297
 4381 0014 6408     		lsrs	r4, r4, #1
 4382              	.LVL376:
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4383              		.loc 12 134 30 view .LVU1298
 4384 0016 0629     		cmp	r1, #6
 135:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4385              		.loc 12 135 20 view .LVU1299
 4386 0018 45EA4202 		orr	r2, r5, r2, lsl #1
 4387              	.LVL377:
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4388              		.loc 12 134 9 is_stmt 1 view .LVU1300
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4389              		.loc 12 134 30 view .LVU1301
 4390 001c F7D1     		bne	.L286
 4391              	.LVL378:
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4392              		.loc 12 134 30 is_stmt 0 view .LVU1302
 4393              	.LBE619:
 4394              	.LBE620:
 4395              	.LBE621:
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4396              		.loc 12 23 9 view .LVU1303
 4397 001e 0133     		adds	r3, r3, #1
 4398              	.LVL379:
  24:shy_fft.h     ****         }
 4399              		.loc 12 24 29 view .LVU1304
 4400 0020 40F8042B 		str	r2, [r0], #4
ARM GAS  /tmp/cch2Dr4w.s 			page 135


  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4401              		.loc 12 23 9 is_stmt 1 view .LVU1305
 4402              	.LVL380:
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4403              		.loc 12 23 30 view .LVU1306
 4404 0024 402B     		cmp	r3, #64
 4405 0026 EFD1     		bne	.L287
 4406              	.LBE622:
  26:shy_fft.h     ****     
 4407              		.loc 12 26 5 is_stmt 0 view .LVU1307
 4408 0028 30BD     		pop	{r4, r5, pc}
 4409              		.cfi_endproc
 4410              	.LFE5852:
 4412              		.section	.text._ZN6ShyFFTIfLj1024EE4InitEv,"axG",%progbits,_ZN6ShyFFTIfLj1024EE4InitEv,comdat
 4413              		.align	1
 4414              		.weak	_ZN6ShyFFTIfLj1024EE4InitEv
 4415              		.syntax unified
 4416              		.thumb
 4417              		.thumb_func
 4418              		.fpu fpv5-d16
 4420              	_ZN6ShyFFTIfLj1024EE4InitEv:
 4421              	.LVL381:
 4422              	.LFB5853:
  21:shy_fft.h     ****         // Precompute bit-reversed indices
 4423              		.loc 12 21 10 is_stmt 1 view -0
 4424              		.cfi_startproc
 4425              		@ args = 0, pretend = 0, frame = 0
 4426              		@ frame_needed = 0, uses_anonymous_args = 0
 4427              	.LBB629:
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4428              		.loc 12 23 30 view .LVU1309
 4429 0000 00F58050 		add	r0, r0, #4096
 4430              	.LVL382:
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4431              		.loc 12 23 21 is_stmt 0 view .LVU1310
 4432 0004 0023     		movs	r3, #0
 4433              	.LBE629:
  21:shy_fft.h     ****         // Precompute bit-reversed indices
 4434              		.loc 12 21 10 view .LVU1311
 4435 0006 30B5     		push	{r4, r5, lr}
 4436              		.cfi_def_cfa_offset 12
 4437              		.cfi_offset 4, -12
 4438              		.cfi_offset 5, -8
 4439              		.cfi_offset 14, -4
 4440              	.LVL383:
 4441              	.L292:
 4442              	.LBB639:
 4443              	.LBB630:
 4444              	.LBB631:
 124:shy_fft.h     ****             n >>= 1;
 4445              		.loc 12 124 18 is_stmt 1 view .LVU1312
 124:shy_fft.h     ****             n >>= 1;
 4446              		.loc 12 124 18 view .LVU1313
 4447              	.LBE631:
 4448              	.LBE630:
 4449              	.LBB633:
 4450              	.LBB634:
ARM GAS  /tmp/cch2Dr4w.s 			page 136


 133:shy_fft.h     ****         for (size_t i = 0; i < bits; i++) {
 4451              		.loc 12 133 16 is_stmt 0 view .LVU1314
 4452 0008 0022     		movs	r2, #0
 4453              	.LBE634:
 4454              	.LBE633:
 4455              	.LBB637:
 4456              	.LBB632:
 4457 000a 1C46     		mov	r4, r3
 4458              	.LBE632:
 4459              	.LBE637:
 4460              	.LBB638:
 4461              	.LBB636:
 4462              	.LBB635:
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4463              		.loc 12 134 21 view .LVU1315
 4464 000c 1146     		mov	r1, r2
 4465              	.L291:
 4466              	.LVL384:
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4467              		.loc 12 134 9 view .LVU1316
 4468 000e 0131     		adds	r1, r1, #1
 4469              	.LVL385:
 135:shy_fft.h     ****             index >>= 1;
 4470              		.loc 12 135 45 view .LVU1317
 4471 0010 04F00105 		and	r5, r4, #1
 4472              		.loc 12 136 19 view .LVU1318
 4473 0014 6408     		lsrs	r4, r4, #1
 4474              	.LVL386:
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4475              		.loc 12 134 30 view .LVU1319
 4476 0016 0A29     		cmp	r1, #10
 135:shy_fft.h     ****             index >>= 1;
 4477              		.loc 12 135 20 view .LVU1320
 4478 0018 45EA4202 		orr	r2, r5, r2, lsl #1
 4479              	.LVL387:
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4480              		.loc 12 134 9 is_stmt 1 view .LVU1321
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4481              		.loc 12 134 30 view .LVU1322
 4482 001c F7D1     		bne	.L291
 4483              	.LVL388:
 134:shy_fft.h     ****             result = (result << 1) | (index & 1);
 4484              		.loc 12 134 30 is_stmt 0 view .LVU1323
 4485              	.LBE635:
 4486              	.LBE636:
 4487              	.LBE638:
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4488              		.loc 12 23 9 view .LVU1324
 4489 001e 0133     		adds	r3, r3, #1
 4490              	.LVL389:
  24:shy_fft.h     ****         }
 4491              		.loc 12 24 29 view .LVU1325
 4492 0020 40F8042B 		str	r2, [r0], #4
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
 4493              		.loc 12 23 9 is_stmt 1 view .LVU1326
 4494              	.LVL390:
  23:shy_fft.h     ****             bit_reverse_[i] = BitReverse(i, log2N());
ARM GAS  /tmp/cch2Dr4w.s 			page 137


 4495              		.loc 12 23 30 view .LVU1327
 4496 0024 B3F5806F 		cmp	r3, #1024
 4497 0028 EED1     		bne	.L292
 4498              	.LBE639:
  26:shy_fft.h     ****     
 4499              		.loc 12 26 5 is_stmt 0 view .LVU1328
 4500 002a 30BD     		pop	{r4, r5, pc}
 4501              		.cfi_endproc
 4502              	.LFE5853:
 4504              		.section	.text._ZN28PartitionedConvolutionReverb4InitEf,"axG",%progbits,_ZN28PartitionedConvolutio
 4505              		.align	1
 4506              		.weak	_ZN28PartitionedConvolutionReverb4InitEf
 4507              		.syntax unified
 4508              		.thumb
 4509              		.thumb_func
 4510              		.fpu fpv5-d16
 4512              	_ZN28PartitionedConvolutionReverb4InitEf:
 4513              	.LVL391:
 4514              	.LFB5508:
 230:EchoBridgeWithUSB.cpp ****         sampleRate = sample_rate;
 4515              		.loc 2 230 10 is_stmt 1 view -0
 4516              		.cfi_startproc
 4517              		@ args = 0, pretend = 0, frame = 0
 4518              		@ frame_needed = 0, uses_anonymous_args = 0
 231:EchoBridgeWithUSB.cpp ****         
 4519              		.loc 2 231 9 view .LVU1330
 230:EchoBridgeWithUSB.cpp ****         sampleRate = sample_rate;
 4520              		.loc 2 230 10 is_stmt 0 view .LVU1331
 4521 0000 38B5     		push	{r3, r4, r5, lr}
 4522              		.cfi_def_cfa_offset 16
 4523              		.cfi_offset 3, -16
 4524              		.cfi_offset 4, -12
 4525              		.cfi_offset 5, -8
 4526              		.cfi_offset 14, -4
 231:EchoBridgeWithUSB.cpp ****         
 4527              		.loc 2 231 20 view .LVU1332
 4528 0002 00F54055 		add	r5, r0, #12288
 230:EchoBridgeWithUSB.cpp ****         sampleRate = sample_rate;
 4529              		.loc 2 230 10 view .LVU1333
 4530 0006 0446     		mov	r4, r0
 234:EchoBridgeWithUSB.cpp ****         lateFft.Init();
 4531              		.loc 2 234 22 view .LVU1334
 4532 0008 0C30     		adds	r0, r0, #12
 4533              	.LVL392:
 231:EchoBridgeWithUSB.cpp ****         
 4534              		.loc 2 231 20 view .LVU1335
 4535 000a 85ED8D0A 		vstr.32	s0, [r5, #564]
 234:EchoBridgeWithUSB.cpp ****         lateFft.Init();
 4536              		.loc 2 234 9 is_stmt 1 view .LVU1336
 234:EchoBridgeWithUSB.cpp ****         lateFft.Init();
 4537              		.loc 2 234 22 is_stmt 0 view .LVU1337
 4538 000e FFF7FEFF 		bl	_ZN6ShyFFTIfLj64EE4InitEv
 4539              	.LVL393:
 235:EchoBridgeWithUSB.cpp ****         
 4540              		.loc 2 235 9 is_stmt 1 view .LVU1338
 235:EchoBridgeWithUSB.cpp ****         
 4541              		.loc 2 235 21 is_stmt 0 view .LVU1339
ARM GAS  /tmp/cch2Dr4w.s 			page 138


 4542 0012 04F50370 		add	r0, r4, #524
 4543 0016 FFF7FEFF 		bl	_ZN6ShyFFTIfLj1024EE4InitEv
 4544              	.LVL394:
 238:EchoBridgeWithUSB.cpp ****         memset(earlyInputBufferRight, 0, sizeof(earlyInputBufferRight));
 4545              		.loc 2 238 9 is_stmt 1 view .LVU1340
 238:EchoBridgeWithUSB.cpp ****         memset(earlyInputBufferRight, 0, sizeof(earlyInputBufferRight));
 4546              		.loc 2 238 15 is_stmt 0 view .LVU1341
 4547 001a 04F53050 		add	r0, r4, #11264
 4548 001e 4FF48072 		mov	r2, #256
 4549 0022 0021     		movs	r1, #0
 4550 0024 0C30     		adds	r0, r0, #12
 4551 0026 FFF7FEFF 		bl	memset
 4552              	.LVL395:
 239:EchoBridgeWithUSB.cpp ****         memset(earlyOutputBuffer, 0, sizeof(earlyOutputBuffer));
 4553              		.loc 2 239 9 is_stmt 1 view .LVU1342
 239:EchoBridgeWithUSB.cpp ****         memset(earlyOutputBuffer, 0, sizeof(earlyOutputBuffer));
 4554              		.loc 2 239 15 is_stmt 0 view .LVU1343
 4555 002a 04F53450 		add	r0, r4, #11520
 4556 002e 4FF48072 		mov	r2, #256
 4557 0032 0021     		movs	r1, #0
 4558 0034 0C30     		adds	r0, r0, #12
 4559 0036 FFF7FEFF 		bl	memset
 4560              	.LVL396:
 240:EchoBridgeWithUSB.cpp ****         memset(earlyOutputBufferRight, 0, sizeof(earlyOutputBufferRight));
 4561              		.loc 2 240 9 is_stmt 1 view .LVU1344
 240:EchoBridgeWithUSB.cpp ****         memset(earlyOutputBufferRight, 0, sizeof(earlyOutputBufferRight));
 4562              		.loc 2 240 15 is_stmt 0 view .LVU1345
 4563 003a 04F53850 		add	r0, r4, #11776
 4564 003e 4FF40072 		mov	r2, #512
 4565 0042 0021     		movs	r1, #0
 4566 0044 0C30     		adds	r0, r0, #12
 4567 0046 FFF7FEFF 		bl	memset
 4568              	.LVL397:
 241:EchoBridgeWithUSB.cpp ****         
 4569              		.loc 2 241 9 is_stmt 1 view .LVU1346
 241:EchoBridgeWithUSB.cpp ****         
 4570              		.loc 2 241 15 is_stmt 0 view .LVU1347
 4571 004a 2846     		mov	r0, r5
 4572 004c 4FF40072 		mov	r2, #512
 4573 0050 0021     		movs	r1, #0
 4574 0052 0C30     		adds	r0, r0, #12
 4575 0054 FFF7FEFF 		bl	memset
 4576              	.LVL398:
 243:EchoBridgeWithUSB.cpp ****         memset(g_lateInputBufferRight, 0, sizeof(g_lateInputBufferRight));
 4577              		.loc 2 243 9 is_stmt 1 view .LVU1348
 243:EchoBridgeWithUSB.cpp ****         memset(g_lateInputBufferRight, 0, sizeof(g_lateInputBufferRight));
 4578              		.loc 2 243 15 is_stmt 0 view .LVU1349
 4579 0058 4FF48052 		mov	r2, #4096
 4580 005c 0021     		movs	r1, #0
 4581 005e 1F48     		ldr	r0, .L296
 4582 0060 FFF7FEFF 		bl	memset
 4583              	.LVL399:
 244:EchoBridgeWithUSB.cpp ****         memset(g_lateOutputBuffer, 0, sizeof(g_lateOutputBuffer));
 4584              		.loc 2 244 9 is_stmt 1 view .LVU1350
 244:EchoBridgeWithUSB.cpp ****         memset(g_lateOutputBuffer, 0, sizeof(g_lateOutputBuffer));
 4585              		.loc 2 244 15 is_stmt 0 view .LVU1351
 4586 0064 4FF48052 		mov	r2, #4096
ARM GAS  /tmp/cch2Dr4w.s 			page 139


 4587 0068 0021     		movs	r1, #0
 4588 006a 1D48     		ldr	r0, .L296+4
 4589 006c FFF7FEFF 		bl	memset
 4590              	.LVL400:
 245:EchoBridgeWithUSB.cpp ****         memset(g_lateOutputBufferRight, 0, sizeof(g_lateOutputBufferRight));
 4591              		.loc 2 245 9 is_stmt 1 view .LVU1352
 245:EchoBridgeWithUSB.cpp ****         memset(g_lateOutputBufferRight, 0, sizeof(g_lateOutputBufferRight));
 4592              		.loc 2 245 15 is_stmt 0 view .LVU1353
 4593 0070 4FF40052 		mov	r2, #8192
 4594 0074 0021     		movs	r1, #0
 4595 0076 1B48     		ldr	r0, .L296+8
 4596 0078 FFF7FEFF 		bl	memset
 4597              	.LVL401:
 246:EchoBridgeWithUSB.cpp ****         
 4598              		.loc 2 246 9 is_stmt 1 view .LVU1354
 246:EchoBridgeWithUSB.cpp ****         
 4599              		.loc 2 246 15 is_stmt 0 view .LVU1355
 4600 007c 4FF40052 		mov	r2, #8192
 4601 0080 0021     		movs	r1, #0
 4602 0082 1948     		ldr	r0, .L296+12
 4603 0084 FFF7FEFF 		bl	memset
 4604              	.LVL402:
 248:EchoBridgeWithUSB.cpp ****         memset(g_predelayBufferRight, 0, sizeof(g_predelayBufferRight));
 4605              		.loc 2 248 9 is_stmt 1 view .LVU1356
 248:EchoBridgeWithUSB.cpp ****         memset(g_predelayBufferRight, 0, sizeof(g_predelayBufferRight));
 4606              		.loc 2 248 15 is_stmt 0 view .LVU1357
 4607 0088 184A     		ldr	r2, .L296+16
 4608 008a 0021     		movs	r1, #0
 4609 008c 1848     		ldr	r0, .L296+20
 4610 008e FFF7FEFF 		bl	memset
 4611              	.LVL403:
 249:EchoBridgeWithUSB.cpp ****         
 4612              		.loc 2 249 9 is_stmt 1 view .LVU1358
 249:EchoBridgeWithUSB.cpp ****         
 4613              		.loc 2 249 15 is_stmt 0 view .LVU1359
 4614 0092 164A     		ldr	r2, .L296+16
 4615 0094 0021     		movs	r1, #0
 4616 0096 1748     		ldr	r0, .L296+24
 4617 0098 FFF7FEFF 		bl	memset
 4618              	.LVL404:
 252:EchoBridgeWithUSB.cpp ****         highCutFilterL.Init(sampleRate);
 4619              		.loc 2 252 9 is_stmt 1 view .LVU1360
 252:EchoBridgeWithUSB.cpp ****         highCutFilterL.Init(sampleRate);
 4620              		.loc 2 252 27 is_stmt 0 view .LVU1361
 4621 009c 04F54850 		add	r0, r4, #12800
 4622 00a0 95ED8D0A 		vldr.32	s0, [r5, #564]
 4623 00a4 3C30     		adds	r0, r0, #60
 4624 00a6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 4625              	.LVL405:
 253:EchoBridgeWithUSB.cpp ****         lowCutFilterR.Init(sampleRate);
 4626              		.loc 2 253 9 is_stmt 1 view .LVU1362
 253:EchoBridgeWithUSB.cpp ****         lowCutFilterR.Init(sampleRate);
 4627              		.loc 2 253 28 is_stmt 0 view .LVU1363
 4628 00aa 04F54A50 		add	r0, r4, #12928
 4629 00ae 95ED8D0A 		vldr.32	s0, [r5, #564]
 4630 00b2 0830     		adds	r0, r0, #8
 4631 00b4 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
ARM GAS  /tmp/cch2Dr4w.s 			page 140


 4632              	.LVL406:
 254:EchoBridgeWithUSB.cpp ****         highCutFilterR.Init(sampleRate);
 4633              		.loc 2 254 9 is_stmt 1 view .LVU1364
 254:EchoBridgeWithUSB.cpp ****         highCutFilterR.Init(sampleRate);
 4634              		.loc 2 254 27 is_stmt 0 view .LVU1365
 4635 00b8 04F54B50 		add	r0, r4, #12992
 4636 00bc 95ED8D0A 		vldr.32	s0, [r5, #564]
 4637 00c0 1430     		adds	r0, r0, #20
 4638 00c2 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 4639              	.LVL407:
 255:EchoBridgeWithUSB.cpp ****         
 4640              		.loc 2 255 9 is_stmt 1 view .LVU1366
 255:EchoBridgeWithUSB.cpp ****         
 4641              		.loc 2 255 28 is_stmt 0 view .LVU1367
 4642 00c6 04F54C50 		add	r0, r4, #13056
 4643 00ca 95ED8D0A 		vldr.32	s0, [r5, #564]
 4644 00ce 2030     		adds	r0, r0, #32
 4645 00d0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 4646              	.LVL408:
 258:EchoBridgeWithUSB.cpp ****     }
 4647              		.loc 2 258 9 is_stmt 1 view .LVU1368
 258:EchoBridgeWithUSB.cpp ****     }
 4648              		.loc 2 258 22 is_stmt 0 view .LVU1369
 4649 00d4 2046     		mov	r0, r4
 4650 00d6 FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb13UpdateFiltersEv
 4651              	.LVL409:
 259:EchoBridgeWithUSB.cpp ****     
 4652              		.loc 2 259 5 view .LVU1370
 4653 00da 38BD     		pop	{r3, r4, r5, pc}
 4654              	.LVL410:
 4655              	.L297:
 259:EchoBridgeWithUSB.cpp ****     
 4656              		.loc 2 259 5 view .LVU1371
 4657              		.align	2
 4658              	.L296:
 4659 00dc 00000000 		.word	g_lateInputBuffer
 4660 00e0 00000000 		.word	g_lateInputBufferRight
 4661 00e4 00000000 		.word	g_lateOutputBuffer
 4662 00e8 00000000 		.word	g_lateOutputBufferRight
 4663 00ec 00770100 		.word	96000
 4664 00f0 00000000 		.word	g_predelayBuffer
 4665 00f4 00000000 		.word	g_predelayBufferRight
 4666              		.cfi_endproc
 4667              	.LFE5508:
 4669              		.section	.rodata.main.str1.1,"aMS",%progbits,1
 4670              	.LC7:
 4671 0000 00       		.ascii	"\000"
 4672              		.section	.text.startup.main,"ax",%progbits
 4673              		.align	1
 4674              		.global	main
 4675              		.syntax unified
 4676              		.thumb
 4677              		.thumb_func
 4678              		.fpu fpv5-d16
 4680              	main:
 4681              	.LFB5531:
 738:EchoBridgeWithUSB.cpp **** 
ARM GAS  /tmp/cch2Dr4w.s 			page 141


 739:EchoBridgeWithUSB.cpp **** // Main function
 740:EchoBridgeWithUSB.cpp **** int main(void) {
 4682              		.loc 2 740 16 is_stmt 1 view -0
 4683              		.cfi_startproc
 4684              		@ Volatile: function does not return.
 4685              		@ args = 0, pretend = 0, frame = 32
 4686              		@ frame_needed = 0, uses_anonymous_args = 0
 741:EchoBridgeWithUSB.cpp ****     // Initialize hardware
 742:EchoBridgeWithUSB.cpp ****     hw.Init();
 4687              		.loc 2 742 5 view .LVU1373
 740:EchoBridgeWithUSB.cpp ****     // Initialize hardware
 4688              		.loc 2 740 16 is_stmt 0 view .LVU1374
 4689 0000 00B5     		push	{lr}
 4690              		.cfi_def_cfa_offset 4
 4691              		.cfi_offset 14, -4
 4692              		.loc 2 742 12 view .LVU1375
 4693 0002 4948     		ldr	r0, .L307
 740:EchoBridgeWithUSB.cpp ****     // Initialize hardware
 4694              		.loc 2 740 16 view .LVU1376
 4695 0004 8BB0     		sub	sp, sp, #44
 4696              		.cfi_def_cfa_offset 48
 4697              		.loc 2 742 12 view .LVU1377
 4698 0006 FFF7FEFF 		bl	_ZN16clevelandmusicco8Hothouse4InitEv
 4699              	.LVL411:
 743:EchoBridgeWithUSB.cpp ****     
 744:EchoBridgeWithUSB.cpp ****     // Initialize LEDs - Hothouse pedal only has two LEDs
 745:EchoBridgeWithUSB.cpp ****     led1.Init(hw.seed.GetPin(hw.LED_1), false);  // LED 1 - Used for freeze status and temporarily 
 4700              		.loc 2 745 5 is_stmt 1 view .LVU1378
 4701              		.loc 2 745 14 is_stmt 0 view .LVU1379
 4702 000a 0A20     		movs	r0, #10
 4703 000c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 4704              	.LVL412:
 4705 0010 ADF80C00 		strh	r0, [sp, #12]	@ movhi
 4706 0014 9FED450A 		vldr.32	s0, .L307+4
 4707 0018 0022     		movs	r2, #0
 4708 001a 0399     		ldr	r1, [sp, #12]
 746:EchoBridgeWithUSB.cpp ****     led2.Init(hw.seed.GetPin(hw.LED_2), false);  // LED 2 - Used for bypass status
 747:EchoBridgeWithUSB.cpp ****     
 748:EchoBridgeWithUSB.cpp ****     // Set initial LED states
 749:EchoBridgeWithUSB.cpp ****     led2.Set(bypass ? 0.0f : 1.0f);  // LED 2 for bypass status
 4709              		.loc 2 749 13 view .LVU1380
 4710 001c F7EE008A 		vmov.f32	s17, #1.0e+0
 745:EchoBridgeWithUSB.cpp ****     led2.Init(hw.seed.GetPin(hw.LED_2), false);  // LED 2 - Used for bypass status
 4711              		.loc 2 745 14 view .LVU1381
 4712 0020 4348     		ldr	r0, .L307+8
 4713 0022 FFF7FEFF 		bl	_ZN5daisy3Led4InitE12dsy_gpio_pinbf
 4714              	.LVL413:
 746:EchoBridgeWithUSB.cpp ****     led2.Init(hw.seed.GetPin(hw.LED_2), false);  // LED 2 - Used for bypass status
 4715              		.loc 2 746 5 is_stmt 1 view .LVU1382
 746:EchoBridgeWithUSB.cpp ****     led2.Init(hw.seed.GetPin(hw.LED_2), false);  // LED 2 - Used for bypass status
 4716              		.loc 2 746 14 is_stmt 0 view .LVU1383
 4717 0026 0B20     		movs	r0, #11
 4718 0028 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 4719              	.LVL414:
 4720 002c ADF81000 		strh	r0, [sp, #16]	@ movhi
 4721 0030 0022     		movs	r2, #0
 4722 0032 0499     		ldr	r1, [sp, #16]
ARM GAS  /tmp/cch2Dr4w.s 			page 142


 4723 0034 9FED3D0A 		vldr.32	s0, .L307+4
 4724 0038 3E48     		ldr	r0, .L307+12
 4725 003a FFF7FEFF 		bl	_ZN5daisy3Led4InitE12dsy_gpio_pinbf
 4726              	.LVL415:
 4727              		.loc 2 749 5 is_stmt 1 view .LVU1384
 4728              		.loc 2 749 13 is_stmt 0 view .LVU1385
 4729 003e 3E4B     		ldr	r3, .L307+16
 4730 0040 9FED3E8A 		vldr.32	s16, .L307+20
 4731 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4732 0046 3B48     		ldr	r0, .L307+12
 4733 0048 002B     		cmp	r3, #0
 4734              	.LBB676:
 4735              	.LBB677:
  19:IRLoader.h    ****         usbh_->Init(USBHostHandle::Config());
 4736              		.loc 10 19 15 view .LVU1386
 4737 004a 3D4D     		ldr	r5, .L307+24
 4738              	.LBE677:
 4739              	.LBE676:
 4740              		.loc 2 749 13 view .LVU1387
 4741 004c 08FE880A 		vseleq.f32	s0, s17, s16
 4742 0050 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 4743              	.LVL416:
 750:EchoBridgeWithUSB.cpp ****     led1.Set(freeze ? 1.0f : 0.0f);  // LED 1 for freeze status
 4744              		.loc 2 750 5 is_stmt 1 view .LVU1388
 4745              		.loc 2 750 13 is_stmt 0 view .LVU1389
 4746 0054 3B4B     		ldr	r3, .L307+28
 4747 0056 3648     		ldr	r0, .L307+8
 4748 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4749 005a 002B     		cmp	r3, #0
 4750 005c 08FE280A 		vseleq.f32	s0, s16, s17
 4751 0060 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 4752              	.LVL417:
 751:EchoBridgeWithUSB.cpp ****     
 752:EchoBridgeWithUSB.cpp ****     // Initialize USB host for IR loading
 753:EchoBridgeWithUSB.cpp ****     irLoader.Init();
 4753              		.loc 2 753 5 is_stmt 1 view .LVU1390
 4754              	.LBB688:
 4755              	.LBI676:
  17:IRLoader.h    ****         // Initialize USB host
 4756              		.loc 10 17 10 view .LVU1391
 4757              	.LBB686:
  19:IRLoader.h    ****         usbh_->Init(USBHostHandle::Config());
 4758              		.loc 10 19 9 view .LVU1392
  19:IRLoader.h    ****         usbh_->Init(USBHostHandle::Config());
 4759              		.loc 10 19 35 is_stmt 0 view .LVU1393
 4760 0064 0420     		movs	r0, #4
 4761 0066 FFF7FEFF 		bl	_Znwj
 4762              	.LVL418:
 4763              	.LBB678:
 4764              	.LBB679:
 4765              		.file 13 "/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** #ifndef DSY_MSD
   2:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** #define DSY_MSD
   3:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
   4:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** #include <cstdint>
   5:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
   6:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** namespace daisy
ARM GAS  /tmp/cch2Dr4w.s 			page 143


   7:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** {
   8:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** /** Status of USB Host application
   9:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****  * 
  10:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****  */
  11:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** typedef enum
  12:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** {
  13:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     APPLICATION_IDLE = 0,
  14:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     APPLICATION_START,
  15:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     APPLICATION_READY,
  16:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     APPLICATION_DISCONNECT
  17:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** } ApplicationTypeDef;
  18:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  19:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** /** 
  20:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****    @author Gabriel Ball
  21:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****    @date September 16, 2021
  22:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  23:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****    @brief Presents a USB Mass Storage Device host interface
  24:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** */
  25:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** class USBHostHandle
  26:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** {
  27:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****   public:
  28:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** @brief return codes from the USB Processing 
  29:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  can be used to check the state of USB while running
  30:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  outside of what may be happening with the limited user callbacks.
  31:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      * 
  32:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  At this time, these correlate directly to the ST Middleware
  33:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  USBH_StatusTypeDef codes
  34:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      */
  35:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     enum class Result
  36:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     {
  37:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         OK,
  38:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         BUSY,
  39:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         FAIL,
  40:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         NOT_SUPPORTED,
  41:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         UNRECOVERED_ERROR,
  42:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         ERROR_SPEED_UNKNOWN,
  43:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     };
  44:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  45:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** @brief User defineable callback for USB Connection */
  46:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     typedef void (*ConnectCallback)(void* data);
  47:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  48:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** @brief User defineable callback for USB Disconnection */
  49:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     typedef void (*DisconnectCallback)(void* data);
  50:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  51:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** @brief User defineable callback upon completion of class initialization 
  52:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  For example, when a USB drive is connected and the mass storage class 
  53:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  initialization has finished, this callback will fire.
  54:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      * 
  55:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  @param userdata a pointer to some arbitrary data for use by the user.
  56:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *   this is supplied in the Config struct. Can be used to avoid globals.
  57:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      * 
  58:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  @todo At some point this may be replaced for individual callbacks
  59:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *   for each supported USB Host class.
  60:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      */
  61:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     typedef void (*ClassActiveCallback)(void* userdata);
  62:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  63:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** @brief User defineable callback for USB Unrecoverable Error 
ARM GAS  /tmp/cch2Dr4w.s 			page 144


  64:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  @todo add some sort of feedback about the type of error, etc.
  65:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *   if possible
  66:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     */
  67:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     typedef void (*ErrorCallback)(void* data);
  68:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  69:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** @brief Configuration structure for interfacing with MSD Driver */
  70:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     struct Config
  71:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     {
  72:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         Config()
  73:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         : connect_callback(nullptr),
  74:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****           disconnect_callback(nullptr),
  75:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****           class_active_callback(nullptr),
  76:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****           error_callback(nullptr),
  77:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****           userdata(nullptr)
  78:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         {
  79:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         }
  80:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         ConnectCallback     connect_callback;
  81:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         DisconnectCallback  disconnect_callback;
  82:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         ClassActiveCallback class_active_callback;
  83:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         ErrorCallback       error_callback;
  84:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         void*               userdata;
  85:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     };
  86:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  87:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** Initializes the USB drivers and starts timeout.
  88:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      * 
  89:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  \param config Configuration struct for initialization
  90:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      */
  91:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     Result Init(Config config);
  92:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  93:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** Deinitializes MSD-related peripherals
  94:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      * 
  95:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      */
  96:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     Result Deinit();
  97:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
  98:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** Manages usb host functionality
  99:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      * 
 100:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      */
 101:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     Result Process();
 102:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
 103:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** Forces USB host to re-enumerate device */
 104:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     Result ReEnumerate();
 105:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
 106:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** Returns true if a Mass Storage Device is connected
 107:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  and ready for communicaton
 108:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      * 
 109:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      */
 110:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     bool GetReady();
 111:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
 112:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     /** Run after the first `Process` call to detect if
 113:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      *  a device is present
 114:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      * 
 115:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****      */
 116:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     bool GetPresent();
 117:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h **** 
 118:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****     USBHostHandle() : pimpl_(nullptr) {}
 4766              		.loc 13 118 37 view .LVU1394
 4767 006a 0023     		movs	r3, #0
ARM GAS  /tmp/cch2Dr4w.s 			page 145


 4768              	.LBE679:
 4769              	.LBE678:
  19:IRLoader.h    ****         usbh_->Init(USBHostHandle::Config());
 4770              		.loc 10 19 35 view .LVU1395
 4771 006c 0446     		mov	r4, r0
 4772              	.LVL419:
 4773              	.LBB681:
 4774              	.LBI678:
 4775              		.loc 13 118 5 is_stmt 1 view .LVU1396
 4776              	.LBE681:
  19:IRLoader.h    ****         usbh_->Init(USBHostHandle::Config());
 4777              		.loc 10 19 15 is_stmt 0 view .LVU1397
 4778 006e 2860     		str	r0, [r5]
 4779              	.LBB682:
 4780              	.LBB680:
 4781              		.loc 13 118 37 view .LVU1398
 4782 0070 0360     		str	r3, [r0]
 4783              	.LVL420:
 4784              		.loc 13 118 37 view .LVU1399
 4785              	.LBE680:
 4786              	.LBE682:
  20:IRLoader.h    ****     }
 4787              		.loc 10 20 9 is_stmt 1 view .LVU1400
 4788              	.LBB683:
 4789              	.LBI683:
  72:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         : connect_callback(nullptr),
 4790              		.loc 13 72 9 view .LVU1401
 4791              	.LBB684:
 4792              	.LBB685:
  77:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         {
 4793              		.loc 13 77 27 is_stmt 0 view .LVU1402
 4794 0072 0993     		str	r3, [sp, #36]
 4795              	.LVL421:
  77:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb_host.h ****         {
 4796              		.loc 13 77 27 view .LVU1403
 4797 0074 CDE90733 		strd	r3, r3, [sp, #28]
 4798 0078 CDE90533 		strd	r3, r3, [sp, #20]
 4799              	.LBE685:
 4800              	.LBE684:
 4801              	.LBE683:
  20:IRLoader.h    ****     }
 4802              		.loc 10 20 20 view .LVU1404
 4803 007c 0AAB     		add	r3, sp, #40
 4804 007e 13E90300 		ldmdb	r3, {r0, r1}
 4805 0082 05AB     		add	r3, sp, #20
 4806 0084 8DE80300 		stm	sp, {r0, r1}
 4807 0088 2046     		mov	r0, r4
 4808              	.LBE686:
 4809              	.LBE688:
 4810              	.LBB689:
 4811              	.LBB690:
 157:hothouse.h    ****     }
 4812              		.loc 3 157 36 view .LVU1405
 4813 008a 274C     		ldr	r4, .L307
 4814              	.LBE690:
 4815              	.LBE689:
 4816              	.LBB693:
ARM GAS  /tmp/cch2Dr4w.s 			page 146


 4817              	.LBB687:
  20:IRLoader.h    ****     }
 4818              		.loc 10 20 20 view .LVU1406
 4819 008c 0ECB     		ldm	r3, {r1, r2, r3}
 4820 008e FFF7FEFF 		bl	_ZN5daisy13USBHostHandle4InitENS0_6ConfigE
 4821              	.LVL422:
  20:IRLoader.h    ****     }
 4822              		.loc 10 20 20 view .LVU1407
 4823              	.LBE687:
 4824              	.LBE693:
 754:EchoBridgeWithUSB.cpp ****     IRLoader::LoadIRCallback = LoadIRCallback;
 4825              		.loc 2 754 5 is_stmt 1 view .LVU1408
 4826              		.loc 2 754 30 is_stmt 0 view .LVU1409
 4827 0092 2D4B     		ldr	r3, .L307+32
 4828 0094 2D4A     		ldr	r2, .L307+36
 4829              	.LBB694:
 4830              	.LBB691:
 157:hothouse.h    ****     }
 4831              		.loc 3 157 36 view .LVU1410
 4832 0096 2046     		mov	r0, r4
 4833              	.LBE691:
 4834              	.LBE694:
 4835              		.loc 2 754 30 view .LVU1411
 4836 0098 1A60     		str	r2, [r3]
 755:EchoBridgeWithUSB.cpp ****     
 756:EchoBridgeWithUSB.cpp ****     // Initialize reverb
 757:EchoBridgeWithUSB.cpp ****     reverb.Init(hw.AudioSampleRate());
 4837              		.loc 2 757 5 is_stmt 1 view .LVU1412
 4838              	.LVL423:
 4839              	.LBB695:
 4840              	.LBI689:
 156:hothouse.h    ****         return seed.AudioSampleRate();
 4841              		.loc 3 156 11 view .LVU1413
 4842              	.LBB692:
 157:hothouse.h    ****     }
 4843              		.loc 3 157 9 view .LVU1414
 157:hothouse.h    ****     }
 4844              		.loc 3 157 36 is_stmt 0 view .LVU1415
 4845 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 4846              	.LVL424:
 157:hothouse.h    ****     }
 4847              		.loc 3 157 36 view .LVU1416
 4848              	.LBE692:
 4849              	.LBE695:
 4850              		.loc 2 757 16 view .LVU1417
 4851 009e 2C48     		ldr	r0, .L307+40
 4852 00a0 FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb4InitEf
 4853              	.LVL425:
 758:EchoBridgeWithUSB.cpp ****     
 759:EchoBridgeWithUSB.cpp ****     // Set up audio callback
 760:EchoBridgeWithUSB.cpp ****     hw.StartAudio(AudioCallback);
 4854              		.loc 2 760 5 is_stmt 1 view .LVU1418
 4855              	.LBB696:
 4856              	.LBI696:
 151:hothouse.h    ****         seed.StartAudio(cb);
 4857              		.loc 3 151 10 view .LVU1419
 4858              	.LBB697:
ARM GAS  /tmp/cch2Dr4w.s 			page 147


 152:hothouse.h    ****     }
 4859              		.loc 3 152 9 view .LVU1420
 152:hothouse.h    ****     }
 4860              		.loc 3 152 24 is_stmt 0 view .LVU1421
 4861 00a4 2B49     		ldr	r1, .L307+44
 4862 00a6 2046     		mov	r0, r4
 4863 00a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 4864              	.LVL426:
 152:hothouse.h    ****     }
 4865              		.loc 3 152 24 view .LVU1422
 4866              	.LBE697:
 4867              	.LBE696:
 761:EchoBridgeWithUSB.cpp ****     
 762:EchoBridgeWithUSB.cpp ****     // Set up footswitch callbacks
 763:EchoBridgeWithUSB.cpp ****     hw.SetFootswitchCallback(0, HandleFootswitch1);
 4868              		.loc 2 763 5 is_stmt 1 view .LVU1423
 4869              	.LBB698:
 4870              	.LBI698:
 167:hothouse.h    ****         if (footswitch >= 0 && footswitch < 2) {
 4871              		.loc 3 167 10 view .LVU1424
 4872              	.LBB699:
 168:hothouse.h    ****             footswitchCallbacks_[footswitch] = callback;
 4873              		.loc 3 168 9 view .LVU1425
 169:hothouse.h    ****         }
 4874              		.loc 3 169 13 view .LVU1426
 169:hothouse.h    ****         }
 4875              		.loc 3 169 46 is_stmt 0 view .LVU1427
 4876 00ac 2A4B     		ldr	r3, .L307+48
 4877 00ae C4F8F030 		str	r3, [r4, #240]
 4878              	.LVL427:
 169:hothouse.h    ****         }
 4879              		.loc 3 169 46 view .LVU1428
 4880              	.LBE699:
 4881              	.LBE698:
 764:EchoBridgeWithUSB.cpp ****     hw.SetFootswitchCallback(1, HandleFootswitch2);
 4882              		.loc 2 764 5 is_stmt 1 view .LVU1429
 4883              	.LBB700:
 4884              	.LBI700:
 167:hothouse.h    ****         if (footswitch >= 0 && footswitch < 2) {
 4885              		.loc 3 167 10 view .LVU1430
 4886              	.LBB701:
 168:hothouse.h    ****             footswitchCallbacks_[footswitch] = callback;
 4887              		.loc 3 168 9 view .LVU1431
 169:hothouse.h    ****         }
 4888              		.loc 3 169 13 view .LVU1432
 169:hothouse.h    ****         }
 4889              		.loc 3 169 46 is_stmt 0 view .LVU1433
 4890 00b2 2A4B     		ldr	r3, .L307+52
 4891 00b4 C4F8F430 		str	r3, [r4, #244]
 4892              	.LVL428:
 169:hothouse.h    ****         }
 4893              		.loc 3 169 46 view .LVU1434
 4894              	.LBE701:
 4895              	.LBE700:
 765:EchoBridgeWithUSB.cpp ****     hw.SetFootswitchLongPressCallback(0, HandleFootswitch1LongPress);
 4896              		.loc 2 765 5 is_stmt 1 view .LVU1435
 4897              	.LBB702:
ARM GAS  /tmp/cch2Dr4w.s 			page 148


 4898              	.LBI702:
 173:hothouse.h    ****         if (footswitch >= 0 && footswitch < 2) {
 4899              		.loc 3 173 10 view .LVU1436
 4900              	.LBB703:
 174:hothouse.h    ****             footswitchLongPressCallbacks_[footswitch] = callback;
 4901              		.loc 3 174 9 view .LVU1437
 175:hothouse.h    ****         }
 4902              		.loc 3 175 13 view .LVU1438
 175:hothouse.h    ****         }
 4903              		.loc 3 175 55 is_stmt 0 view .LVU1439
 4904 00b8 294B     		ldr	r3, .L307+56
 4905 00ba C4F8F830 		str	r3, [r4, #248]
 4906              	.LVL429:
 175:hothouse.h    ****         }
 4907              		.loc 3 175 55 view .LVU1440
 4908              	.LBE703:
 4909              	.LBE702:
 766:EchoBridgeWithUSB.cpp ****     hw.SetFootswitchLongPressCallback(1, HandleFootswitch2LongPress);
 4910              		.loc 2 766 5 is_stmt 1 view .LVU1441
 4911              	.LBB704:
 4912              	.LBI704:
 173:hothouse.h    ****         if (footswitch >= 0 && footswitch < 2) {
 4913              		.loc 3 173 10 view .LVU1442
 4914              	.LBB705:
 174:hothouse.h    ****             footswitchLongPressCallbacks_[footswitch] = callback;
 4915              		.loc 3 174 9 view .LVU1443
 175:hothouse.h    ****         }
 4916              		.loc 3 175 13 view .LVU1444
 175:hothouse.h    ****         }
 4917              		.loc 3 175 55 is_stmt 0 view .LVU1445
 4918 00be 294B     		ldr	r3, .L307+60
 4919 00c0 C4F8FC30 		str	r3, [r4, #252]
 4920              	.LVL430:
 175:hothouse.h    ****         }
 4921              		.loc 3 175 55 view .LVU1446
 4922              	.LBE705:
 4923              	.LBE704:
 767:EchoBridgeWithUSB.cpp ****     
 768:EchoBridgeWithUSB.cpp ****     // Set up knob callbacks
 769:EchoBridgeWithUSB.cpp ****     hw.SetKnobCallback(0, HandleKnob1);
 4924              		.loc 2 769 5 is_stmt 1 view .LVU1447
 4925              	.LBB706:
 4926              	.LBI706:
 161:hothouse.h    ****         if (knob >= 0 && knob < 6) {
 4927              		.loc 3 161 10 view .LVU1448
 4928              	.LBB707:
 162:hothouse.h    ****             knobCallbacks_[knob] = callback;
 4929              		.loc 3 162 9 view .LVU1449
 163:hothouse.h    ****         }
 4930              		.loc 3 163 13 view .LVU1450
 163:hothouse.h    ****         }
 4931              		.loc 3 163 34 is_stmt 0 view .LVU1451
 4932 00c4 284B     		ldr	r3, .L307+64
 4933 00c6 C4F8D830 		str	r3, [r4, #216]
 4934              	.LVL431:
 163:hothouse.h    ****         }
 4935              		.loc 3 163 34 view .LVU1452
ARM GAS  /tmp/cch2Dr4w.s 			page 149


 4936              	.LBE707:
 4937              	.LBE706:
 770:EchoBridgeWithUSB.cpp ****     hw.SetKnobCallback(1, HandleKnob2);
 4938              		.loc 2 770 5 is_stmt 1 view .LVU1453
 4939              	.LBB708:
 4940              	.LBI708:
 161:hothouse.h    ****         if (knob >= 0 && knob < 6) {
 4941              		.loc 3 161 10 view .LVU1454
 4942              	.LBB709:
 162:hothouse.h    ****             knobCallbacks_[knob] = callback;
 4943              		.loc 3 162 9 view .LVU1455
 163:hothouse.h    ****         }
 4944              		.loc 3 163 13 view .LVU1456
 163:hothouse.h    ****         }
 4945              		.loc 3 163 34 is_stmt 0 view .LVU1457
 4946 00ca 284B     		ldr	r3, .L307+68
 4947 00cc C4F8DC30 		str	r3, [r4, #220]
 4948              	.LVL432:
 163:hothouse.h    ****         }
 4949              		.loc 3 163 34 view .LVU1458
 4950              	.LBE709:
 4951              	.LBE708:
 771:EchoBridgeWithUSB.cpp ****     hw.SetKnobCallback(2, HandleKnob3);
 4952              		.loc 2 771 5 is_stmt 1 view .LVU1459
 4953              	.LBB710:
 4954              	.LBI710:
 161:hothouse.h    ****         if (knob >= 0 && knob < 6) {
 4955              		.loc 3 161 10 view .LVU1460
 4956              	.LBB711:
 162:hothouse.h    ****             knobCallbacks_[knob] = callback;
 4957              		.loc 3 162 9 view .LVU1461
 163:hothouse.h    ****         }
 4958              		.loc 3 163 13 view .LVU1462
 163:hothouse.h    ****         }
 4959              		.loc 3 163 34 is_stmt 0 view .LVU1463
 4960 00d0 274B     		ldr	r3, .L307+72
 4961 00d2 C4F8E030 		str	r3, [r4, #224]
 4962              	.LVL433:
 163:hothouse.h    ****         }
 4963              		.loc 3 163 34 view .LVU1464
 4964              	.LBE711:
 4965              	.LBE710:
 772:EchoBridgeWithUSB.cpp ****     hw.SetKnobCallback(3, HandleKnob4);
 4966              		.loc 2 772 5 is_stmt 1 view .LVU1465
 4967              	.LBB712:
 4968              	.LBI712:
 161:hothouse.h    ****         if (knob >= 0 && knob < 6) {
 4969              		.loc 3 161 10 view .LVU1466
 4970              	.LBB713:
 162:hothouse.h    ****             knobCallbacks_[knob] = callback;
 4971              		.loc 3 162 9 view .LVU1467
 163:hothouse.h    ****         }
 4972              		.loc 3 163 13 view .LVU1468
 163:hothouse.h    ****         }
 4973              		.loc 3 163 34 is_stmt 0 view .LVU1469
 4974 00d6 274B     		ldr	r3, .L307+76
 4975 00d8 C4F8E430 		str	r3, [r4, #228]
ARM GAS  /tmp/cch2Dr4w.s 			page 150


 4976              	.LVL434:
 163:hothouse.h    ****         }
 4977              		.loc 3 163 34 view .LVU1470
 4978              	.LBE713:
 4979              	.LBE712:
 773:EchoBridgeWithUSB.cpp ****     hw.SetKnobCallback(4, HandleKnob5);
 4980              		.loc 2 773 5 is_stmt 1 view .LVU1471
 4981              	.LBB714:
 4982              	.LBI714:
 161:hothouse.h    ****         if (knob >= 0 && knob < 6) {
 4983              		.loc 3 161 10 view .LVU1472
 4984              	.LBB715:
 162:hothouse.h    ****             knobCallbacks_[knob] = callback;
 4985              		.loc 3 162 9 view .LVU1473
 163:hothouse.h    ****         }
 4986              		.loc 3 163 13 view .LVU1474
 163:hothouse.h    ****         }
 4987              		.loc 3 163 34 is_stmt 0 view .LVU1475
 4988 00dc 264B     		ldr	r3, .L307+80
 4989 00de C4F8E830 		str	r3, [r4, #232]
 4990              	.LVL435:
 163:hothouse.h    ****         }
 4991              		.loc 3 163 34 view .LVU1476
 4992              	.LBE715:
 4993              	.LBE714:
 774:EchoBridgeWithUSB.cpp ****     hw.SetKnobCallback(5, HandleKnob6);
 4994              		.loc 2 774 5 is_stmt 1 view .LVU1477
 4995              	.LBB716:
 4996              	.LBI716:
 161:hothouse.h    ****         if (knob >= 0 && knob < 6) {
 4997              		.loc 3 161 10 view .LVU1478
 4998              	.LBB717:
 162:hothouse.h    ****             knobCallbacks_[knob] = callback;
 4999              		.loc 3 162 9 view .LVU1479
 163:hothouse.h    ****         }
 5000              		.loc 3 163 13 view .LVU1480
 163:hothouse.h    ****         }
 5001              		.loc 3 163 34 is_stmt 0 view .LVU1481
 5002 00e2 264B     		ldr	r3, .L307+84
 5003 00e4 C4F8EC30 		str	r3, [r4, #236]
 5004              	.LVL436:
 5005              	.L304:
 163:hothouse.h    ****         }
 5006              		.loc 3 163 34 view .LVU1482
 5007              	.LBE717:
 5008              	.LBE716:
 775:EchoBridgeWithUSB.cpp ****     
 776:EchoBridgeWithUSB.cpp ****     // Main loop
 777:EchoBridgeWithUSB.cpp ****     while (true) {
 5009              		.loc 2 777 5 is_stmt 1 discriminator 1 view .LVU1483
 778:EchoBridgeWithUSB.cpp ****         // Process hardware events
 779:EchoBridgeWithUSB.cpp ****         hw.ProcessAllControls();
 5010              		.loc 2 779 9 discriminator 1 view .LVU1484
 5011              		.loc 2 779 30 is_stmt 0 discriminator 1 view .LVU1485
 5012 00e8 0F48     		ldr	r0, .L307
 5013 00ea FFF7FEFF 		bl	_ZN16clevelandmusicco8Hothouse18ProcessAllControlsEv
 5014              	.LVL437:
ARM GAS  /tmp/cch2Dr4w.s 			page 151


 780:EchoBridgeWithUSB.cpp ****         
 781:EchoBridgeWithUSB.cpp ****         // Process USB events
 782:EchoBridgeWithUSB.cpp ****         irLoader.Process();
 5015              		.loc 2 782 9 is_stmt 1 discriminator 1 view .LVU1486
 5016              	.LBB718:
 5017              	.LBI718:
  23:IRLoader.h    ****         // Process USB host events
 5018              		.loc 10 23 10 discriminator 1 view .LVU1487
 5019              	.LBE718:
  25:IRLoader.h    ****             usbh_->Process();
 5020              		.loc 10 25 9 discriminator 1 view .LVU1488
 5021              	.LBB721:
 5022              	.LBB719:
  25:IRLoader.h    ****             usbh_->Process();
 5023              		.loc 10 25 13 is_stmt 0 discriminator 1 view .LVU1489
 5024 00ee 2868     		ldr	r0, [r5]
  25:IRLoader.h    ****             usbh_->Process();
 5025              		.loc 10 25 9 discriminator 1 view .LVU1490
 5026 00f0 90B1     		cbz	r0, .L302
 5027              	.LBB720:
  26:IRLoader.h    ****             
 5028              		.loc 10 26 13 is_stmt 1 view .LVU1491
  26:IRLoader.h    ****             
 5029              		.loc 10 26 27 is_stmt 0 view .LVU1492
 5030 00f2 FFF7FEFF 		bl	_ZN5daisy13USBHostHandle7ProcessEv
 5031              	.LVL438:
  30:IRLoader.h    ****             
 5032              		.loc 10 30 13 is_stmt 1 view .LVU1493
  30:IRLoader.h    ****             
 5033              		.loc 10 30 35 is_stmt 0 view .LVU1494
 5034 00f6 0022     		movs	r2, #0
 5035 00f8 2149     		ldr	r1, .L307+88
 5036 00fa 1046     		mov	r0, r2
 5037 00fc FFF7FEFF 		bl	f_mount
 5038              	.LVL439:
  30:IRLoader.h    ****             
 5039              		.loc 10 30 55 view .LVU1495
 5040 0100 0346     		mov	r3, r0
 5041 0102 B0FA80F0 		clz	r0, r0
  33:IRLoader.h    ****                 mounted_ = mounted;
 5042              		.loc 10 33 13 view .LVU1496
 5043 0106 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
  30:IRLoader.h    ****             
 5044              		.loc 10 30 55 view .LVU1497
 5045 0108 4009     		lsrs	r0, r0, #5
 5046              	.LVL440:
  33:IRLoader.h    ****                 mounted_ = mounted;
 5047              		.loc 10 33 13 is_stmt 1 view .LVU1498
 5048 010a 8242     		cmp	r2, r0
 5049 010c 04D0     		beq	.L302
  34:IRLoader.h    ****                 
 5050              		.loc 10 34 17 view .LVU1499
  34:IRLoader.h    ****                 
 5051              		.loc 10 34 26 is_stmt 0 view .LVU1500
 5052 010e 2871     		strb	r0, [r5, #4]
  37:IRLoader.h    ****                     LoadIR();
 5053              		.loc 10 37 17 is_stmt 1 view .LVU1501
ARM GAS  /tmp/cch2Dr4w.s 			page 152


 5054 0110 13B9     		cbnz	r3, .L302
  38:IRLoader.h    ****                 }
 5055              		.loc 10 38 21 view .LVU1502
  38:IRLoader.h    ****                 }
 5056              		.loc 10 38 27 is_stmt 0 view .LVU1503
 5057 0112 0B48     		ldr	r0, .L307+24
 5058              	.LVL441:
  38:IRLoader.h    ****                 }
 5059              		.loc 10 38 27 view .LVU1504
 5060 0114 FFF7FEFF 		bl	_ZN8IRLoader6LoadIREv
 5061              	.LVL442:
 5062              	.L302:
  38:IRLoader.h    ****                 }
 5063              		.loc 10 38 27 view .LVU1505
 5064              	.LBE720:
 5065              	.LBE719:
 5066              	.LBE721:
 783:EchoBridgeWithUSB.cpp ****         
 784:EchoBridgeWithUSB.cpp ****         // Update LEDs - Hothouse pedal only has two LEDs
 785:EchoBridgeWithUSB.cpp ****         led1.Update();  // LED 1 for freeze status
 5067              		.loc 2 785 9 is_stmt 1 view .LVU1506
 5068              		.loc 2 785 20 is_stmt 0 view .LVU1507
 5069 0118 0548     		ldr	r0, .L307+8
 5070 011a FFF7FEFF 		bl	_ZN5daisy3Led6UpdateEv
 5071              	.LVL443:
 786:EchoBridgeWithUSB.cpp ****         led2.Update();  // LED 2 for bypass status
 5072              		.loc 2 786 9 is_stmt 1 view .LVU1508
 5073              		.loc 2 786 20 is_stmt 0 view .LVU1509
 5074 011e 0548     		ldr	r0, .L307+12
 5075 0120 FFF7FEFF 		bl	_ZN5daisy3Led6UpdateEv
 5076              	.LVL444:
 777:EchoBridgeWithUSB.cpp ****         // Process hardware events
 5077              		.loc 2 777 5 is_stmt 1 view .LVU1510
 5078 0124 E0E7     		b	.L304
 5079              	.L308:
 5080 0126 00BF     		.align	2
 5081              	.L307:
 5082 0128 00000000 		.word	.LANCHOR7
 5083 012c 00007A44 		.word	1148846080
 5084 0130 00000000 		.word	.LANCHOR1
 5085 0134 00000000 		.word	.LANCHOR3
 5086 0138 00000000 		.word	.LANCHOR2
 5087 013c 00000000 		.word	0
 5088 0140 00000000 		.word	.LANCHOR5
 5089 0144 00000000 		.word	.LANCHOR0
 5090 0148 00000000 		.word	.LANCHOR4
 5091 014c 00000000 		.word	_Z14LoadIRCallbackPfS_j
 5092 0150 00000000 		.word	reverb
 5093 0154 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 5094 0158 00000000 		.word	_Z17HandleFootswitch1b
 5095 015c 00000000 		.word	_Z17HandleFootswitch2b
 5096 0160 00000000 		.word	_Z26HandleFootswitch1LongPressv
 5097 0164 00000000 		.word	_Z26HandleFootswitch2LongPressv
 5098 0168 00000000 		.word	_Z11HandleKnob1f
 5099 016c 00000000 		.word	_Z11HandleKnob2f
 5100 0170 00000000 		.word	_Z11HandleKnob3f
 5101 0174 00000000 		.word	_Z11HandleKnob4f
ARM GAS  /tmp/cch2Dr4w.s 			page 153


 5102 0178 00000000 		.word	_Z11HandleKnob5f
 5103 017c 00000000 		.word	_Z11HandleKnob6f
 5104 0180 00000000 		.word	.LC7
 5105              		.cfi_endproc
 5106              	.LFE5531:
 5108              		.section	.text._ZN6ShyFFTIfLj64EE7ComplexEPfS1_j,"axG",%progbits,_ZN6ShyFFTIfLj64EE7ComplexEPfS1_j
 5109              		.align	1
 5110              		.weak	_ZN6ShyFFTIfLj64EE7ComplexEPfS1_j
 5111              		.syntax unified
 5112              		.thumb
 5113              		.thumb_func
 5114              		.fpu fpv5-d16
 5116              	_ZN6ShyFFTIfLj64EE7ComplexEPfS1_j:
 5117              	.LVL445:
 5118              	.LFB5987:
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5119              		.loc 12 74 10 view -0
 5120              		.cfi_startproc
 5121              		@ args = 0, pretend = 0, frame = 552
 5122              		@ frame_needed = 0, uses_anonymous_args = 0
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5123              		.loc 12 74 10 is_stmt 0 view .LVU1512
 5124 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5125              		.cfi_def_cfa_offset 36
 5126              		.cfi_offset 4, -36
 5127              		.cfi_offset 5, -32
 5128              		.cfi_offset 6, -28
 5129              		.cfi_offset 7, -24
 5130              		.cfi_offset 8, -20
 5131              		.cfi_offset 9, -16
 5132              		.cfi_offset 10, -12
 5133              		.cfi_offset 11, -8
 5134              		.cfi_offset 14, -4
 5135 0004 ADF50B7D 		sub	sp, sp, #556
 5136              		.cfi_def_cfa_offset 592
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5137              		.loc 12 74 10 view .LVU1513
 5138 0008 1446     		mov	r4, r2
 5139 000a 8946     		mov	r9, r1
 5140 000c 9E00     		lsls	r6, r3, #2
 5141 000e 0990     		str	r0, [sp, #36]
 5142 0010 2746     		mov	r7, r4
 5143 0012 099A     		ldr	r2, [sp, #36]
 5144              	.LVL446:
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5145              		.loc 12 74 10 view .LVU1514
 5146 0014 0846     		mov	r0, r1
 5147              	.LVL447:
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5148              		.loc 12 74 10 view .LVU1515
 5149 0016 0D46     		mov	r5, r1
 5150 0018 0293     		str	r3, [sp, #8]
 5151 001a 02F5807C 		add	ip, r2, #256
 5152 001e 01EB8302 		add	r2, r1, r3, lsl #2
 5153              	.LVL448:
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5154              		.loc 12 74 10 view .LVU1516
ARM GAS  /tmp/cch2Dr4w.s 			page 154


 5155 0022 0394     		str	r4, [sp, #12]
 5156 0024 0892     		str	r2, [sp, #32]
 5157              	.LVL449:
 5158              	.L311:
 5159              	.LBB731:
  79:shy_fft.h     ****             temp_real[bit_reverse_[i]] = real[i];
 5160              		.loc 12 79 30 is_stmt 1 discriminator 3 view .LVU1517
 5161 0026 089A     		ldr	r2, [sp, #32]
 5162 0028 9542     		cmp	r5, r2
 5163 002a 0FD0     		beq	.L320
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5164              		.loc 12 80 35 is_stmt 0 discriminator 2 view .LVU1518
 5165 002c 5CF8042B 		ldr	r2, [ip], #4
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5166              		.loc 12 80 40 discriminator 2 view .LVU1519
 5167 0030 0AAB     		add	r3, sp, #40
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5168              		.loc 12 80 46 discriminator 2 view .LVU1520
 5169 0032 55F804EB 		ldr	lr, [r5], #4	@ float
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5170              		.loc 12 80 40 discriminator 2 view .LVU1521
 5171 0036 03EB8201 		add	r1, r3, r2, lsl #2
  81:shy_fft.h     ****         }
 5172              		.loc 12 81 40 discriminator 2 view .LVU1522
 5173 003a 4AAB     		add	r3, sp, #296
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5174              		.loc 12 80 40 discriminator 2 view .LVU1523
 5175 003c C1F800E0 		str	lr, [r1]	@ float
  81:shy_fft.h     ****         }
 5176              		.loc 12 81 40 discriminator 2 view .LVU1524
 5177 0040 03EB8202 		add	r2, r3, r2, lsl #2
  81:shy_fft.h     ****         }
 5178              		.loc 12 81 46 discriminator 2 view .LVU1525
 5179 0044 57F8041B 		ldr	r1, [r7], #4	@ float
  81:shy_fft.h     ****         }
 5180              		.loc 12 81 40 discriminator 2 view .LVU1526
 5181 0048 1160     		str	r1, [r2]	@ float
  79:shy_fft.h     ****             temp_real[bit_reverse_[i]] = real[i];
 5182              		.loc 12 79 9 is_stmt 1 discriminator 2 view .LVU1527
 5183 004a ECE7     		b	.L311
 5184              	.L320:
 5185              	.LBE731:
 5186              	.LBB732:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5187              		.loc 12 85 21 is_stmt 0 view .LVU1528
 5188 004c 0121     		movs	r1, #1
 5189              	.L310:
 5190              	.LVL450:
 5191              	.LBB733:
  86:shy_fft.h     ****             size_t m2 = m >> 1;
 5192              		.loc 12 86 26 view .LVU1529
 5193 004e 0122     		movs	r2, #1
 5194 0050 0AAF     		add	r7, sp, #40
 5195 0052 8A40     		lsls	r2, r2, r1
 5196 0054 0492     		str	r2, [sp, #16]
 5197              	.LVL451:
  87:shy_fft.h     ****             
ARM GAS  /tmp/cch2Dr4w.s 			page 155


 5198              		.loc 12 87 20 view .LVU1530
 5199 0056 5208     		lsrs	r2, r2, #1
 5200              	.LVL452:
  87:shy_fft.h     ****             
 5201              		.loc 12 87 20 view .LVU1531
 5202 0058 0592     		str	r2, [sp, #20]
 5203              	.LVL453:
  87:shy_fft.h     ****             
 5204              		.loc 12 87 20 view .LVU1532
 5205 005a 0422     		movs	r2, #4
 5206              	.LVL454:
  87:shy_fft.h     ****             
 5207              		.loc 12 87 20 view .LVU1533
 5208 005c 059D     		ldr	r5, [sp, #20]
 5209 005e 8A40     		lsls	r2, r2, r1
 5210 0060 AD00     		lsls	r5, r5, #2
 5211 0062 0692     		str	r2, [sp, #24]
 5212 0064 4AAA     		add	r2, sp, #296
 5213 0066 0795     		str	r5, [sp, #28]
 5214              	.LBB734:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5215              		.loc 12 89 25 view .LVU1534
 5216 0068 0025     		movs	r5, #0
 5217 006a 0195     		str	r5, [sp, #4]
 5218              	.LVL455:
 5219              	.L316:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5220              		.loc 12 89 34 is_stmt 1 discriminator 1 view .LVU1535
 5221 006c DDE90153 		ldrd	r5, r3, [sp, #4]
 5222 0070 9D42     		cmp	r5, r3
 5223 0072 43D2     		bcs	.L314
 5224 0074 079D     		ldr	r5, [sp, #28]
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5225              		.loc 12 89 34 is_stmt 0 view .LVU1536
 5226 0076 B846     		mov	r8, r7
 5227 0078 9646     		mov	lr, r2
 5228              	.LBB735:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5229              		.loc 12 90 29 view .LVU1537
 5230 007a 4FF0000C 		mov	ip, #0
 5231 007e 07EB050B 		add	fp, r7, r5
 5232 0082 02EB050A 		add	r10, r2, r5
 5233              	.LVL456:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5234              		.loc 12 90 38 is_stmt 1 view .LVU1538
 5235              	.L315:
 5236              	.LBB736:
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5237              		.loc 12 94 65 is_stmt 0 discriminator 2 view .LVU1539
 5238 0086 4FEA8C15 		lsl	r5, ip, #6
 5239 008a 099B     		ldr	r3, [sp, #36]
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5240              		.loc 12 94 81 discriminator 2 view .LVU1540
 5241 008c DAED005A 		vldr.32	s11, [r10]
 5242              	.LBE736:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5243              		.loc 12 90 17 discriminator 2 view .LVU1541
ARM GAS  /tmp/cch2Dr4w.s 			page 156


 5244 0090 0CF1010C 		add	ip, ip, #1
 5245              	.LVL457:
 5246              	.LBB737:
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5247              		.loc 12 94 65 discriminator 2 view .LVU1542
 5248 0094 CD40     		lsrs	r5, r5, r1
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5249              		.loc 12 94 37 discriminator 2 view .LVU1543
 5250 0096 9BED006A 		vldr.32	s12, [fp]
 5251 009a 03EB8505 		add	r5, r3, r5, lsl #2
 5252              	.LBE737:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5253              		.loc 12 90 38 discriminator 2 view .LVU1544
 5254 009e 059B     		ldr	r3, [sp, #20]
 5255              	.LBB738:
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5256              		.loc 12 94 102 discriminator 2 view .LVU1545
 5257 00a0 D5ED206A 		vldr.32	s13, [r5, #128]
 5258              	.LBE738:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5259              		.loc 12 90 38 discriminator 2 view .LVU1546
 5260 00a4 6345     		cmp	r3, ip
 5261              	.LBB739:
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5262              		.loc 12 94 58 discriminator 2 view .LVU1547
 5263 00a6 D5ED007A 		vldr.32	s15, [r5]
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5264              		.loc 12 94 23 discriminator 2 view .LVU1548
 5265 00aa 26EEE57A 		vnmul.f32	s14, s13, s11
 5266 00ae A6EE277A 		vfma.f32	s14, s12, s15
 5267              	.LVL458:
  95:shy_fft.h     ****                     
 5268              		.loc 12 95 86 discriminator 2 view .LVU1549
 5269 00b2 67EEA57A 		vmul.f32	s15, s15, s11
  95:shy_fft.h     ****                     
 5270              		.loc 12 95 23 discriminator 2 view .LVU1550
 5271 00b6 E6EE267A 		vfma.f32	s15, s12, s13
 5272              	.LVL459:
  97:shy_fft.h     ****                     temp_imag[i2] = temp_imag[i1] - im;
 5273              		.loc 12 97 46 discriminator 2 view .LVU1551
 5274 00ba D8ED006A 		vldr.32	s13, [r8]
  97:shy_fft.h     ****                     temp_imag[i2] = temp_imag[i1] - im;
 5275              		.loc 12 97 51 discriminator 2 view .LVU1552
 5276 00be 76EEC76A 		vsub.f32	s13, s13, s14
  97:shy_fft.h     ****                     temp_imag[i2] = temp_imag[i1] - im;
 5277              		.loc 12 97 35 discriminator 2 view .LVU1553
 5278 00c2 EBEC016A 		vstmia.32	fp!, {s13}
  98:shy_fft.h     ****                     temp_real[i1] = temp_real[i1] + re;
 5279              		.loc 12 98 46 discriminator 2 view .LVU1554
 5280 00c6 DEED006A 		vldr.32	s13, [lr]
  98:shy_fft.h     ****                     temp_real[i1] = temp_real[i1] + re;
 5281              		.loc 12 98 51 discriminator 2 view .LVU1555
 5282 00ca 76EEE76A 		vsub.f32	s13, s13, s15
  98:shy_fft.h     ****                     temp_real[i1] = temp_real[i1] + re;
 5283              		.loc 12 98 35 discriminator 2 view .LVU1556
 5284 00ce EAEC016A 		vstmia.32	r10!, {s13}
  99:shy_fft.h     ****                     temp_imag[i1] = temp_imag[i1] + im;
ARM GAS  /tmp/cch2Dr4w.s 			page 157


 5285              		.loc 12 99 51 discriminator 2 view .LVU1557
 5286 00d2 F8EC016A 		vldmia.32	r8!, {s13}
 5287 00d6 36EE877A 		vadd.f32	s14, s13, s14
 5288              	.LVL460:
  99:shy_fft.h     ****                     temp_imag[i1] = temp_imag[i1] + im;
 5289              		.loc 12 99 35 discriminator 2 view .LVU1558
 5290 00da 08ED017A 		vstr.32	s14, [r8, #-4]
 100:shy_fft.h     ****                 }
 5291              		.loc 12 100 51 discriminator 2 view .LVU1559
 5292 00de BEEC017A 		vldmia.32	lr!, {s14}
 5293 00e2 77EE277A 		vadd.f32	s15, s14, s15
 5294              	.LVL461:
 100:shy_fft.h     ****                 }
 5295              		.loc 12 100 35 discriminator 2 view .LVU1560
 5296 00e6 4EED017A 		vstr.32	s15, [lr, #-4]
 5297              	.LBE739:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5298              		.loc 12 90 17 is_stmt 1 discriminator 2 view .LVU1561
 5299              	.LVL462:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5300              		.loc 12 90 38 discriminator 2 view .LVU1562
 5301 00ea CCD1     		bne	.L315
 5302              	.LBE735:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5303              		.loc 12 89 13 discriminator 2 view .LVU1563
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5304              		.loc 12 89 44 is_stmt 0 discriminator 2 view .LVU1564
 5305 00ec 019D     		ldr	r5, [sp, #4]
 5306              	.LVL463:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5307              		.loc 12 89 44 discriminator 2 view .LVU1565
 5308 00ee 049B     		ldr	r3, [sp, #16]
 5309 00f0 1D44     		add	r5, r5, r3
 5310 00f2 069B     		ldr	r3, [sp, #24]
 5311 00f4 0195     		str	r5, [sp, #4]
 5312              	.LVL464:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5313              		.loc 12 89 44 discriminator 2 view .LVU1566
 5314 00f6 1F44     		add	r7, r7, r3
 5315 00f8 1A44     		add	r2, r2, r3
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5316              		.loc 12 89 13 discriminator 2 view .LVU1567
 5317 00fa B7E7     		b	.L316
 5318              	.LVL465:
 5319              	.L314:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5320              		.loc 12 89 13 discriminator 2 view .LVU1568
 5321              	.LBE734:
 5322              	.LBE733:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5323              		.loc 12 85 9 is_stmt 1 discriminator 2 view .LVU1569
 5324 00fc 0131     		adds	r1, r1, #1
 5325              	.LVL466:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5326              		.loc 12 85 38 discriminator 2 view .LVU1570
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5327              		.loc 12 85 38 is_stmt 0 discriminator 2 view .LVU1571
ARM GAS  /tmp/cch2Dr4w.s 			page 158


 5328              	.LBE732:
 124:shy_fft.h     ****             n >>= 1;
 5329              		.loc 12 124 18 is_stmt 1 discriminator 2 view .LVU1572
 124:shy_fft.h     ****             n >>= 1;
 5330              		.loc 12 124 18 discriminator 2 view .LVU1573
 124:shy_fft.h     ****             n >>= 1;
 5331              		.loc 12 124 18 discriminator 2 view .LVU1574
 124:shy_fft.h     ****             n >>= 1;
 5332              		.loc 12 124 18 discriminator 2 view .LVU1575
 124:shy_fft.h     ****             n >>= 1;
 5333              		.loc 12 124 18 discriminator 2 view .LVU1576
 124:shy_fft.h     ****             n >>= 1;
 5334              		.loc 12 124 18 discriminator 2 view .LVU1577
 124:shy_fft.h     ****             n >>= 1;
 5335              		.loc 12 124 18 discriminator 2 view .LVU1578
 5336              	.LBB740:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5337              		.loc 12 85 38 is_stmt 0 discriminator 2 view .LVU1579
 5338 00fe 0729     		cmp	r1, #7
 5339 0100 A5D1     		bne	.L310
 5340 0102 A319     		adds	r3, r4, r6
 5341 0104 9842     		cmp	r0, r3
 5342 0106 12D2     		bcs	.L312
 5343 0108 8319     		adds	r3, r0, r6
 5344 010a 9C42     		cmp	r4, r3
 5345 010c 0FD2     		bcs	.L312
 5346 010e 0AAA     		add	r2, sp, #40
 5347 0110 4AAB     		add	r3, sp, #296
 5348              	.LVL467:
 5349              	.L319:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5350              		.loc 12 85 38 discriminator 2 view .LVU1580
 5351              	.LBE740:
 5352              	.LBB741:
 106:shy_fft.h     ****             real[i] = temp_real[i];
 5353              		.loc 12 106 30 is_stmt 1 view .LVU1581
 5354 0112 0899     		ldr	r1, [sp, #32]
 5355 0114 8945     		cmp	r9, r1
 5356 0116 13D0     		beq	.L309
 107:shy_fft.h     ****             imag[i] = temp_imag[i];
 5357              		.loc 12 107 32 is_stmt 0 view .LVU1582
 5358 0118 52F8041B 		ldr	r1, [r2], #4	@ float
 108:shy_fft.h     ****         }
 5359              		.loc 12 108 21 view .LVU1583
 5360 011c 0398     		ldr	r0, [sp, #12]
 107:shy_fft.h     ****             imag[i] = temp_imag[i];
 5361              		.loc 12 107 21 view .LVU1584
 5362 011e 49F8041B 		str	r1, [r9], #4	@ float
 108:shy_fft.h     ****         }
 5363              		.loc 12 108 32 view .LVU1585
 5364 0122 53F8041B 		ldr	r1, [r3], #4	@ float
 108:shy_fft.h     ****         }
 5365              		.loc 12 108 21 view .LVU1586
 5366 0126 40F8041B 		str	r1, [r0], #4	@ float
 5367 012a 0390     		str	r0, [sp, #12]
 106:shy_fft.h     ****             real[i] = temp_real[i];
 5368              		.loc 12 106 9 is_stmt 1 view .LVU1587
ARM GAS  /tmp/cch2Dr4w.s 			page 159


 5369 012c F1E7     		b	.L319
 5370              	.LVL468:
 5371              	.L312:
 107:shy_fft.h     ****             imag[i] = temp_imag[i];
 5372              		.loc 12 107 21 is_stmt 0 view .LVU1588
 5373 012e 3246     		mov	r2, r6
 5374 0130 0AA9     		add	r1, sp, #40
 5375              	.LVL469:
 107:shy_fft.h     ****             imag[i] = temp_imag[i];
 5376              		.loc 12 107 21 view .LVU1589
 5377 0132 FFF7FEFF 		bl	memcpy
 5378              	.LVL470:
 108:shy_fft.h     ****         }
 5379              		.loc 12 108 21 view .LVU1590
 5380 0136 3246     		mov	r2, r6
 5381 0138 4AA9     		add	r1, sp, #296
 5382 013a 2046     		mov	r0, r4
 5383 013c FFF7FEFF 		bl	memcpy
 5384              	.LVL471:
 5385              	.L309:
 108:shy_fft.h     ****         }
 5386              		.loc 12 108 21 view .LVU1591
 5387              	.LBE741:
 110:shy_fft.h     ****     
 5388              		.loc 12 110 5 view .LVU1592
 5389 0140 0DF50B7D 		add	sp, sp, #556
 5390              		.cfi_def_cfa_offset 36
 5391              		@ sp needed
 5392 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 110:shy_fft.h     ****     
 5393              		.loc 12 110 5 view .LVU1593
 5394              		.cfi_endproc
 5395              	.LFE5987:
 5397              		.section	.text._ZN6ShyFFTIfLj64EE7InverseEPfS1_j,"axG",%progbits,_ZN6ShyFFTIfLj64EE7InverseEPfS1_j
 5398              		.align	1
 5399              		.weak	_ZN6ShyFFTIfLj64EE7InverseEPfS1_j
 5400              		.syntax unified
 5401              		.thumb
 5402              		.thumb_func
 5403              		.fpu fpv5-d16
 5405              	_ZN6ShyFFTIfLj64EE7InverseEPfS1_j:
 5406              	.LVL472:
 5407              	.LFB5854:
  56:shy_fft.h     ****         // Perform complex conjugate
 5408              		.loc 12 56 10 is_stmt 1 view -0
 5409              		.cfi_startproc
 5410              		@ args = 0, pretend = 0, frame = 0
 5411              		@ frame_needed = 0, uses_anonymous_args = 0
  56:shy_fft.h     ****         // Perform complex conjugate
 5412              		.loc 12 56 10 is_stmt 0 view .LVU1595
 5413 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5414              		.cfi_def_cfa_offset 24
 5415              		.cfi_offset 3, -24
 5416              		.cfi_offset 4, -20
 5417              		.cfi_offset 5, -16
 5418              		.cfi_offset 6, -12
 5419              		.cfi_offset 7, -8
ARM GAS  /tmp/cch2Dr4w.s 			page 160


 5420              		.cfi_offset 14, -4
  56:shy_fft.h     ****         // Perform complex conjugate
 5421              		.loc 12 56 10 view .LVU1596
 5422 0002 0C46     		mov	r4, r1
 5423 0004 1D46     		mov	r5, r3
 5424 0006 9F00     		lsls	r7, r3, #2
 5425 0008 1646     		mov	r6, r2
 5426 000a 02EB8301 		add	r1, r2, r3, lsl #2
 5427              	.LVL473:
  56:shy_fft.h     ****         // Perform complex conjugate
 5428              		.loc 12 56 10 view .LVU1597
 5429 000e 1346     		mov	r3, r2
 5430              	.LVL474:
 5431              	.L329:
 5432              	.LBB742:
  58:shy_fft.h     ****             imag[i] = -imag[i];
 5433              		.loc 12 58 30 is_stmt 1 discriminator 3 view .LVU1598
 5434 0010 8B42     		cmp	r3, r1
 5435 0012 06D0     		beq	.L328
  59:shy_fft.h     ****         }
 5436              		.loc 12 59 21 is_stmt 0 discriminator 2 view .LVU1599
 5437 0014 D3ED007A 		vldr.32	s15, [r3]
 5438 0018 F1EE677A 		vneg.f32	s15, s15
 5439 001c E3EC017A 		vstmia.32	r3!, {s15}
  58:shy_fft.h     ****             imag[i] = -imag[i];
 5440              		.loc 12 58 9 is_stmt 1 discriminator 2 view .LVU1600
 5441 0020 F6E7     		b	.L329
 5442              	.L328:
 5443              	.LBE742:
  63:shy_fft.h     ****         
 5444              		.loc 12 63 16 is_stmt 0 view .LVU1601
 5445 0022 2146     		mov	r1, r4
 5446 0024 2B46     		mov	r3, r5
 5447 0026 FFF7FEFF 		bl	_ZN6ShyFFTIfLj64EE7ComplexEPfS1_j
 5448              	.LVL475:
  66:shy_fft.h     ****         for (size_t i = 0; i < size; i++) {
 5449              		.loc 12 66 23 view .LVU1602
 5450 002a 07EE905A 		vmov	s15, r5	@ int
 5451 002e B7EE005B 		vmov.f64	d5, #1.0e+0
 5452 0032 2146     		mov	r1, r4
 5453 0034 B8EEE77B 		vcvt.f64.s32	d7, s15
 5454 0038 2744     		add	r7, r7, r4
 5455 003a 85EE076B 		vdiv.f64	d6, d5, d7
  66:shy_fft.h     ****         for (size_t i = 0; i < size; i++) {
 5456              		.loc 12 66 11 view .LVU1603
 5457 003e B7EEC66B 		vcvt.f32.f64	s12, d6
 5458              	.LVL476:
 5459              	.L331:
 5460              	.LBB743:
  67:shy_fft.h     ****             real[i] *= scale;
 5461              		.loc 12 67 30 is_stmt 1 discriminator 3 view .LVU1604
 5462 0042 B942     		cmp	r1, r7
 5463 0044 0CD0     		beq	.L327
  68:shy_fft.h     ****             imag[i] *= scale;
 5464              		.loc 12 68 21 is_stmt 0 discriminator 2 view .LVU1605
 5465 0046 D1ED007A 		vldr.32	s15, [r1]
 5466 004a 67EE867A 		vmul.f32	s15, s15, s12
ARM GAS  /tmp/cch2Dr4w.s 			page 161


 5467 004e E1EC017A 		vstmia.32	r1!, {s15}
  69:shy_fft.h     ****         }
 5468              		.loc 12 69 21 discriminator 2 view .LVU1606
 5469 0052 D6ED007A 		vldr.32	s15, [r6]
 5470 0056 67EE867A 		vmul.f32	s15, s15, s12
 5471 005a E6EC017A 		vstmia.32	r6!, {s15}
  67:shy_fft.h     ****             real[i] *= scale;
 5472              		.loc 12 67 9 is_stmt 1 discriminator 2 view .LVU1607
 5473 005e F0E7     		b	.L331
 5474              	.L327:
  67:shy_fft.h     ****             real[i] *= scale;
 5475              		.loc 12 67 9 is_stmt 0 discriminator 2 view .LVU1608
 5476              	.LBE743:
  71:shy_fft.h     ****     
 5477              		.loc 12 71 5 view .LVU1609
 5478 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  71:shy_fft.h     ****     
 5479              		.loc 12 71 5 view .LVU1610
 5480              		.cfi_endproc
 5481              	.LFE5854:
 5483              		.section	.text._ZN6ShyFFTIfLj1024EE7ComplexEPfS1_j,"axG",%progbits,_ZN6ShyFFTIfLj1024EE7ComplexEPf
 5484              		.align	1
 5485              		.weak	_ZN6ShyFFTIfLj1024EE7ComplexEPfS1_j
 5486              		.syntax unified
 5487              		.thumb
 5488              		.thumb_func
 5489              		.fpu fpv5-d16
 5491              	_ZN6ShyFFTIfLj1024EE7ComplexEPfS1_j:
 5492              	.LVL477:
 5493              	.LFB5988:
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5494              		.loc 12 74 10 is_stmt 1 view -0
 5495              		.cfi_startproc
 5496              		@ args = 0, pretend = 0, frame = 8232
 5497              		@ frame_needed = 0, uses_anonymous_args = 0
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5498              		.loc 12 74 10 is_stmt 0 view .LVU1612
 5499 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5500              		.cfi_def_cfa_offset 36
 5501              		.cfi_offset 4, -36
 5502              		.cfi_offset 5, -32
 5503              		.cfi_offset 6, -28
 5504              		.cfi_offset 7, -24
 5505              		.cfi_offset 8, -20
 5506              		.cfi_offset 9, -16
 5507              		.cfi_offset 10, -12
 5508              		.cfi_offset 11, -8
 5509              		.cfi_offset 14, -4
 5510 0004 ADF5005D 		sub	sp, sp, #8192
 5511              		.cfi_def_cfa_offset 8228
 5512 0008 1446     		mov	r4, r2
 5513 000a 8946     		mov	r9, r1
 5514 000c 9E00     		lsls	r6, r3, #2
 5515 000e 8BB0     		sub	sp, sp, #44
 5516              		.cfi_def_cfa_offset 8272
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5517              		.loc 12 74 10 view .LVU1613
ARM GAS  /tmp/cch2Dr4w.s 			page 162


 5518 0010 2746     		mov	r7, r4
 5519 0012 0D46     		mov	r5, r1
 5520 0014 0990     		str	r0, [sp, #36]
 5521 0016 0846     		mov	r0, r1
 5522              	.LVL478:
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5523              		.loc 12 74 10 view .LVU1614
 5524 0018 099A     		ldr	r2, [sp, #36]
 5525              	.LVL479:
  74:shy_fft.h     ****         // Copy input to temporary buffer with bit reversal
 5526              		.loc 12 74 10 view .LVU1615
 5527 001a 0293     		str	r3, [sp, #8]
 5528 001c 02F5805C 		add	ip, r2, #4096
 5529 0020 01EB8302 		add	r2, r1, r3, lsl #2
 5530 0024 0394     		str	r4, [sp, #12]
 5531 0026 0892     		str	r2, [sp, #32]
 5532              	.LVL480:
 5533              	.L336:
 5534              	.LBB753:
  79:shy_fft.h     ****             temp_real[bit_reverse_[i]] = real[i];
 5535              		.loc 12 79 30 is_stmt 1 discriminator 3 view .LVU1616
 5536 0028 089A     		ldr	r2, [sp, #32]
 5537 002a 9542     		cmp	r5, r2
 5538 002c 11D0     		beq	.L345
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5539              		.loc 12 80 35 is_stmt 0 discriminator 2 view .LVU1617
 5540 002e 5CF8042B 		ldr	r2, [ip], #4
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5541              		.loc 12 80 40 discriminator 2 view .LVU1618
 5542 0032 0AAB     		add	r3, sp, #40
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5543              		.loc 12 80 46 discriminator 2 view .LVU1619
 5544 0034 55F804EB 		ldr	lr, [r5], #4	@ float
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5545              		.loc 12 80 40 discriminator 2 view .LVU1620
 5546 0038 03EB8201 		add	r1, r3, r2, lsl #2
  81:shy_fft.h     ****         }
 5547              		.loc 12 81 40 discriminator 2 view .LVU1621
 5548 003c 0DF58153 		add	r3, sp, #4128
 5549 0040 0833     		adds	r3, r3, #8
  80:shy_fft.h     ****             temp_imag[bit_reverse_[i]] = imag[i];
 5550              		.loc 12 80 40 discriminator 2 view .LVU1622
 5551 0042 C1F800E0 		str	lr, [r1]	@ float
  81:shy_fft.h     ****         }
 5552              		.loc 12 81 46 discriminator 2 view .LVU1623
 5553 0046 57F8041B 		ldr	r1, [r7], #4	@ float
  81:shy_fft.h     ****         }
 5554              		.loc 12 81 40 discriminator 2 view .LVU1624
 5555 004a 03EB8202 		add	r2, r3, r2, lsl #2
 5556 004e 1160     		str	r1, [r2]	@ float
  79:shy_fft.h     ****             temp_real[bit_reverse_[i]] = real[i];
 5557              		.loc 12 79 9 is_stmt 1 discriminator 2 view .LVU1625
 5558 0050 EAE7     		b	.L336
 5559              	.L345:
 5560              	.LBE753:
 5561              	.LBB754:
  85:shy_fft.h     ****             size_t m = 1 << stage;
ARM GAS  /tmp/cch2Dr4w.s 			page 163


 5562              		.loc 12 85 21 is_stmt 0 view .LVU1626
 5563 0052 0125     		movs	r5, #1
 5564              	.L335:
 5565              	.LVL481:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5566              		.loc 12 85 38 is_stmt 1 discriminator 1 view .LVU1627
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5567              		.loc 12 85 38 is_stmt 0 discriminator 1 view .LVU1628
 5568              	.LBE754:
 124:shy_fft.h     ****             n >>= 1;
 5569              		.loc 12 124 18 is_stmt 1 discriminator 1 view .LVU1629
 124:shy_fft.h     ****             n >>= 1;
 5570              		.loc 12 124 18 discriminator 1 view .LVU1630
 5571              	.LBB762:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5572              		.loc 12 85 38 is_stmt 0 discriminator 1 view .LVU1631
 5573 0054 0B2D     		cmp	r5, #11
 5574 0056 17D1     		bne	.L337
 5575 0058 A319     		adds	r3, r4, r6
 5576 005a 9842     		cmp	r0, r3
 5577 005c 71D2     		bcs	.L338
 5578 005e 8319     		adds	r3, r0, r6
 5579 0060 9C42     		cmp	r4, r3
 5580 0062 6ED2     		bcs	.L338
 5581 0064 0DF58153 		add	r3, sp, #4128
 5582 0068 0AAA     		add	r2, sp, #40
 5583 006a 0833     		adds	r3, r3, #8
 5584              	.LVL482:
 5585              	.L344:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5586              		.loc 12 85 38 discriminator 1 view .LVU1632
 5587              	.LBE762:
 5588              	.LBB763:
 106:shy_fft.h     ****             real[i] = temp_real[i];
 5589              		.loc 12 106 30 is_stmt 1 view .LVU1633
 5590 006c 0899     		ldr	r1, [sp, #32]
 5591 006e 8945     		cmp	r9, r1
 5592 0070 72D0     		beq	.L334
 107:shy_fft.h     ****             imag[i] = temp_imag[i];
 5593              		.loc 12 107 32 is_stmt 0 view .LVU1634
 5594 0072 52F8041B 		ldr	r1, [r2], #4	@ float
 108:shy_fft.h     ****         }
 5595              		.loc 12 108 21 view .LVU1635
 5596 0076 0398     		ldr	r0, [sp, #12]
 107:shy_fft.h     ****             imag[i] = temp_imag[i];
 5597              		.loc 12 107 21 view .LVU1636
 5598 0078 49F8041B 		str	r1, [r9], #4	@ float
 108:shy_fft.h     ****         }
 5599              		.loc 12 108 32 view .LVU1637
 5600 007c 53F8041B 		ldr	r1, [r3], #4	@ float
 108:shy_fft.h     ****         }
 5601              		.loc 12 108 21 view .LVU1638
 5602 0080 40F8041B 		str	r1, [r0], #4	@ float
 5603 0084 0390     		str	r0, [sp, #12]
 106:shy_fft.h     ****             real[i] = temp_real[i];
 5604              		.loc 12 106 9 is_stmt 1 view .LVU1639
 5605 0086 F1E7     		b	.L344
ARM GAS  /tmp/cch2Dr4w.s 			page 164


 5606              	.LVL483:
 5607              	.L337:
 106:shy_fft.h     ****             real[i] = temp_real[i];
 5608              		.loc 12 106 9 is_stmt 0 view .LVU1640
 5609              	.LBE763:
 5610              	.LBB764:
 5611              	.LBB755:
  86:shy_fft.h     ****             size_t m2 = m >> 1;
 5612              		.loc 12 86 26 view .LVU1641
 5613 0088 0122     		movs	r2, #1
 5614 008a 0AAF     		add	r7, sp, #40
 5615 008c AA40     		lsls	r2, r2, r5
 5616 008e 0492     		str	r2, [sp, #16]
 5617              	.LVL484:
  87:shy_fft.h     ****             
 5618              		.loc 12 87 20 view .LVU1642
 5619 0090 5208     		lsrs	r2, r2, #1
 5620              	.LVL485:
  87:shy_fft.h     ****             
 5621              		.loc 12 87 20 view .LVU1643
 5622 0092 0592     		str	r2, [sp, #20]
 5623              	.LVL486:
  87:shy_fft.h     ****             
 5624              		.loc 12 87 20 view .LVU1644
 5625 0094 0422     		movs	r2, #4
 5626              	.LVL487:
  87:shy_fft.h     ****             
 5627              		.loc 12 87 20 view .LVU1645
 5628 0096 0599     		ldr	r1, [sp, #20]
 5629 0098 AA40     		lsls	r2, r2, r5
 5630 009a 8900     		lsls	r1, r1, #2
 5631 009c 0692     		str	r2, [sp, #24]
 5632 009e 0DF58152 		add	r2, sp, #4128
 5633 00a2 0791     		str	r1, [sp, #28]
 5634              	.LBB756:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5635              		.loc 12 89 25 view .LVU1646
 5636 00a4 0021     		movs	r1, #0
 5637 00a6 0832     		adds	r2, r2, #8
 5638 00a8 0191     		str	r1, [sp, #4]
 5639              	.LVL488:
 5640              	.L342:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5641              		.loc 12 89 34 is_stmt 1 discriminator 1 view .LVU1647
 5642 00aa DDE90113 		ldrd	r1, r3, [sp, #4]
 5643 00ae 9942     		cmp	r1, r3
 5644 00b0 45D2     		bcs	.L340
 5645 00b2 0799     		ldr	r1, [sp, #28]
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5646              		.loc 12 89 34 is_stmt 0 view .LVU1648
 5647 00b4 9646     		mov	lr, r2
 5648 00b6 B846     		mov	r8, r7
 5649              	.LBB757:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5650              		.loc 12 90 29 view .LVU1649
 5651 00b8 4FF0000C 		mov	ip, #0
 5652 00bc 07EB010B 		add	fp, r7, r1
ARM GAS  /tmp/cch2Dr4w.s 			page 165


 5653 00c0 02EB010A 		add	r10, r2, r1
 5654              	.LVL489:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5655              		.loc 12 90 38 is_stmt 1 view .LVU1650
 5656              	.L341:
 5657              	.LBB758:
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5658              		.loc 12 94 65 is_stmt 0 discriminator 2 view .LVU1651
 5659 00c4 4FEA8C21 		lsl	r1, ip, #10
 5660 00c8 099B     		ldr	r3, [sp, #36]
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5661              		.loc 12 94 81 discriminator 2 view .LVU1652
 5662 00ca DAED005A 		vldr.32	s11, [r10]
 5663              	.LBE758:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5664              		.loc 12 90 17 discriminator 2 view .LVU1653
 5665 00ce 0CF1010C 		add	ip, ip, #1
 5666              	.LVL490:
 5667              	.LBB759:
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5668              		.loc 12 94 65 discriminator 2 view .LVU1654
 5669 00d2 E940     		lsrs	r1, r1, r5
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5670              		.loc 12 94 37 discriminator 2 view .LVU1655
 5671 00d4 9BED006A 		vldr.32	s12, [fp]
 5672 00d8 03EB8101 		add	r1, r3, r1, lsl #2
 5673              	.LBE759:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5674              		.loc 12 90 38 discriminator 2 view .LVU1656
 5675 00dc 059B     		ldr	r3, [sp, #20]
 5676              	.LBB760:
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5677              		.loc 12 94 58 discriminator 2 view .LVU1657
 5678 00de D1ED007A 		vldr.32	s15, [r1]
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5679              		.loc 12 94 102 discriminator 2 view .LVU1658
 5680 00e2 01F50061 		add	r1, r1, #2048
 5681              	.LBE760:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5682              		.loc 12 90 38 discriminator 2 view .LVU1659
 5683 00e6 6345     		cmp	r3, ip
 5684              	.LBB761:
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5685              		.loc 12 94 102 discriminator 2 view .LVU1660
 5686 00e8 D1ED006A 		vldr.32	s13, [r1]
  94:shy_fft.h     ****                     T im = temp_real[i2] * twiddles_imag_[j * N / m] + temp_imag[i2] * twiddles_rea
 5687              		.loc 12 94 23 discriminator 2 view .LVU1661
 5688 00ec 26EEE57A 		vnmul.f32	s14, s13, s11
 5689 00f0 A6EE277A 		vfma.f32	s14, s12, s15
 5690              	.LVL491:
  95:shy_fft.h     ****                     
 5691              		.loc 12 95 86 discriminator 2 view .LVU1662
 5692 00f4 67EEA57A 		vmul.f32	s15, s15, s11
  95:shy_fft.h     ****                     
 5693              		.loc 12 95 23 discriminator 2 view .LVU1663
 5694 00f8 E6EE267A 		vfma.f32	s15, s12, s13
 5695              	.LVL492:
ARM GAS  /tmp/cch2Dr4w.s 			page 166


  97:shy_fft.h     ****                     temp_imag[i2] = temp_imag[i1] - im;
 5696              		.loc 12 97 46 discriminator 2 view .LVU1664
 5697 00fc D8ED006A 		vldr.32	s13, [r8]
  97:shy_fft.h     ****                     temp_imag[i2] = temp_imag[i1] - im;
 5698              		.loc 12 97 51 discriminator 2 view .LVU1665
 5699 0100 76EEC76A 		vsub.f32	s13, s13, s14
  97:shy_fft.h     ****                     temp_imag[i2] = temp_imag[i1] - im;
 5700              		.loc 12 97 35 discriminator 2 view .LVU1666
 5701 0104 EBEC016A 		vstmia.32	fp!, {s13}
  98:shy_fft.h     ****                     temp_real[i1] = temp_real[i1] + re;
 5702              		.loc 12 98 46 discriminator 2 view .LVU1667
 5703 0108 DEED006A 		vldr.32	s13, [lr]
  98:shy_fft.h     ****                     temp_real[i1] = temp_real[i1] + re;
 5704              		.loc 12 98 51 discriminator 2 view .LVU1668
 5705 010c 76EEE76A 		vsub.f32	s13, s13, s15
  98:shy_fft.h     ****                     temp_real[i1] = temp_real[i1] + re;
 5706              		.loc 12 98 35 discriminator 2 view .LVU1669
 5707 0110 EAEC016A 		vstmia.32	r10!, {s13}
  99:shy_fft.h     ****                     temp_imag[i1] = temp_imag[i1] + im;
 5708              		.loc 12 99 51 discriminator 2 view .LVU1670
 5709 0114 F8EC016A 		vldmia.32	r8!, {s13}
 5710 0118 36EE877A 		vadd.f32	s14, s13, s14
 5711              	.LVL493:
  99:shy_fft.h     ****                     temp_imag[i1] = temp_imag[i1] + im;
 5712              		.loc 12 99 35 discriminator 2 view .LVU1671
 5713 011c 08ED017A 		vstr.32	s14, [r8, #-4]
 100:shy_fft.h     ****                 }
 5714              		.loc 12 100 51 discriminator 2 view .LVU1672
 5715 0120 BEEC017A 		vldmia.32	lr!, {s14}
 5716 0124 77EE277A 		vadd.f32	s15, s14, s15
 5717              	.LVL494:
 100:shy_fft.h     ****                 }
 5718              		.loc 12 100 35 discriminator 2 view .LVU1673
 5719 0128 4EED017A 		vstr.32	s15, [lr, #-4]
 5720              	.LBE761:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5721              		.loc 12 90 17 is_stmt 1 discriminator 2 view .LVU1674
 5722              	.LVL495:
  90:shy_fft.h     ****                     size_t i1 = k + j;
 5723              		.loc 12 90 38 discriminator 2 view .LVU1675
 5724 012c CAD1     		bne	.L341
 5725              	.LBE757:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5726              		.loc 12 89 13 discriminator 2 view .LVU1676
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5727              		.loc 12 89 44 is_stmt 0 discriminator 2 view .LVU1677
 5728 012e 0199     		ldr	r1, [sp, #4]
 5729              	.LVL496:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5730              		.loc 12 89 44 discriminator 2 view .LVU1678
 5731 0130 049B     		ldr	r3, [sp, #16]
 5732 0132 1944     		add	r1, r1, r3
 5733 0134 069B     		ldr	r3, [sp, #24]
 5734 0136 0191     		str	r1, [sp, #4]
 5735              	.LVL497:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5736              		.loc 12 89 44 discriminator 2 view .LVU1679
ARM GAS  /tmp/cch2Dr4w.s 			page 167


 5737 0138 1F44     		add	r7, r7, r3
 5738 013a 1A44     		add	r2, r2, r3
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5739              		.loc 12 89 13 discriminator 2 view .LVU1680
 5740 013c B5E7     		b	.L342
 5741              	.LVL498:
 5742              	.L340:
  89:shy_fft.h     ****                 for (size_t j = 0; j < m2; j++) {
 5743              		.loc 12 89 13 discriminator 2 view .LVU1681
 5744              	.LBE756:
 5745              	.LBE755:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5746              		.loc 12 85 9 is_stmt 1 discriminator 2 view .LVU1682
 5747 013e 0135     		adds	r5, r5, #1
 5748              	.LVL499:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5749              		.loc 12 85 9 is_stmt 0 discriminator 2 view .LVU1683
 5750 0140 88E7     		b	.L335
 5751              	.LVL500:
 5752              	.L338:
  85:shy_fft.h     ****             size_t m = 1 << stage;
 5753              		.loc 12 85 9 discriminator 2 view .LVU1684
 5754              	.LBE764:
 5755              	.LBB765:
 107:shy_fft.h     ****             imag[i] = temp_imag[i];
 5756              		.loc 12 107 21 view .LVU1685
 5757 0142 3246     		mov	r2, r6
 5758 0144 0AA9     		add	r1, sp, #40
 5759 0146 FFF7FEFF 		bl	memcpy
 5760              	.LVL501:
 108:shy_fft.h     ****         }
 5761              		.loc 12 108 21 view .LVU1686
 5762 014a 0DF58151 		add	r1, sp, #4128
 5763 014e 3246     		mov	r2, r6
 5764 0150 2046     		mov	r0, r4
 5765 0152 0831     		adds	r1, r1, #8
 5766 0154 FFF7FEFF 		bl	memcpy
 5767              	.LVL502:
 5768              	.L334:
 108:shy_fft.h     ****         }
 5769              		.loc 12 108 21 view .LVU1687
 5770              	.LBE765:
 110:shy_fft.h     ****     
 5771              		.loc 12 110 5 view .LVU1688
 5772 0158 0DF5005D 		add	sp, sp, #8192
 5773 015c 0BB0     		add	sp, sp, #44
 5774              		.cfi_def_cfa_offset 36
 5775              		@ sp needed
 5776 015e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 110:shy_fft.h     ****     
 5777              		.loc 12 110 5 view .LVU1689
 5778              		.cfi_endproc
 5779              	.LFE5988:
 5781              		.section	.text._ZN6ShyFFTIfLj1024EE7InverseEPfS1_j,"axG",%progbits,_ZN6ShyFFTIfLj1024EE7InverseEPf
 5782              		.align	1
 5783              		.weak	_ZN6ShyFFTIfLj1024EE7InverseEPfS1_j
 5784              		.syntax unified
ARM GAS  /tmp/cch2Dr4w.s 			page 168


 5785              		.thumb
 5786              		.thumb_func
 5787              		.fpu fpv5-d16
 5789              	_ZN6ShyFFTIfLj1024EE7InverseEPfS1_j:
 5790              	.LVL503:
 5791              	.LFB5855:
  56:shy_fft.h     ****         // Perform complex conjugate
 5792              		.loc 12 56 10 is_stmt 1 view -0
 5793              		.cfi_startproc
 5794              		@ args = 0, pretend = 0, frame = 0
 5795              		@ frame_needed = 0, uses_anonymous_args = 0
  56:shy_fft.h     ****         // Perform complex conjugate
 5796              		.loc 12 56 10 is_stmt 0 view .LVU1691
 5797 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5798              		.cfi_def_cfa_offset 24
 5799              		.cfi_offset 3, -24
 5800              		.cfi_offset 4, -20
 5801              		.cfi_offset 5, -16
 5802              		.cfi_offset 6, -12
 5803              		.cfi_offset 7, -8
 5804              		.cfi_offset 14, -4
  56:shy_fft.h     ****         // Perform complex conjugate
 5805              		.loc 12 56 10 view .LVU1692
 5806 0002 0C46     		mov	r4, r1
 5807 0004 1D46     		mov	r5, r3
 5808 0006 9F00     		lsls	r7, r3, #2
 5809 0008 1646     		mov	r6, r2
 5810 000a 02EB8301 		add	r1, r2, r3, lsl #2
 5811              	.LVL504:
  56:shy_fft.h     ****         // Perform complex conjugate
 5812              		.loc 12 56 10 view .LVU1693
 5813 000e 1346     		mov	r3, r2
 5814              	.LVL505:
 5815              	.L352:
 5816              	.LBB766:
  58:shy_fft.h     ****             imag[i] = -imag[i];
 5817              		.loc 12 58 30 is_stmt 1 discriminator 3 view .LVU1694
 5818 0010 8B42     		cmp	r3, r1
 5819 0012 06D0     		beq	.L351
  59:shy_fft.h     ****         }
 5820              		.loc 12 59 21 is_stmt 0 discriminator 2 view .LVU1695
 5821 0014 D3ED007A 		vldr.32	s15, [r3]
 5822 0018 F1EE677A 		vneg.f32	s15, s15
 5823 001c E3EC017A 		vstmia.32	r3!, {s15}
  58:shy_fft.h     ****             imag[i] = -imag[i];
 5824              		.loc 12 58 9 is_stmt 1 discriminator 2 view .LVU1696
 5825 0020 F6E7     		b	.L352
 5826              	.L351:
 5827              	.LBE766:
  63:shy_fft.h     ****         
 5828              		.loc 12 63 16 is_stmt 0 view .LVU1697
 5829 0022 2146     		mov	r1, r4
 5830 0024 2B46     		mov	r3, r5
 5831 0026 FFF7FEFF 		bl	_ZN6ShyFFTIfLj1024EE7ComplexEPfS1_j
 5832              	.LVL506:
  66:shy_fft.h     ****         for (size_t i = 0; i < size; i++) {
 5833              		.loc 12 66 23 view .LVU1698
ARM GAS  /tmp/cch2Dr4w.s 			page 169


 5834 002a 07EE905A 		vmov	s15, r5	@ int
 5835 002e B7EE005B 		vmov.f64	d5, #1.0e+0
 5836 0032 2146     		mov	r1, r4
 5837 0034 B8EEE77B 		vcvt.f64.s32	d7, s15
 5838 0038 2744     		add	r7, r7, r4
 5839 003a 85EE076B 		vdiv.f64	d6, d5, d7
  66:shy_fft.h     ****         for (size_t i = 0; i < size; i++) {
 5840              		.loc 12 66 11 view .LVU1699
 5841 003e B7EEC66B 		vcvt.f32.f64	s12, d6
 5842              	.LVL507:
 5843              	.L354:
 5844              	.LBB767:
  67:shy_fft.h     ****             real[i] *= scale;
 5845              		.loc 12 67 30 is_stmt 1 discriminator 3 view .LVU1700
 5846 0042 B942     		cmp	r1, r7
 5847 0044 0CD0     		beq	.L350
  68:shy_fft.h     ****             imag[i] *= scale;
 5848              		.loc 12 68 21 is_stmt 0 discriminator 2 view .LVU1701
 5849 0046 D1ED007A 		vldr.32	s15, [r1]
 5850 004a 67EE867A 		vmul.f32	s15, s15, s12
 5851 004e E1EC017A 		vstmia.32	r1!, {s15}
  69:shy_fft.h     ****         }
 5852              		.loc 12 69 21 discriminator 2 view .LVU1702
 5853 0052 D6ED007A 		vldr.32	s15, [r6]
 5854 0056 67EE867A 		vmul.f32	s15, s15, s12
 5855 005a E6EC017A 		vstmia.32	r6!, {s15}
  67:shy_fft.h     ****             real[i] *= scale;
 5856              		.loc 12 67 9 is_stmt 1 discriminator 2 view .LVU1703
 5857 005e F0E7     		b	.L354
 5858              	.L350:
  67:shy_fft.h     ****             real[i] *= scale;
 5859              		.loc 12 67 9 is_stmt 0 discriminator 2 view .LVU1704
 5860              	.LBE767:
  71:shy_fft.h     ****     
 5861              		.loc 12 71 5 view .LVU1705
 5862 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  71:shy_fft.h     ****     
 5863              		.loc 12 71 5 view .LVU1706
 5864              		.cfi_endproc
 5865              	.LFE5855:
 5867              		.section	.text._ZN28PartitionedConvolutionReverb7ProcessEffPfS0_,"axG",%progbits,_ZN28PartitionedC
 5868              		.align	1
 5869              		.weak	_ZN28PartitionedConvolutionReverb7ProcessEffPfS0_
 5870              		.syntax unified
 5871              		.thumb
 5872              		.thumb_func
 5873              		.fpu fpv5-d16
 5875              	_ZN28PartitionedConvolutionReverb7ProcessEffPfS0_:
 5876              	.LVL508:
 5877              	.LFB5518:
 396:EchoBridgeWithUSB.cpp ****         // If no IR is loaded, pass through
 5878              		.loc 2 396 10 is_stmt 1 view -0
 5879              		.cfi_startproc
 5880              		@ args = 0, pretend = 0, frame = 8
 5881              		@ frame_needed = 0, uses_anonymous_args = 0
 398:EchoBridgeWithUSB.cpp ****             *outL = inL;
 5882              		.loc 2 398 9 view .LVU1708
ARM GAS  /tmp/cch2Dr4w.s 			page 170


 396:EchoBridgeWithUSB.cpp ****         // If no IR is loaded, pass through
 5883              		.loc 2 396 10 is_stmt 0 view .LVU1709
 5884 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5885              		.cfi_def_cfa_offset 36
 5886              		.cfi_offset 4, -36
 5887              		.cfi_offset 5, -32
 5888              		.cfi_offset 6, -28
 5889              		.cfi_offset 7, -24
 5890              		.cfi_offset 8, -20
 5891              		.cfi_offset 9, -16
 5892              		.cfi_offset 10, -12
 5893              		.cfi_offset 11, -8
 5894              		.cfi_offset 14, -4
 398:EchoBridgeWithUSB.cpp ****             *outL = inL;
 5895              		.loc 2 398 9 view .LVU1710
 5896 0004 0368     		ldr	r3, [r0]
 396:EchoBridgeWithUSB.cpp ****         // If no IR is loaded, pass through
 5897              		.loc 2 396 10 view .LVU1711
 5898 0006 0446     		mov	r4, r0
 5899 0008 2DED048B 		vpush.64	{d8, d9}
 5900              		.cfi_def_cfa_offset 52
 5901              		.cfi_offset 80, -52
 5902              		.cfi_offset 81, -48
 5903              		.cfi_offset 82, -44
 5904              		.cfi_offset 83, -40
 5905 000c 83B0     		sub	sp, sp, #12
 5906              		.cfi_def_cfa_offset 64
 396:EchoBridgeWithUSB.cpp ****         // If no IR is loaded, pass through
 5907              		.loc 2 396 10 view .LVU1712
 5908 000e B0EE409A 		vmov.f32	s18, s0
 5909 0012 F0EE608A 		vmov.f32	s17, s1
 5910 0016 CDE90012 		strd	r1, r2, [sp]
 398:EchoBridgeWithUSB.cpp ****             *outL = inL;
 5911              		.loc 2 398 9 view .LVU1713
 5912 001a 43B9     		cbnz	r3, .L358
 399:EchoBridgeWithUSB.cpp ****             *outR = inR;
 5913              		.loc 2 399 13 is_stmt 1 view .LVU1714
 399:EchoBridgeWithUSB.cpp ****             *outR = inR;
 5914              		.loc 2 399 19 is_stmt 0 view .LVU1715
 5915 001c 81ED000A 		vstr.32	s0, [r1]
 400:EchoBridgeWithUSB.cpp ****             return;
 5916              		.loc 2 400 13 is_stmt 1 view .LVU1716
 400:EchoBridgeWithUSB.cpp ****             return;
 5917              		.loc 2 400 19 is_stmt 0 view .LVU1717
 5918 0020 C2ED000A 		vstr.32	s1, [r2]
 401:EchoBridgeWithUSB.cpp ****         }
 5919              		.loc 2 401 13 is_stmt 1 view .LVU1718
 586:EchoBridgeWithUSB.cpp **** };
 5920              		.loc 2 586 5 is_stmt 0 view .LVU1719
 5921 0024 03B0     		add	sp, sp, #12
 5922              		.cfi_remember_state
 5923              		.cfi_def_cfa_offset 52
 5924              		@ sp needed
 5925 0026 BDEC048B 		vldm	sp!, {d8-d9}
 5926              		.cfi_restore 82
 5927              		.cfi_restore 83
 5928              		.cfi_restore 80
ARM GAS  /tmp/cch2Dr4w.s 			page 171


 5929              		.cfi_restore 81
 5930              		.cfi_def_cfa_offset 36
 5931 002a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5932              	.L358:
 5933              		.cfi_restore_state
 405:EchoBridgeWithUSB.cpp ****         g_predelayBufferRight[predelayBufferPos] = inR;
 5934              		.loc 2 405 9 is_stmt 1 view .LVU1720
 405:EchoBridgeWithUSB.cpp ****         g_predelayBufferRight[predelayBufferPos] = inR;
 5935              		.loc 2 405 26 is_stmt 0 view .LVU1721
 5936 002e 00F54055 		add	r5, r0, #12288
 405:EchoBridgeWithUSB.cpp ****         g_predelayBufferRight[predelayBufferPos] = inR;
 5937              		.loc 2 405 45 view .LVU1722
 5938 0032 BA4F     		ldr	r7, .L378
 406:EchoBridgeWithUSB.cpp ****         
 5939              		.loc 2 406 50 view .LVU1723
 5940 0034 BA4E     		ldr	r6, .L378+4
 409:EchoBridgeWithUSB.cpp ****         float delayedL = g_predelayBuffer[delayedPos];
 5941              		.loc 2 409 71 view .LVU1724
 5942 0036 45F6C051 		movw	r1, #24000
 5943              	.LVL509:
 405:EchoBridgeWithUSB.cpp ****         g_predelayBufferRight[predelayBufferPos] = inR;
 5944              		.loc 2 405 26 view .LVU1725
 5945 003a D5F81432 		ldr	r3, [r5, #532]
 409:EchoBridgeWithUSB.cpp ****         float delayedL = g_predelayBuffer[delayedPos];
 5946              		.loc 2 409 71 view .LVU1726
 5947 003e D5F81802 		ldr	r0, [r5, #536]
 5948              	.LVL510:
 405:EchoBridgeWithUSB.cpp ****         g_predelayBufferRight[predelayBufferPos] = inR;
 5949              		.loc 2 405 45 view .LVU1727
 5950 0042 07EB8302 		add	r2, r7, r3, lsl #2
 5951              	.LVL511:
 405:EchoBridgeWithUSB.cpp ****         g_predelayBufferRight[predelayBufferPos] = inR;
 5952              		.loc 2 405 45 view .LVU1728
 5953 0046 82ED000A 		vstr.32	s0, [r2]
 406:EchoBridgeWithUSB.cpp ****         
 5954              		.loc 2 406 9 is_stmt 1 view .LVU1729
 406:EchoBridgeWithUSB.cpp ****         
 5955              		.loc 2 406 50 is_stmt 0 view .LVU1730
 5956 004a 06EB8302 		add	r2, r6, r3, lsl #2
 5957 004e C2ED000A 		vstr.32	s1, [r2]
 409:EchoBridgeWithUSB.cpp ****         float delayedL = g_predelayBuffer[delayedPos];
 5958              		.loc 2 409 9 is_stmt 1 view .LVU1731
 409:EchoBridgeWithUSB.cpp ****         float delayedL = g_predelayBuffer[delayedPos];
 5959              		.loc 2 409 71 is_stmt 0 view .LVU1732
 5960 0052 5A18     		adds	r2, r3, r1
 414:EchoBridgeWithUSB.cpp ****         
 5961              		.loc 2 414 48 view .LVU1733
 5962 0054 0133     		adds	r3, r3, #1
 409:EchoBridgeWithUSB.cpp ****         float delayedL = g_predelayBuffer[delayedPos];
 5963              		.loc 2 409 71 view .LVU1734
 5964 0056 121A     		subs	r2, r2, r0
 409:EchoBridgeWithUSB.cpp ****         float delayedL = g_predelayBuffer[delayedPos];
 5965              		.loc 2 409 16 view .LVU1735
 5966 0058 B2FBF1F0 		udiv	r0, r2, r1
 5967 005c 01FB1022 		mls	r2, r1, r0, r2
 5968              	.LVL512:
 410:EchoBridgeWithUSB.cpp ****         float delayedR = g_predelayBufferRight[delayedPos];
ARM GAS  /tmp/cch2Dr4w.s 			page 172


 5969              		.loc 2 410 9 is_stmt 1 view .LVU1736
 410:EchoBridgeWithUSB.cpp ****         float delayedR = g_predelayBufferRight[delayedPos];
 5970              		.loc 2 410 15 is_stmt 0 view .LVU1737
 5971 0060 07EB8207 		add	r7, r7, r2, lsl #2
 411:EchoBridgeWithUSB.cpp ****         
 5972              		.loc 2 411 15 view .LVU1738
 5973 0064 06EB8202 		add	r2, r6, r2, lsl #2
 5974              	.LVL513:
 410:EchoBridgeWithUSB.cpp ****         float delayedR = g_predelayBufferRight[delayedPos];
 5975              		.loc 2 410 15 view .LVU1739
 5976 0068 3F68     		ldr	r7, [r7]	@ float
 5977              	.LVL514:
 411:EchoBridgeWithUSB.cpp ****         
 5978              		.loc 2 411 9 is_stmt 1 view .LVU1740
 411:EchoBridgeWithUSB.cpp ****         
 5979              		.loc 2 411 15 is_stmt 0 view .LVU1741
 5980 006a 1068     		ldr	r0, [r2]	@ float
 5981              	.LVL515:
 414:EchoBridgeWithUSB.cpp ****         
 5982              		.loc 2 414 9 is_stmt 1 view .LVU1742
 414:EchoBridgeWithUSB.cpp ****         
 5983              		.loc 2 414 53 is_stmt 0 view .LVU1743
 5984 006c B3FBF1F2 		udiv	r2, r3, r1
 5985 0070 01FB1233 		mls	r3, r1, r2, r3
 417:EchoBridgeWithUSB.cpp ****         earlyInputBufferRight[earlyInputBufferPos] = delayedR;
 5986              		.loc 2 417 26 view .LVU1744
 5987 0074 D5F80C22 		ldr	r2, [r5, #524]
 414:EchoBridgeWithUSB.cpp ****         
 5988              		.loc 2 414 27 view .LVU1745
 5989 0078 C5F81432 		str	r3, [r5, #532]
 5990              	.LVL516:
 417:EchoBridgeWithUSB.cpp ****         earlyInputBufferRight[earlyInputBufferPos] = delayedR;
 5991              		.loc 2 417 9 is_stmt 1 view .LVU1746
 5992 007c 04EB8203 		add	r3, r4, r2, lsl #2
 424:EchoBridgeWithUSB.cpp ****         if (earlyInputBufferPos >= EARLY_FFT_SIZE) {
 5993              		.loc 2 424 28 is_stmt 0 view .LVU1747
 5994 0080 0132     		adds	r2, r2, #1
 417:EchoBridgeWithUSB.cpp ****         earlyInputBufferRight[earlyInputBufferPos] = delayedR;
 5995              		.loc 2 417 47 view .LVU1748
 5996 0082 03F50053 		add	r3, r3, #8192
 5997              	.LBB768:
 425:EchoBridgeWithUSB.cpp ****             // Reset input buffer position
 5998              		.loc 2 425 9 view .LVU1749
 5999 0086 3F2A     		cmp	r2, #63
 6000              	.LBE768:
 417:EchoBridgeWithUSB.cpp ****         earlyInputBufferRight[earlyInputBufferPos] = delayedR;
 6001              		.loc 2 417 47 view .LVU1750
 6002 0088 03F60C41 		addw	r1, r3, #3084
 418:EchoBridgeWithUSB.cpp ****         
 6003              		.loc 2 418 52 view .LVU1751
 6004 008c 03F60C53 		addw	r3, r3, #3340
 417:EchoBridgeWithUSB.cpp ****         earlyInputBufferRight[earlyInputBufferPos] = delayedR;
 6005              		.loc 2 417 47 view .LVU1752
 6006 0090 0F60     		str	r7, [r1]	@ float
 418:EchoBridgeWithUSB.cpp ****         
 6007              		.loc 2 418 9 is_stmt 1 view .LVU1753
 418:EchoBridgeWithUSB.cpp ****         
ARM GAS  /tmp/cch2Dr4w.s 			page 173


 6008              		.loc 2 418 52 is_stmt 0 view .LVU1754
 6009 0092 1860     		str	r0, [r3]	@ float
 420:EchoBridgeWithUSB.cpp ****         g_lateInputBufferRight[lateInputBufferPos] = delayedR;
 6010              		.loc 2 420 9 is_stmt 1 view .LVU1755
 420:EchoBridgeWithUSB.cpp ****         g_lateInputBufferRight[lateInputBufferPos] = delayedR;
 6011              		.loc 2 420 47 is_stmt 0 view .LVU1756
 6012 0094 A349     		ldr	r1, .L378+8
 420:EchoBridgeWithUSB.cpp ****         g_lateInputBufferRight[lateInputBufferPos] = delayedR;
 6013              		.loc 2 420 27 view .LVU1757
 6014 0096 D5F81062 		ldr	r6, [r5, #528]
 421:EchoBridgeWithUSB.cpp ****         
 6015              		.loc 2 421 52 view .LVU1758
 6016 009a A34B     		ldr	r3, .L378+12
 420:EchoBridgeWithUSB.cpp ****         g_lateInputBufferRight[lateInputBufferPos] = delayedR;
 6017              		.loc 2 420 47 view .LVU1759
 6018 009c 01EB8601 		add	r1, r1, r6, lsl #2
 421:EchoBridgeWithUSB.cpp ****         
 6019              		.loc 2 421 52 view .LVU1760
 6020 00a0 03EB8603 		add	r3, r3, r6, lsl #2
 420:EchoBridgeWithUSB.cpp ****         g_lateInputBufferRight[lateInputBufferPos] = delayedR;
 6021              		.loc 2 420 47 view .LVU1761
 6022 00a4 0F60     		str	r7, [r1]	@ float
 421:EchoBridgeWithUSB.cpp ****         
 6023              		.loc 2 421 9 is_stmt 1 view .LVU1762
 421:EchoBridgeWithUSB.cpp ****         
 6024              		.loc 2 421 52 is_stmt 0 view .LVU1763
 6025 00a6 1860     		str	r0, [r3]	@ float
 424:EchoBridgeWithUSB.cpp ****         if (earlyInputBufferPos >= EARLY_FFT_SIZE) {
 6026              		.loc 2 424 9 is_stmt 1 view .LVU1764
 425:EchoBridgeWithUSB.cpp ****             // Reset input buffer position
 6027              		.loc 2 425 9 view .LVU1765
 6028              	.LBB779:
 6029 00a8 00F28D80 		bhi	.L360
 6030              	.LBE779:
 424:EchoBridgeWithUSB.cpp ****         if (earlyInputBufferPos >= EARLY_FFT_SIZE) {
 6031              		.loc 2 424 28 is_stmt 0 view .LVU1766
 6032 00ac C5F80C22 		str	r2, [r5, #524]
 6033              	.LVL517:
 6034              	.L361:
 487:EchoBridgeWithUSB.cpp ****         if (lateInputBufferPos >= LATE_FFT_SIZE) {
 6035              		.loc 2 487 9 is_stmt 1 view .LVU1767
 6036 00b0 04F54052 		add	r2, r4, #12288
 487:EchoBridgeWithUSB.cpp ****         if (lateInputBufferPos >= LATE_FFT_SIZE) {
 6037              		.loc 2 487 27 is_stmt 0 view .LVU1768
 6038 00b4 D2F81032 		ldr	r3, [r2, #528]
 6039 00b8 0133     		adds	r3, r3, #1
 488:EchoBridgeWithUSB.cpp ****             // Reset input buffer position
 6040              		.loc 2 488 9 is_stmt 1 view .LVU1769
 6041              	.LBB780:
 6042 00ba B3F5806F 		cmp	r3, #1024
 6043 00be 80F03D81 		bcs	.L365
 6044              	.LBE780:
 487:EchoBridgeWithUSB.cpp ****         if (lateInputBufferPos >= LATE_FFT_SIZE) {
 6045              		.loc 2 487 27 is_stmt 0 view .LVU1770
 6046 00c2 C2F81032 		str	r3, [r2, #528]
 6047              	.L366:
 550:EchoBridgeWithUSB.cpp ****         float wetR = earlyOutputBufferRight[0] + g_lateOutputBufferRight[0];
ARM GAS  /tmp/cch2Dr4w.s 			page 174


 6048              		.loc 2 550 9 is_stmt 1 view .LVU1771
 6049              	.LVL518:
 551:EchoBridgeWithUSB.cpp ****         
 6050              		.loc 2 551 9 view .LVU1772
 551:EchoBridgeWithUSB.cpp ****         
 6051              		.loc 2 551 15 is_stmt 0 view .LVU1773
 6052 00c6 994B     		ldr	r3, .L378+16
 554:EchoBridgeWithUSB.cpp ****         float filteredL = lowCutFilterL.High();
 6053              		.loc 2 554 30 view .LVU1774
 6054 00c8 04F54850 		add	r0, r4, #12800
 551:EchoBridgeWithUSB.cpp ****         
 6055              		.loc 2 551 15 view .LVU1775
 6056 00cc D5ED039A 		vldr.32	s19, [r5, #12]
 6057 00d0 D3ED007A 		vldr.32	s15, [r3]
 550:EchoBridgeWithUSB.cpp ****         float wetR = earlyOutputBufferRight[0] + g_lateOutputBufferRight[0];
 6058              		.loc 2 550 41 view .LVU1776
 6059 00d4 04F53853 		add	r3, r4, #11776
 554:EchoBridgeWithUSB.cpp ****         float filteredL = lowCutFilterL.High();
 6060              		.loc 2 554 30 view .LVU1777
 6061 00d8 3C30     		adds	r0, r0, #60
 550:EchoBridgeWithUSB.cpp ****         float wetR = earlyOutputBufferRight[0] + g_lateOutputBufferRight[0];
 6062              		.loc 2 550 15 view .LVU1778
 6063 00da 93ED030A 		vldr.32	s0, [r3, #12]
 551:EchoBridgeWithUSB.cpp ****         
 6064              		.loc 2 551 15 view .LVU1779
 6065 00de 79EEA79A 		vadd.f32	s19, s19, s15
 6066              	.LVL519:
 554:EchoBridgeWithUSB.cpp ****         float filteredL = lowCutFilterL.High();
 6067              		.loc 2 554 9 is_stmt 1 view .LVU1780
 550:EchoBridgeWithUSB.cpp ****         float wetR = earlyOutputBufferRight[0] + g_lateOutputBufferRight[0];
 6068              		.loc 2 550 15 is_stmt 0 view .LVU1781
 6069 00e2 934B     		ldr	r3, .L378+20
 6070              	.LVL520:
 550:EchoBridgeWithUSB.cpp ****         float wetR = earlyOutputBufferRight[0] + g_lateOutputBufferRight[0];
 6071              		.loc 2 550 15 view .LVU1782
 6072 00e4 D3ED007A 		vldr.32	s15, [r3]
 554:EchoBridgeWithUSB.cpp ****         float filteredL = lowCutFilterL.High();
 6073              		.loc 2 554 30 view .LVU1783
 6074 00e8 30EE270A 		vadd.f32	s0, s0, s15
 6075 00ec FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 6076              	.LVL521:
 555:EchoBridgeWithUSB.cpp ****         highCutFilterL.Process(filteredL);
 6077              		.loc 2 555 9 is_stmt 1 view .LVU1784
 6078              	.LBB795:
 6079              	.LBI795:
  31:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  32:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  33:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     */
  34:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  35:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  36:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  37:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** 
  38:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  39:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     */
  40:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     void Process(float in);
  41:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  42:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
ARM GAS  /tmp/cch2Dr4w.s 			page 175


  43:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  44:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  45:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     */
  46:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  47:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  48:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  49:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  50:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     */
  51:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  52:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h **** 
  53:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  54:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  55:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     */
  56:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  57:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** lowpass output
  58:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  59:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     */
  60:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
  61:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** highpass output
  62:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  63:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     */
  64:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 6080              		.loc 9 64 18 view .LVU1785
 6081              	.LBB796:
 6082              		.loc 9 64 27 view .LVU1786
 6083              		.loc 9 64 27 is_stmt 0 view .LVU1787
 6084              	.LBE796:
 6085              	.LBE795:
 556:EchoBridgeWithUSB.cpp ****         filteredL = highCutFilterL.Low();
 6086              		.loc 2 556 9 is_stmt 1 view .LVU1788
 556:EchoBridgeWithUSB.cpp ****         filteredL = highCutFilterL.Low();
 6087              		.loc 2 556 31 is_stmt 0 view .LVU1789
 6088 00f0 04F54A50 		add	r0, r4, #12928
 6089 00f4 95ED9C0A 		vldr.32	s0, [r5, #624]
 6090 00f8 0830     		adds	r0, r0, #8
 6091 00fa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 6092              	.LVL522:
 557:EchoBridgeWithUSB.cpp ****         
 6093              		.loc 2 557 9 is_stmt 1 view .LVU1790
 6094              	.LBB797:
 6095              	.LBI797:
  60:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** highpass output
 6096              		.loc 9 60 18 view .LVU1791
 6097              	.LBB798:
  60:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** highpass output
 6098              		.loc 9 60 26 view .LVU1792
 6099              	.LBE798:
 6100              	.LBE797:
 559:EchoBridgeWithUSB.cpp ****         float filteredR = lowCutFilterR.High();
 6101              		.loc 2 559 30 is_stmt 0 view .LVU1793
 6102 00fe 04F54B50 		add	r0, r4, #12992
 6103 0102 B0EE690A 		vmov.f32	s0, s19
 6104              	.LBB800:
 6105              	.LBB799:
  60:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** highpass output
 6106              		.loc 9 60 33 view .LVU1794
 6107 0106 95EDAE8A 		vldr.32	s16, [r5, #696]
ARM GAS  /tmp/cch2Dr4w.s 			page 176


 6108              	.LVL523:
  60:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** highpass output
 6109              		.loc 9 60 33 view .LVU1795
 6110              	.LBE799:
 6111              	.LBE800:
 559:EchoBridgeWithUSB.cpp ****         float filteredR = lowCutFilterR.High();
 6112              		.loc 2 559 9 is_stmt 1 view .LVU1796
 559:EchoBridgeWithUSB.cpp ****         float filteredR = lowCutFilterR.High();
 6113              		.loc 2 559 30 is_stmt 0 view .LVU1797
 6114 010a 1430     		adds	r0, r0, #20
 6115 010c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 6116              	.LVL524:
 560:EchoBridgeWithUSB.cpp ****         highCutFilterR.Process(filteredR);
 6117              		.loc 2 560 9 is_stmt 1 view .LVU1798
 6118              	.LBB801:
 6119              	.LBI801:
 6120              		.loc 9 64 18 view .LVU1799
 6121              	.LBB802:
 6122              		.loc 9 64 27 view .LVU1800
 6123              		.loc 9 64 27 is_stmt 0 view .LVU1801
 6124              	.LBE802:
 6125              	.LBE801:
 561:EchoBridgeWithUSB.cpp ****         filteredR = highCutFilterR.Low();
 6126              		.loc 2 561 9 is_stmt 1 view .LVU1802
 561:EchoBridgeWithUSB.cpp ****         filteredR = highCutFilterR.Low();
 6127              		.loc 2 561 31 is_stmt 0 view .LVU1803
 6128 0110 04F54C50 		add	r0, r4, #13056
 6129 0114 95EDC20A 		vldr.32	s0, [r5, #776]
 6130 0118 2030     		adds	r0, r0, #32
 6131 011a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 6132              	.LVL525:
 562:EchoBridgeWithUSB.cpp ****         
 6133              		.loc 2 562 9 is_stmt 1 view .LVU1804
 6134              	.LBB803:
 6135              	.LBI803:
  60:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** highpass output
 6136              		.loc 9 60 18 view .LVU1805
 6137              	.LBB804:
  60:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** highpass output
 6138              		.loc 9 60 26 view .LVU1806
 6139              	.LBE804:
 6140              	.LBE803:
 6141              	.LBB806:
 565:EchoBridgeWithUSB.cpp ****             float mid = (filteredL + filteredR) * 0.5f;
 6142              		.loc 2 565 9 is_stmt 0 view .LVU1807
 6143 011e F7EE006A 		vmov.f32	s13, #1.0e+0
 565:EchoBridgeWithUSB.cpp ****             float mid = (filteredL + filteredR) * 0.5f;
 6144              		.loc 2 565 13 view .LVU1808
 6145 0122 D5ED8C5A 		vldr.32	s11, [r5, #560]
 6146              	.LBE806:
 6147              	.LBB808:
 6148              	.LBB805:
  60:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** highpass output
 6149              		.loc 9 60 33 view .LVU1809
 6150 0126 D5EDD47A 		vldr.32	s15, [r5, #848]
 6151              	.LVL526:
  60:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     /** highpass output
ARM GAS  /tmp/cch2Dr4w.s 			page 177


 6152              		.loc 9 60 33 view .LVU1810
 6153              	.LBE805:
 6154              	.LBE808:
 565:EchoBridgeWithUSB.cpp ****             float mid = (filteredL + filteredR) * 0.5f;
 6155              		.loc 2 565 9 is_stmt 1 view .LVU1811
 6156              	.LBB809:
 6157 012a F4EE665A 		vcmp.f32	s11, s13
 6158 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6159 0132 0FD0     		beq	.L370
 6160              	.LBB807:
 566:EchoBridgeWithUSB.cpp ****             float side = (filteredL - filteredR) * 0.5f * stereoWidth;
 6161              		.loc 2 566 13 view .LVU1812
 566:EchoBridgeWithUSB.cpp ****             float side = (filteredL - filteredR) * 0.5f * stereoWidth;
 6162              		.loc 2 566 36 is_stmt 0 view .LVU1813
 6163 0134 38EE276A 		vadd.f32	s12, s16, s15
 6164              	.LVL527:
 567:EchoBridgeWithUSB.cpp ****             filteredL = mid + side;
 6165              		.loc 2 567 13 is_stmt 1 view .LVU1814
 567:EchoBridgeWithUSB.cpp ****             filteredL = mid + side;
 6166              		.loc 2 567 50 is_stmt 0 view .LVU1815
 6167 0138 B6EE007A 		vmov.f32	s14, #5.0e-1
 567:EchoBridgeWithUSB.cpp ****             filteredL = mid + side;
 6168              		.loc 2 567 37 view .LVU1816
 6169 013c 38EE678A 		vsub.f32	s16, s16, s15
 6170              	.LVL528:
 567:EchoBridgeWithUSB.cpp ****             filteredL = mid + side;
 6171              		.loc 2 567 50 view .LVU1817
 6172 0140 28EE078A 		vmul.f32	s16, s16, s14
 567:EchoBridgeWithUSB.cpp ****             filteredL = mid + side;
 6173              		.loc 2 567 19 view .LVU1818
 6174 0144 68EE257A 		vmul.f32	s15, s16, s11
 6175              	.LVL529:
 568:EchoBridgeWithUSB.cpp ****             filteredR = mid - side;
 6176              		.loc 2 568 13 is_stmt 1 view .LVU1819
 568:EchoBridgeWithUSB.cpp ****             filteredR = mid - side;
 6177              		.loc 2 568 23 is_stmt 0 view .LVU1820
 6178 0148 B0EE678A 		vmov.f32	s16, s15
 569:EchoBridgeWithUSB.cpp ****         }
 6179              		.loc 2 569 23 view .LVU1821
 6180 014c D6EE077A 		vfnms.f32	s15, s12, s14
 6181              	.LVL530:
 568:EchoBridgeWithUSB.cpp ****             filteredR = mid - side;
 6182              		.loc 2 568 23 view .LVU1822
 6183 0150 A6EE078A 		vfma.f32	s16, s12, s14
 6184              	.LVL531:
 569:EchoBridgeWithUSB.cpp ****         }
 6185              		.loc 2 569 13 is_stmt 1 view .LVU1823
 6186              	.L370:
 569:EchoBridgeWithUSB.cpp ****         }
 6187              		.loc 2 569 13 is_stmt 0 view .LVU1824
 6188              	.LBE807:
 6189              	.LBE809:
 573:EchoBridgeWithUSB.cpp ****         *outR = inR * (1.0f - dryWet) + filteredR * dryWet;
 6190              		.loc 2 573 9 is_stmt 1 view .LVU1825
 573:EchoBridgeWithUSB.cpp ****         *outR = inR * (1.0f - dryWet) + filteredR * dryWet;
 6191              		.loc 2 573 31 is_stmt 0 view .LVU1826
 6192 0154 95ED877A 		vldr.32	s14, [r5, #540]
ARM GAS  /tmp/cch2Dr4w.s 			page 178


 6193              	.LBB810:
 578:EchoBridgeWithUSB.cpp ****             earlyOutputBufferRight[i] = earlyOutputBufferRight[i + 1];
 6194              		.loc 2 578 34 view .LVU1827
 6195 0158 04F53851 		add	r1, r4, #11776
 6196              	.LBE810:
 573:EchoBridgeWithUSB.cpp ****         *outR = inR * (1.0f - dryWet) + filteredR * dryWet;
 6197              		.loc 2 573 15 view .LVU1828
 6198 015c 009B     		ldr	r3, [sp]
 6199              	.LBB811:
 578:EchoBridgeWithUSB.cpp ****             earlyOutputBufferRight[i] = earlyOutputBufferRight[i + 1];
 6200              		.loc 2 578 34 view .LVU1829
 6201 015e 04F53850 		add	r0, r4, #11776
 6202              	.LBE811:
 573:EchoBridgeWithUSB.cpp ****         *outR = inR * (1.0f - dryWet) + filteredR * dryWet;
 6203              		.loc 2 573 29 view .LVU1830
 6204 0162 36EEC76A 		vsub.f32	s12, s13, s14
 6205              	.LBB812:
 578:EchoBridgeWithUSB.cpp ****             earlyOutputBufferRight[i] = earlyOutputBufferRight[i + 1];
 6206              		.loc 2 578 34 view .LVU1831
 6207 0166 FC22     		movs	r2, #252
 6208              	.LBE812:
 573:EchoBridgeWithUSB.cpp ****         *outR = inR * (1.0f - dryWet) + filteredR * dryWet;
 6209              		.loc 2 573 51 view .LVU1832
 6210 0168 27EE087A 		vmul.f32	s14, s14, s16
 6211              	.LBB813:
 578:EchoBridgeWithUSB.cpp ****             earlyOutputBufferRight[i] = earlyOutputBufferRight[i + 1];
 6212              		.loc 2 578 34 view .LVU1833
 6213 016c 1031     		adds	r1, r1, #16
 6214 016e 0C30     		adds	r0, r0, #12
 6215              	.LBE813:
 573:EchoBridgeWithUSB.cpp ****         *outR = inR * (1.0f - dryWet) + filteredR * dryWet;
 6216              		.loc 2 573 39 view .LVU1834
 6217 0170 A6EE097A 		vfma.f32	s14, s12, s18
 573:EchoBridgeWithUSB.cpp ****         *outR = inR * (1.0f - dryWet) + filteredR * dryWet;
 6218              		.loc 2 573 15 view .LVU1835
 6219 0174 83ED007A 		vstr.32	s14, [r3]
 574:EchoBridgeWithUSB.cpp ****         
 6220              		.loc 2 574 9 is_stmt 1 view .LVU1836
 574:EchoBridgeWithUSB.cpp ****         
 6221              		.loc 2 574 31 is_stmt 0 view .LVU1837
 6222 0178 95ED878A 		vldr.32	s16, [r5, #540]
 6223              	.LVL532:
 574:EchoBridgeWithUSB.cpp ****         
 6224              		.loc 2 574 15 view .LVU1838
 6225 017c 019B     		ldr	r3, [sp, #4]
 574:EchoBridgeWithUSB.cpp ****         
 6226              		.loc 2 574 29 view .LVU1839
 6227 017e 76EEC86A 		vsub.f32	s13, s13, s16
 574:EchoBridgeWithUSB.cpp ****         
 6228              		.loc 2 574 51 view .LVU1840
 6229 0182 28EE278A 		vmul.f32	s16, s16, s15
 574:EchoBridgeWithUSB.cpp ****         
 6230              		.loc 2 574 39 view .LVU1841
 6231 0186 A6EEA88A 		vfma.f32	s16, s13, s17
 574:EchoBridgeWithUSB.cpp ****         
 6232              		.loc 2 574 15 view .LVU1842
 6233 018a 83ED008A 		vstr.32	s16, [r3]
ARM GAS  /tmp/cch2Dr4w.s 			page 179


 577:EchoBridgeWithUSB.cpp ****             earlyOutputBuffer[i] = earlyOutputBuffer[i + 1];
 6234              		.loc 2 577 9 is_stmt 1 view .LVU1843
 6235              	.LVL533:
 6236              	.LBB814:
 577:EchoBridgeWithUSB.cpp ****             earlyOutputBuffer[i] = earlyOutputBuffer[i + 1];
 6237              		.loc 2 577 30 view .LVU1844
 578:EchoBridgeWithUSB.cpp ****             earlyOutputBufferRight[i] = earlyOutputBufferRight[i + 1];
 6238              		.loc 2 578 34 is_stmt 0 view .LVU1845
 6239 018e FFF7FEFF 		bl	memmove
 6240              	.LVL534:
 579:EchoBridgeWithUSB.cpp ****         }
 6241              		.loc 2 579 39 view .LVU1846
 6242 0192 04F54051 		add	r1, r4, #12288
 6243 0196 04F54050 		add	r0, r4, #12288
 6244 019a FC22     		movs	r2, #252
 6245 019c 1031     		adds	r1, r1, #16
 6246 019e 0C30     		adds	r0, r0, #12
 6247 01a0 FFF7FEFF 		bl	memmove
 6248              	.LVL535:
 579:EchoBridgeWithUSB.cpp ****         }
 6249              		.loc 2 579 39 view .LVU1847
 6250              	.LBE814:
 6251              	.LBB815:
 583:EchoBridgeWithUSB.cpp ****             g_lateOutputBufferRight[i] = g_lateOutputBufferRight[i + 1];
 6252              		.loc 2 583 35 view .LVU1848
 6253 01a4 6349     		ldr	r1, .L378+24
 6254 01a6 40F6FC72 		movw	r2, #4092
 6255 01aa 081F     		subs	r0, r1, #4
 6256 01ac FFF7FEFF 		bl	memmove
 6257              	.LVL536:
 584:EchoBridgeWithUSB.cpp ****         }
 6258              		.loc 2 584 40 view .LVU1849
 6259 01b0 6149     		ldr	r1, .L378+28
 6260 01b2 40F6FC72 		movw	r2, #4092
 6261 01b6 081F     		subs	r0, r1, #4
 6262              	.LBE815:
 586:EchoBridgeWithUSB.cpp **** };
 6263              		.loc 2 586 5 view .LVU1850
 6264 01b8 03B0     		add	sp, sp, #12
 6265              		.cfi_remember_state
 6266              		.cfi_def_cfa_offset 52
 6267              	.LVL537:
 586:EchoBridgeWithUSB.cpp **** };
 6268              		.loc 2 586 5 view .LVU1851
 6269              		@ sp needed
 6270 01ba BDEC048B 		vldm	sp!, {d8-d9}
 6271              		.cfi_restore 82
 6272              		.cfi_restore 83
 6273              		.cfi_restore 80
 6274              		.cfi_restore 81
 6275              		.cfi_def_cfa_offset 36
 6276              	.LVL538:
 586:EchoBridgeWithUSB.cpp **** };
 6277              		.loc 2 586 5 view .LVU1852
 6278 01be BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6279              		.cfi_restore 14
 6280              		.cfi_restore 11
ARM GAS  /tmp/cch2Dr4w.s 			page 180


 6281              		.cfi_restore 10
 6282              		.cfi_restore 9
 6283              		.cfi_restore 8
 6284              		.cfi_restore 7
 6285              		.cfi_restore 6
 6286              		.cfi_restore 5
 6287              		.cfi_restore 4
 6288              		.cfi_def_cfa_offset 0
 6289              	.LVL539:
 6290              	.LBB816:
 584:EchoBridgeWithUSB.cpp ****         }
 6291              		.loc 2 584 40 view .LVU1853
 6292 01c2 FFF7FEBF 		b	memmove
 6293              	.LVL540:
 6294              	.L360:
 6295              		.cfi_restore_state
 584:EchoBridgeWithUSB.cpp ****         }
 6296              		.loc 2 584 40 view .LVU1854
 6297              	.LBE816:
 6298              	.LBB817:
 6299              	.LBB769:
 427:EchoBridgeWithUSB.cpp ****             
 6300              		.loc 2 427 13 is_stmt 1 view .LVU1855
 430:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6301              		.loc 2 430 20 is_stmt 0 view .LVU1856
 6302 01c6 04F50859 		add	r9, r4, #8704
 431:EchoBridgeWithUSB.cpp ****             
 6303              		.loc 2 431 42 view .LVU1857
 6304 01ca 04F50C58 		add	r8, r4, #8960
 427:EchoBridgeWithUSB.cpp ****             
 6305              		.loc 2 427 33 view .LVU1858
 6306 01ce 4FF0000B 		mov	fp, #0
 430:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6307              		.loc 2 430 19 view .LVU1859
 6308 01d2 04F53051 		add	r1, r4, #11264
 430:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6309              		.loc 2 430 20 view .LVU1860
 6310 01d6 09F10C09 		add	r9, r9, #12
 6311 01da 04F51057 		add	r7, r4, #9216
 6312              	.LVL541:
 431:EchoBridgeWithUSB.cpp ****             
 6313              		.loc 2 431 42 view .LVU1861
 6314 01de 08F10C08 		add	r8, r8, #12
 431:EchoBridgeWithUSB.cpp ****             
 6315              		.loc 2 431 28 view .LVU1862
 6316 01e2 04F10C0A 		add	r10, r4, #12
 6317 01e6 04F51456 		add	r6, r4, #9472
 6318 01ea 0C37     		adds	r7, r7, #12
 430:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6319              		.loc 2 430 19 view .LVU1863
 6320 01ec 4FF48072 		mov	r2, #256
 6321              	.LVL542:
 430:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6322              		.loc 2 430 19 view .LVU1864
 6323 01f0 0C31     		adds	r1, r1, #12
 427:EchoBridgeWithUSB.cpp ****             
 6324              		.loc 2 427 33 view .LVU1865
ARM GAS  /tmp/cch2Dr4w.s 			page 181


 6325 01f2 C5F80CB2 		str	fp, [r5, #524]
 430:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6326              		.loc 2 430 13 is_stmt 1 view .LVU1866
 430:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6327              		.loc 2 430 19 is_stmt 0 view .LVU1867
 6328 01f6 4846     		mov	r0, r9
 6329              	.LVL543:
 430:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6330              		.loc 2 430 19 view .LVU1868
 6331 01f8 FFF7FEFF 		bl	memcpy
 6332              	.LVL544:
 431:EchoBridgeWithUSB.cpp ****             
 6333              		.loc 2 431 13 is_stmt 1 view .LVU1869
 6334 01fc 0C36     		adds	r6, r6, #12
 431:EchoBridgeWithUSB.cpp ****             
 6335              		.loc 2 431 28 is_stmt 0 view .LVU1870
 6336 01fe 4246     		mov	r2, r8
 6337 0200 4946     		mov	r1, r9
 6338 0202 5046     		mov	r0, r10
 6339 0204 FFF7FEFF 		bl	_ZN6ShyFFTIfLj64EE6DirectEPKfPf
 6340              	.LVL545:
 433:EchoBridgeWithUSB.cpp ****                 earlyFreqReal[i] = earlyTimeOut[i];
 6341              		.loc 2 433 13 is_stmt 1 view .LVU1871
 6342              	.LBB770:
 433:EchoBridgeWithUSB.cpp ****                 earlyFreqReal[i] = earlyTimeOut[i];
 6343              		.loc 2 433 34 view .LVU1872
 434:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = 0.0f;
 6344              		.loc 2 434 34 is_stmt 0 view .LVU1873
 6345 0208 4FF48072 		mov	r2, #256
 6346 020c 4146     		mov	r1, r8
 6347 020e 3846     		mov	r0, r7
 6348 0210 FFF7FEFF 		bl	memcpy
 6349              	.LVL546:
 435:EchoBridgeWithUSB.cpp ****             }
 6350              		.loc 2 435 34 view .LVU1874
 6351 0214 4FF48072 		mov	r2, #256
 6352 0218 5946     		mov	r1, fp
 6353 021a 3046     		mov	r0, r6
 6354 021c FFF7FEFF 		bl	memset
 6355              	.LVL547:
 435:EchoBridgeWithUSB.cpp ****             }
 6356              		.loc 2 435 34 view .LVU1875
 6357 0220 04F52052 		add	r2, r4, #10240
 6358 0224 BB46     		mov	fp, r7
 6359 0226 3B46     		mov	r3, r7
 6360 0228 0C32     		adds	r2, r2, #12
 6361              	.L362:
 6362              	.LBE770:
 6363              	.LBB771:
 6364              	.LBB772:
 440:EchoBridgeWithUSB.cpp ****                 float b = earlyFreqImag[i];
 6365              		.loc 2 440 17 is_stmt 1 discriminator 2 view .LVU1876
 440:EchoBridgeWithUSB.cpp ****                 float b = earlyFreqImag[i];
 6366              		.loc 2 440 23 is_stmt 0 discriminator 2 view .LVU1877
 6367 022a B3EC016A 		vldmia.32	r3!, {s12}
 6368              	.LVL548:
 441:EchoBridgeWithUSB.cpp ****                 float c = earlyIrFreqReal[i];
ARM GAS  /tmp/cch2Dr4w.s 			page 182


 6369              		.loc 2 441 17 is_stmt 1 discriminator 2 view .LVU1878
 442:EchoBridgeWithUSB.cpp ****                 float d = earlyIrFreqImag[i];
 6370              		.loc 2 442 23 is_stmt 0 discriminator 2 view .LVU1879
 6371 022e F2EC015A 		vldmia.32	r2!, {s11}
 441:EchoBridgeWithUSB.cpp ****                 float c = earlyIrFreqReal[i];
 6372              		.loc 2 441 23 discriminator 2 view .LVU1880
 6373 0232 D3ED3F7A 		vldr.32	s15, [r3, #252]
 6374              	.LVL549:
 442:EchoBridgeWithUSB.cpp ****                 float d = earlyIrFreqImag[i];
 6375              		.loc 2 442 17 is_stmt 1 discriminator 2 view .LVU1881
 443:EchoBridgeWithUSB.cpp ****                 
 6376              		.loc 2 443 17 discriminator 2 view .LVU1882
 6377              	.LBE772:
 439:EchoBridgeWithUSB.cpp ****                 float a = earlyFreqReal[i];
 6378              		.loc 2 439 34 is_stmt 0 discriminator 2 view .LVU1883
 6379 0236 B342     		cmp	r3, r6
 6380              	.LBB773:
 443:EchoBridgeWithUSB.cpp ****                 
 6381              		.loc 2 443 23 discriminator 2 view .LVU1884
 6382 0238 D2ED3F6A 		vldr.32	s13, [r2, #252]
 6383              	.LVL550:
 445:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 6384              		.loc 2 445 17 is_stmt 1 discriminator 2 view .LVU1885
 445:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 6385              		.loc 2 445 40 is_stmt 0 discriminator 2 view .LVU1886
 6386 023c 26EEE77A 		vnmul.f32	s14, s13, s15
 446:EchoBridgeWithUSB.cpp ****             }
 6387              		.loc 2 446 43 discriminator 2 view .LVU1887
 6388 0240 67EEA57A 		vmul.f32	s15, s15, s11
 6389              	.LVL551:
 445:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 6390              		.loc 2 445 40 discriminator 2 view .LVU1888
 6391 0244 A6EE257A 		vfma.f32	s14, s12, s11
 446:EchoBridgeWithUSB.cpp ****             }
 6392              		.loc 2 446 40 discriminator 2 view .LVU1889
 6393 0248 E6EE267A 		vfma.f32	s15, s12, s13
 445:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 6394              		.loc 2 445 34 discriminator 2 view .LVU1890
 6395 024c 03ED017A 		vstr.32	s14, [r3, #-4]
 446:EchoBridgeWithUSB.cpp ****             }
 6396              		.loc 2 446 17 is_stmt 1 discriminator 2 view .LVU1891
 446:EchoBridgeWithUSB.cpp ****             }
 6397              		.loc 2 446 34 is_stmt 0 discriminator 2 view .LVU1892
 6398 0250 C3ED3F7A 		vstr.32	s15, [r3, #252]
 6399              	.LVL552:
 446:EchoBridgeWithUSB.cpp ****             }
 6400              		.loc 2 446 34 discriminator 2 view .LVU1893
 6401              	.LBE773:
 439:EchoBridgeWithUSB.cpp ****                 float a = earlyFreqReal[i];
 6402              		.loc 2 439 13 is_stmt 1 discriminator 2 view .LVU1894
 439:EchoBridgeWithUSB.cpp ****                 float a = earlyFreqReal[i];
 6403              		.loc 2 439 34 discriminator 2 view .LVU1895
 6404 0254 E9D1     		bne	.L362
 6405              	.LBE771:
 450:EchoBridgeWithUSB.cpp ****             
 6406              		.loc 2 450 13 view .LVU1896
 450:EchoBridgeWithUSB.cpp ****             
ARM GAS  /tmp/cch2Dr4w.s 			page 183


 6407              		.loc 2 450 29 is_stmt 0 view .LVU1897
 6408 0256 4023     		movs	r3, #64
 6409 0258 3246     		mov	r2, r6
 6410 025a 3946     		mov	r1, r7
 6411 025c 5046     		mov	r0, r10
 6412 025e FFF7FEFF 		bl	_ZN6ShyFFTIfLj64EE7InverseEPfS1_j
 6413              	.LVL553:
 453:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6414              		.loc 2 453 13 is_stmt 1 view .LVU1898
 453:EchoBridgeWithUSB.cpp ****             earlyFft.Direct(earlyTimeIn, earlyTimeOut);
 6415              		.loc 2 453 19 is_stmt 0 view .LVU1899
 6416 0262 04F53451 		add	r1, r4, #11520
 6417 0266 4FF48072 		mov	r2, #256
 6418 026a 4846     		mov	r0, r9
 6419 026c 0C31     		adds	r1, r1, #12
 6420 026e FFF7FEFF 		bl	memcpy
 6421              	.LVL554:
 454:EchoBridgeWithUSB.cpp ****             
 6422              		.loc 2 454 13 is_stmt 1 view .LVU1900
 454:EchoBridgeWithUSB.cpp ****             
 6423              		.loc 2 454 28 is_stmt 0 view .LVU1901
 6424 0272 4246     		mov	r2, r8
 6425 0274 4946     		mov	r1, r9
 6426 0276 5046     		mov	r0, r10
 6427 0278 FFF7FEFF 		bl	_ZN6ShyFFTIfLj64EE6DirectEPKfPf
 6428              	.LVL555:
 456:EchoBridgeWithUSB.cpp ****                 earlyFreqReal[i] = earlyTimeOut[i];
 6429              		.loc 2 456 13 is_stmt 1 view .LVU1902
 6430              	.LBB774:
 456:EchoBridgeWithUSB.cpp ****                 earlyFreqReal[i] = earlyTimeOut[i];
 6431              		.loc 2 456 34 view .LVU1903
 457:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = 0.0f;
 6432              		.loc 2 457 34 is_stmt 0 view .LVU1904
 6433 027c 4FF48072 		mov	r2, #256
 6434 0280 4146     		mov	r1, r8
 6435 0282 3846     		mov	r0, r7
 6436 0284 FFF7FEFF 		bl	memcpy
 6437              	.LVL556:
 458:EchoBridgeWithUSB.cpp ****             }
 6438              		.loc 2 458 34 view .LVU1905
 6439 0288 4FF48072 		mov	r2, #256
 6440 028c 0021     		movs	r1, #0
 6441 028e 3046     		mov	r0, r6
 6442 0290 FFF7FEFF 		bl	memset
 6443              	.LVL557:
 458:EchoBridgeWithUSB.cpp ****             }
 6444              		.loc 2 458 34 view .LVU1906
 6445 0294 04F52852 		add	r2, r4, #10752
 6446 0298 3B46     		mov	r3, r7
 6447 029a 0C32     		adds	r2, r2, #12
 6448              	.L363:
 6449              	.LBE774:
 6450              	.LBB775:
 6451              	.LBB776:
 463:EchoBridgeWithUSB.cpp ****                 float b = earlyFreqImag[i];
 6452              		.loc 2 463 17 is_stmt 1 discriminator 2 view .LVU1907
 463:EchoBridgeWithUSB.cpp ****                 float b = earlyFreqImag[i];
ARM GAS  /tmp/cch2Dr4w.s 			page 184


 6453              		.loc 2 463 23 is_stmt 0 discriminator 2 view .LVU1908
 6454 029c B3EC016A 		vldmia.32	r3!, {s12}
 6455              	.LVL558:
 464:EchoBridgeWithUSB.cpp ****                 float c = earlyIrFreqRealRight[i];
 6456              		.loc 2 464 17 is_stmt 1 discriminator 2 view .LVU1909
 465:EchoBridgeWithUSB.cpp ****                 float d = earlyIrFreqImagRight[i];
 6457              		.loc 2 465 23 is_stmt 0 discriminator 2 view .LVU1910
 6458 02a0 F2EC015A 		vldmia.32	r2!, {s11}
 464:EchoBridgeWithUSB.cpp ****                 float c = earlyIrFreqRealRight[i];
 6459              		.loc 2 464 23 discriminator 2 view .LVU1911
 6460 02a4 D3ED3F7A 		vldr.32	s15, [r3, #252]
 6461              	.LVL559:
 465:EchoBridgeWithUSB.cpp ****                 float d = earlyIrFreqImagRight[i];
 6462              		.loc 2 465 17 is_stmt 1 discriminator 2 view .LVU1912
 466:EchoBridgeWithUSB.cpp ****                 
 6463              		.loc 2 466 17 discriminator 2 view .LVU1913
 6464              	.LBE776:
 462:EchoBridgeWithUSB.cpp ****                 float a = earlyFreqReal[i];
 6465              		.loc 2 462 34 is_stmt 0 discriminator 2 view .LVU1914
 6466 02a8 B342     		cmp	r3, r6
 6467              	.LBB777:
 466:EchoBridgeWithUSB.cpp ****                 
 6468              		.loc 2 466 23 discriminator 2 view .LVU1915
 6469 02aa D2ED3F6A 		vldr.32	s13, [r2, #252]
 6470              	.LVL560:
 468:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 6471              		.loc 2 468 17 is_stmt 1 discriminator 2 view .LVU1916
 468:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 6472              		.loc 2 468 40 is_stmt 0 discriminator 2 view .LVU1917
 6473 02ae 26EEE77A 		vnmul.f32	s14, s13, s15
 469:EchoBridgeWithUSB.cpp ****             }
 6474              		.loc 2 469 43 discriminator 2 view .LVU1918
 6475 02b2 67EEA57A 		vmul.f32	s15, s15, s11
 6476              	.LVL561:
 468:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 6477              		.loc 2 468 40 discriminator 2 view .LVU1919
 6478 02b6 A6EE257A 		vfma.f32	s14, s12, s11
 469:EchoBridgeWithUSB.cpp ****             }
 6479              		.loc 2 469 40 discriminator 2 view .LVU1920
 6480 02ba E6EE267A 		vfma.f32	s15, s12, s13
 468:EchoBridgeWithUSB.cpp ****                 earlyFreqImag[i] = a*d + b*c;
 6481              		.loc 2 468 34 discriminator 2 view .LVU1921
 6482 02be 03ED017A 		vstr.32	s14, [r3, #-4]
 469:EchoBridgeWithUSB.cpp ****             }
 6483              		.loc 2 469 17 is_stmt 1 discriminator 2 view .LVU1922
 469:EchoBridgeWithUSB.cpp ****             }
 6484              		.loc 2 469 34 is_stmt 0 discriminator 2 view .LVU1923
 6485 02c2 C3ED3F7A 		vstr.32	s15, [r3, #252]
 6486              	.LVL562:
 469:EchoBridgeWithUSB.cpp ****             }
 6487              		.loc 2 469 34 discriminator 2 view .LVU1924
 6488              	.LBE777:
 462:EchoBridgeWithUSB.cpp ****                 float a = earlyFreqReal[i];
 6489              		.loc 2 462 13 is_stmt 1 discriminator 2 view .LVU1925
 462:EchoBridgeWithUSB.cpp ****                 float a = earlyFreqReal[i];
 6490              		.loc 2 462 34 discriminator 2 view .LVU1926
 6491 02c6 E9D1     		bne	.L363
ARM GAS  /tmp/cch2Dr4w.s 			page 185


 6492              	.LBE775:
 473:EchoBridgeWithUSB.cpp ****             
 6493              		.loc 2 473 13 view .LVU1927
 473:EchoBridgeWithUSB.cpp ****             
 6494              		.loc 2 473 29 is_stmt 0 view .LVU1928
 6495 02c8 4023     		movs	r3, #64
 6496 02ca 3246     		mov	r2, r6
 6497 02cc 3946     		mov	r1, r7
 6498 02ce 5046     		mov	r0, r10
 6499 02d0 FFF7FEFF 		bl	_ZN6ShyFFTIfLj64EE7InverseEPfS1_j
 6500              	.LVL563:
 476:EchoBridgeWithUSB.cpp ****                 earlyOutputBuffer[i] = earlyOutputBuffer[i + EARLY_FFT_SIZE] + earlyFreqReal[i];
 6501              		.loc 2 476 13 is_stmt 1 view .LVU1929
 6502              	.LBB778:
 476:EchoBridgeWithUSB.cpp ****                 earlyOutputBuffer[i] = earlyOutputBuffer[i + EARLY_FFT_SIZE] + earlyFreqReal[i];
 6503              		.loc 2 476 34 view .LVU1930
 6504 02d4 04F53853 		add	r3, r4, #11776
 6505 02d8 0C33     		adds	r3, r3, #12
 6506              	.LVL564:
 6507              	.L364:
 477:EchoBridgeWithUSB.cpp ****                 earlyOutputBufferRight[i] = earlyOutputBufferRight[i + EARLY_FFT_SIZE] + earlyFreqR
 6508              		.loc 2 477 17 discriminator 2 view .LVU1931
 477:EchoBridgeWithUSB.cpp ****                 earlyOutputBufferRight[i] = earlyOutputBufferRight[i + EARLY_FFT_SIZE] + earlyFreqR
 6509              		.loc 2 477 95 is_stmt 0 discriminator 2 view .LVU1932
 6510 02da FBEC016A 		vldmia.32	fp!, {s13}
 477:EchoBridgeWithUSB.cpp ****                 earlyOutputBufferRight[i] = earlyOutputBufferRight[i + EARLY_FFT_SIZE] + earlyFreqR
 6511              		.loc 2 477 78 discriminator 2 view .LVU1933
 6512 02de 93ED407A 		vldr.32	s14, [r3, #256]
 476:EchoBridgeWithUSB.cpp ****                 earlyOutputBuffer[i] = earlyOutputBuffer[i + EARLY_FFT_SIZE] + earlyFreqReal[i];
 6513              		.loc 2 476 34 discriminator 2 view .LVU1934
 6514 02e2 B345     		cmp	fp, r6
 477:EchoBridgeWithUSB.cpp ****                 earlyOutputBufferRight[i] = earlyOutputBufferRight[i + EARLY_FFT_SIZE] + earlyFreqR
 6515              		.loc 2 477 78 discriminator 2 view .LVU1935
 6516 02e4 37EE267A 		vadd.f32	s14, s14, s13
 477:EchoBridgeWithUSB.cpp ****                 earlyOutputBufferRight[i] = earlyOutputBufferRight[i + EARLY_FFT_SIZE] + earlyFreqR
 6517              		.loc 2 477 38 discriminator 2 view .LVU1936
 6518 02e8 A3EC017A 		vstmia.32	r3!, {s14}
 478:EchoBridgeWithUSB.cpp ****             }
 6519              		.loc 2 478 17 is_stmt 1 discriminator 2 view .LVU1937
 478:EchoBridgeWithUSB.cpp ****             }
 6520              		.loc 2 478 88 is_stmt 0 discriminator 2 view .LVU1938
 6521 02ec D3EDBF7A 		vldr.32	s15, [r3, #764]
 6522 02f0 77EEA67A 		vadd.f32	s15, s15, s13
 478:EchoBridgeWithUSB.cpp ****             }
 6523              		.loc 2 478 43 discriminator 2 view .LVU1939
 6524 02f4 C3ED7F7A 		vstr.32	s15, [r3, #508]
 476:EchoBridgeWithUSB.cpp ****                 earlyOutputBuffer[i] = earlyOutputBuffer[i + EARLY_FFT_SIZE] + earlyFreqReal[i];
 6525              		.loc 2 476 13 is_stmt 1 discriminator 2 view .LVU1940
 476:EchoBridgeWithUSB.cpp ****                 earlyOutputBuffer[i] = earlyOutputBuffer[i + EARLY_FFT_SIZE] + earlyFreqReal[i];
 6526              		.loc 2 476 34 discriminator 2 view .LVU1941
 6527 02f8 EFD1     		bne	.L364
 6528              	.LBE778:
 482:EchoBridgeWithUSB.cpp ****             memset(earlyOutputBufferRight + EARLY_FFT_SIZE, 0, EARLY_FFT_SIZE * sizeof(float));
 6529              		.loc 2 482 13 view .LVU1942
 482:EchoBridgeWithUSB.cpp ****             memset(earlyOutputBufferRight + EARLY_FFT_SIZE, 0, EARLY_FFT_SIZE * sizeof(float));
 6530              		.loc 2 482 19 is_stmt 0 view .LVU1943
 6531 02fa 04F53C50 		add	r0, r4, #12032
ARM GAS  /tmp/cch2Dr4w.s 			page 186


 6532 02fe 4FF48072 		mov	r2, #256
 6533 0302 0021     		movs	r1, #0
 6534 0304 0C30     		adds	r0, r0, #12
 6535 0306 FFF7FEFF 		bl	memset
 6536              	.LVL565:
 483:EchoBridgeWithUSB.cpp ****         }
 6537              		.loc 2 483 13 is_stmt 1 view .LVU1944
 483:EchoBridgeWithUSB.cpp ****         }
 6538              		.loc 2 483 19 is_stmt 0 view .LVU1945
 6539 030a 04F54450 		add	r0, r4, #12544
 6540 030e 4FF48072 		mov	r2, #256
 6541 0312 0021     		movs	r1, #0
 6542 0314 0C30     		adds	r0, r0, #12
 6543 0316 FFF7FEFF 		bl	memset
 6544              	.LVL566:
 6545              	.LBE769:
 6546 031a C9E6     		b	.L361
 6547              	.L379:
 6548              		.align	2
 6549              	.L378:
 6550 031c 00000000 		.word	g_predelayBuffer
 6551 0320 00000000 		.word	g_predelayBufferRight
 6552 0324 00000000 		.word	g_lateInputBuffer
 6553 0328 00000000 		.word	g_lateInputBufferRight
 6554 032c 00000000 		.word	g_lateOutputBufferRight
 6555 0330 00000000 		.word	g_lateOutputBuffer
 6556 0334 04000000 		.word	g_lateOutputBuffer+4
 6557 0338 04000000 		.word	g_lateOutputBufferRight+4
 6558              	.L365:
 483:EchoBridgeWithUSB.cpp ****         }
 6559              		.loc 2 483 19 view .LVU1946
 6560              	.LBE817:
 6561              	.LBB818:
 6562              	.LBB781:
 490:EchoBridgeWithUSB.cpp ****             
 6563              		.loc 2 490 13 is_stmt 1 view .LVU1947
 490:EchoBridgeWithUSB.cpp ****             
 6564              		.loc 2 490 32 is_stmt 0 view .LVU1948
 6565 033c 4FF00009 		mov	r9, #0
 494:EchoBridgeWithUSB.cpp ****             
 6566              		.loc 2 494 27 view .LVU1949
 6567 0340 04F50376 		add	r6, r4, #524
 493:EchoBridgeWithUSB.cpp ****             lateFft.Direct(g_lateTimeIn, g_lateTimeOut);
 6568              		.loc 2 493 19 view .LVU1950
 6569 0344 4E49     		ldr	r1, .L380
 490:EchoBridgeWithUSB.cpp ****             
 6570              		.loc 2 490 32 view .LVU1951
 6571 0346 C2F81092 		str	r9, [r2, #528]
 493:EchoBridgeWithUSB.cpp ****             lateFft.Direct(g_lateTimeIn, g_lateTimeOut);
 6572              		.loc 2 493 13 is_stmt 1 view .LVU1952
 493:EchoBridgeWithUSB.cpp ****             lateFft.Direct(g_lateTimeIn, g_lateTimeOut);
 6573              		.loc 2 493 19 is_stmt 0 view .LVU1953
 6574 034a 4FF48052 		mov	r2, #4096
 6575 034e 4D48     		ldr	r0, .L380+4
 6576 0350 FFF7FEFF 		bl	memcpy
 6577              	.LVL567:
 494:EchoBridgeWithUSB.cpp ****             
ARM GAS  /tmp/cch2Dr4w.s 			page 187


 6578              		.loc 2 494 13 is_stmt 1 view .LVU1954
 494:EchoBridgeWithUSB.cpp ****             
 6579              		.loc 2 494 27 is_stmt 0 view .LVU1955
 6580 0354 4C4A     		ldr	r2, .L380+8
 6581 0356 4B49     		ldr	r1, .L380+4
 6582 0358 3046     		mov	r0, r6
 6583 035a FFF7FEFF 		bl	_ZN6ShyFFTIfLj1024EE6DirectEPKfPf
 6584              	.LVL568:
 496:EchoBridgeWithUSB.cpp ****                 g_lateFreqReal[i] = g_lateTimeOut[i];
 6585              		.loc 2 496 13 is_stmt 1 view .LVU1956
 6586              	.LBB782:
 496:EchoBridgeWithUSB.cpp ****                 g_lateFreqReal[i] = g_lateTimeOut[i];
 6587              		.loc 2 496 34 view .LVU1957
 6588 035e DFF82C81 		ldr	r8, .L380+12
 497:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = 0.0f;
 6589              		.loc 2 497 35 is_stmt 0 view .LVU1958
 6590 0362 4FF48052 		mov	r2, #4096
 6591 0366 4849     		ldr	r1, .L380+8
 6592 0368 4848     		ldr	r0, .L380+12
 6593 036a 494F     		ldr	r7, .L380+16
 6594 036c FFF7FEFF 		bl	memcpy
 6595              	.LVL569:
 498:EchoBridgeWithUSB.cpp ****             }
 6596              		.loc 2 498 35 view .LVU1959
 6597 0370 4FF48052 		mov	r2, #4096
 6598 0374 4946     		mov	r1, r9
 6599 0376 4648     		ldr	r0, .L380+16
 6600 0378 FFF7FEFF 		bl	memset
 6601              	.LVL570:
 498:EchoBridgeWithUSB.cpp ****             }
 6602              		.loc 2 498 35 view .LVU1960
 6603 037c DFF834C1 		ldr	ip, .L380+52
 6604 0380 4448     		ldr	r0, .L380+20
 6605 0382 3A46     		mov	r2, r7
 6606 0384 4146     		mov	r1, r8
 6607              	.LBE782:
 6608              	.LBB783:
 502:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6609              		.loc 2 502 25 view .LVU1961
 6610 0386 4B46     		mov	r3, r9
 6611              	.L367:
 6612              	.LVL571:
 6613              	.LBB784:
 503:EchoBridgeWithUSB.cpp ****                 float b = g_lateFreqImag[i];
 6614              		.loc 2 503 17 is_stmt 1 discriminator 2 view .LVU1962
 504:EchoBridgeWithUSB.cpp ****                 float c = g_lateIrFreqReal[i];
 6615              		.loc 2 504 23 is_stmt 0 discriminator 2 view .LVU1963
 6616 0388 D2ED007A 		vldr.32	s15, [r2]
 6617              	.LBE784:
 502:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6618              		.loc 2 502 13 discriminator 2 view .LVU1964
 6619 038c 0133     		adds	r3, r3, #1
 6620              	.LVL572:
 6621              	.LBB785:
 505:EchoBridgeWithUSB.cpp ****                 float d = g_lateIrFreqImag[i];
 6622              		.loc 2 505 23 discriminator 2 view .LVU1965
 6623 038e FCEC015A 		vldmia.32	ip!, {s11}
ARM GAS  /tmp/cch2Dr4w.s 			page 188


 506:EchoBridgeWithUSB.cpp ****                 
 6624              		.loc 2 506 23 discriminator 2 view .LVU1966
 6625 0392 F0EC016A 		vldmia.32	r0!, {s13}
 6626              	.LBE785:
 502:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6627              		.loc 2 502 34 discriminator 2 view .LVU1967
 6628 0396 B3F5806F 		cmp	r3, #1024
 6629              	.LBB786:
 503:EchoBridgeWithUSB.cpp ****                 float b = g_lateFreqImag[i];
 6630              		.loc 2 503 23 discriminator 2 view .LVU1968
 6631 039a 91ED006A 		vldr.32	s12, [r1]
 6632              	.LVL573:
 504:EchoBridgeWithUSB.cpp ****                 float c = g_lateIrFreqReal[i];
 6633              		.loc 2 504 17 is_stmt 1 discriminator 2 view .LVU1969
 505:EchoBridgeWithUSB.cpp ****                 float d = g_lateIrFreqImag[i];
 6634              		.loc 2 505 17 discriminator 2 view .LVU1970
 506:EchoBridgeWithUSB.cpp ****                 
 6635              		.loc 2 506 17 discriminator 2 view .LVU1971
 508:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 6636              		.loc 2 508 17 discriminator 2 view .LVU1972
 508:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 6637              		.loc 2 508 41 is_stmt 0 discriminator 2 view .LVU1973
 6638 039e 26EEE77A 		vnmul.f32	s14, s13, s15
 509:EchoBridgeWithUSB.cpp ****             }
 6639              		.loc 2 509 44 discriminator 2 view .LVU1974
 6640 03a2 67EEA57A 		vmul.f32	s15, s15, s11
 6641              	.LVL574:
 508:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 6642              		.loc 2 508 41 discriminator 2 view .LVU1975
 6643 03a6 A6EE257A 		vfma.f32	s14, s12, s11
 509:EchoBridgeWithUSB.cpp ****             }
 6644              		.loc 2 509 41 discriminator 2 view .LVU1976
 6645 03aa E6EE267A 		vfma.f32	s15, s12, s13
 508:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 6646              		.loc 2 508 35 discriminator 2 view .LVU1977
 6647 03ae A1EC017A 		vstmia.32	r1!, {s14}
 509:EchoBridgeWithUSB.cpp ****             }
 6648              		.loc 2 509 17 is_stmt 1 discriminator 2 view .LVU1978
 509:EchoBridgeWithUSB.cpp ****             }
 6649              		.loc 2 509 35 is_stmt 0 discriminator 2 view .LVU1979
 6650 03b2 E2EC017A 		vstmia.32	r2!, {s15}
 6651              	.LVL575:
 509:EchoBridgeWithUSB.cpp ****             }
 6652              		.loc 2 509 35 discriminator 2 view .LVU1980
 6653              	.LBE786:
 502:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6654              		.loc 2 502 13 is_stmt 1 discriminator 2 view .LVU1981
 502:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6655              		.loc 2 502 34 discriminator 2 view .LVU1982
 6656 03b6 E7D1     		bne	.L367
 6657              	.LBE783:
 513:EchoBridgeWithUSB.cpp ****             
 6658              		.loc 2 513 13 view .LVU1983
 513:EchoBridgeWithUSB.cpp ****             
 6659              		.loc 2 513 28 is_stmt 0 view .LVU1984
 6660 03b8 354A     		ldr	r2, .L380+16
 6661 03ba 3046     		mov	r0, r6
ARM GAS  /tmp/cch2Dr4w.s 			page 189


 6662 03bc 3349     		ldr	r1, .L380+12
 6663 03be FFF7FEFF 		bl	_ZN6ShyFFTIfLj1024EE7InverseEPfS1_j
 6664              	.LVL576:
 516:EchoBridgeWithUSB.cpp ****             lateFft.Direct(g_lateTimeIn, g_lateTimeOut);
 6665              		.loc 2 516 13 is_stmt 1 view .LVU1985
 516:EchoBridgeWithUSB.cpp ****             lateFft.Direct(g_lateTimeIn, g_lateTimeOut);
 6666              		.loc 2 516 19 is_stmt 0 view .LVU1986
 6667 03c2 4FF48052 		mov	r2, #4096
 6668 03c6 3449     		ldr	r1, .L380+24
 6669 03c8 2E48     		ldr	r0, .L380+4
 6670 03ca FFF7FEFF 		bl	memcpy
 6671              	.LVL577:
 517:EchoBridgeWithUSB.cpp ****             
 6672              		.loc 2 517 13 is_stmt 1 view .LVU1987
 517:EchoBridgeWithUSB.cpp ****             
 6673              		.loc 2 517 27 is_stmt 0 view .LVU1988
 6674 03ce 2E4A     		ldr	r2, .L380+8
 6675 03d0 2C49     		ldr	r1, .L380+4
 6676 03d2 3046     		mov	r0, r6
 6677 03d4 FFF7FEFF 		bl	_ZN6ShyFFTIfLj1024EE6DirectEPKfPf
 6678              	.LVL578:
 519:EchoBridgeWithUSB.cpp ****                 g_lateFreqReal[i] = g_lateTimeOut[i];
 6679              		.loc 2 519 13 is_stmt 1 view .LVU1989
 6680              	.LBB787:
 519:EchoBridgeWithUSB.cpp ****                 g_lateFreqReal[i] = g_lateTimeOut[i];
 6681              		.loc 2 519 34 view .LVU1990
 520:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = 0.0f;
 6682              		.loc 2 520 35 is_stmt 0 view .LVU1991
 6683 03d8 4FF48052 		mov	r2, #4096
 6684 03dc 2A49     		ldr	r1, .L380+8
 6685 03de 2B48     		ldr	r0, .L380+12
 6686 03e0 FFF7FEFF 		bl	memcpy
 6687              	.LVL579:
 521:EchoBridgeWithUSB.cpp ****             }
 6688              		.loc 2 521 35 view .LVU1992
 6689 03e4 4FF48052 		mov	r2, #4096
 6690 03e8 0021     		movs	r1, #0
 6691 03ea 2948     		ldr	r0, .L380+16
 6692 03ec FFF7FEFF 		bl	memset
 6693              	.LVL580:
 521:EchoBridgeWithUSB.cpp ****             }
 6694              		.loc 2 521 35 view .LVU1993
 6695 03f0 2A48     		ldr	r0, .L380+28
 6696 03f2 2B49     		ldr	r1, .L380+32
 6697              	.LBE787:
 6698              	.LBB788:
 525:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6699              		.loc 2 525 25 view .LVU1994
 6700 03f4 0023     		movs	r3, #0
 6701              	.LBE788:
 6702              	.LBB792:
 521:EchoBridgeWithUSB.cpp ****             }
 6703              		.loc 2 521 35 view .LVU1995
 6704 03f6 254A     		ldr	r2, .L380+12
 6705              	.L368:
 6706              	.LVL581:
 521:EchoBridgeWithUSB.cpp ****             }
ARM GAS  /tmp/cch2Dr4w.s 			page 190


 6707              		.loc 2 521 35 view .LVU1996
 6708              	.LBE792:
 6709              	.LBB793:
 6710              	.LBB789:
 526:EchoBridgeWithUSB.cpp ****                 float b = g_lateFreqImag[i];
 6711              		.loc 2 526 17 is_stmt 1 discriminator 2 view .LVU1997
 527:EchoBridgeWithUSB.cpp ****                 float c = g_lateIrFreqRealRight[i];
 6712              		.loc 2 527 23 is_stmt 0 discriminator 2 view .LVU1998
 6713 03f8 D7ED007A 		vldr.32	s15, [r7]
 6714              	.LBE789:
 525:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6715              		.loc 2 525 13 discriminator 2 view .LVU1999
 6716 03fc 0133     		adds	r3, r3, #1
 6717              	.LVL582:
 6718              	.LBB790:
 528:EchoBridgeWithUSB.cpp ****                 float d = g_lateIrFreqImagRight[i];
 6719              		.loc 2 528 23 discriminator 2 view .LVU2000
 6720 03fe F0EC015A 		vldmia.32	r0!, {s11}
 529:EchoBridgeWithUSB.cpp ****                 
 6721              		.loc 2 529 23 discriminator 2 view .LVU2001
 6722 0402 F1EC016A 		vldmia.32	r1!, {s13}
 6723              	.LBE790:
 525:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6724              		.loc 2 525 34 discriminator 2 view .LVU2002
 6725 0406 B3F5806F 		cmp	r3, #1024
 6726              	.LBB791:
 526:EchoBridgeWithUSB.cpp ****                 float b = g_lateFreqImag[i];
 6727              		.loc 2 526 23 discriminator 2 view .LVU2003
 6728 040a 92ED006A 		vldr.32	s12, [r2]
 6729              	.LVL583:
 527:EchoBridgeWithUSB.cpp ****                 float c = g_lateIrFreqRealRight[i];
 6730              		.loc 2 527 17 is_stmt 1 discriminator 2 view .LVU2004
 528:EchoBridgeWithUSB.cpp ****                 float d = g_lateIrFreqImagRight[i];
 6731              		.loc 2 528 17 discriminator 2 view .LVU2005
 529:EchoBridgeWithUSB.cpp ****                 
 6732              		.loc 2 529 17 discriminator 2 view .LVU2006
 531:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 6733              		.loc 2 531 17 discriminator 2 view .LVU2007
 531:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 6734              		.loc 2 531 41 is_stmt 0 discriminator 2 view .LVU2008
 6735 040e 26EEE77A 		vnmul.f32	s14, s13, s15
 532:EchoBridgeWithUSB.cpp ****             }
 6736              		.loc 2 532 44 discriminator 2 view .LVU2009
 6737 0412 67EEA57A 		vmul.f32	s15, s15, s11
 6738              	.LVL584:
 531:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 6739              		.loc 2 531 41 discriminator 2 view .LVU2010
 6740 0416 A6EE257A 		vfma.f32	s14, s12, s11
 532:EchoBridgeWithUSB.cpp ****             }
 6741              		.loc 2 532 41 discriminator 2 view .LVU2011
 6742 041a E6EE267A 		vfma.f32	s15, s12, s13
 531:EchoBridgeWithUSB.cpp ****                 g_lateFreqImag[i] = a*d + b*c;
 6743              		.loc 2 531 35 discriminator 2 view .LVU2012
 6744 041e A2EC017A 		vstmia.32	r2!, {s14}
 532:EchoBridgeWithUSB.cpp ****             }
 6745              		.loc 2 532 17 is_stmt 1 discriminator 2 view .LVU2013
 532:EchoBridgeWithUSB.cpp ****             }
ARM GAS  /tmp/cch2Dr4w.s 			page 191


 6746              		.loc 2 532 35 is_stmt 0 discriminator 2 view .LVU2014
 6747 0422 E7EC017A 		vstmia.32	r7!, {s15}
 6748              	.LVL585:
 532:EchoBridgeWithUSB.cpp ****             }
 6749              		.loc 2 532 35 discriminator 2 view .LVU2015
 6750              	.LBE791:
 525:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6751              		.loc 2 525 13 is_stmt 1 discriminator 2 view .LVU2016
 525:EchoBridgeWithUSB.cpp ****                 float a = g_lateFreqReal[i];
 6752              		.loc 2 525 34 discriminator 2 view .LVU2017
 6753 0426 E7D1     		bne	.L368
 6754              	.LBE793:
 536:EchoBridgeWithUSB.cpp ****             
 6755              		.loc 2 536 13 view .LVU2018
 536:EchoBridgeWithUSB.cpp ****             
 6756              		.loc 2 536 28 is_stmt 0 view .LVU2019
 6757 0428 194A     		ldr	r2, .L380+16
 6758 042a 3046     		mov	r0, r6
 6759 042c 1749     		ldr	r1, .L380+12
 6760 042e FFF7FEFF 		bl	_ZN6ShyFFTIfLj1024EE7InverseEPfS1_j
 6761              	.LVL586:
 539:EchoBridgeWithUSB.cpp ****                 g_lateOutputBuffer[i] = g_lateOutputBuffer[i + LATE_FFT_SIZE] + g_lateFreqReal[i];
 6762              		.loc 2 539 13 is_stmt 1 view .LVU2020
 6763              	.LBB794:
 539:EchoBridgeWithUSB.cpp ****                 g_lateOutputBuffer[i] = g_lateOutputBuffer[i + LATE_FFT_SIZE] + g_lateFreqReal[i];
 6764              		.loc 2 539 34 view .LVU2021
 6765 0432 1C49     		ldr	r1, .L380+36
 6766 0434 1C4A     		ldr	r2, .L380+40
 539:EchoBridgeWithUSB.cpp ****                 g_lateOutputBuffer[i] = g_lateOutputBuffer[i + LATE_FFT_SIZE] + g_lateFreqReal[i];
 6767              		.loc 2 539 25 is_stmt 0 view .LVU2022
 6768 0436 0023     		movs	r3, #0
 6769              	.LVL587:
 6770              	.L369:
 540:EchoBridgeWithUSB.cpp ****                 g_lateOutputBufferRight[i] = g_lateOutputBufferRight[i + LATE_FFT_SIZE] + g_lateFre
 6771              		.loc 2 540 17 is_stmt 1 discriminator 2 view .LVU2023
 540:EchoBridgeWithUSB.cpp ****                 g_lateOutputBufferRight[i] = g_lateOutputBufferRight[i + LATE_FFT_SIZE] + g_lateFre
 6772              		.loc 2 540 77 is_stmt 0 discriminator 2 view .LVU2024
 6773 0438 01F58050 		add	r0, r1, #4096
 540:EchoBridgeWithUSB.cpp ****                 g_lateOutputBufferRight[i] = g_lateOutputBufferRight[i + LATE_FFT_SIZE] + g_lateFre
 6774              		.loc 2 540 97 discriminator 2 view .LVU2025
 6775 043c F8EC016A 		vldmia.32	r8!, {s13}
 539:EchoBridgeWithUSB.cpp ****                 g_lateOutputBuffer[i] = g_lateOutputBuffer[i + LATE_FFT_SIZE] + g_lateFreqReal[i];
 6776              		.loc 2 539 13 discriminator 2 view .LVU2026
 6777 0440 0133     		adds	r3, r3, #1
 6778              	.LVL588:
 540:EchoBridgeWithUSB.cpp ****                 g_lateOutputBufferRight[i] = g_lateOutputBufferRight[i + LATE_FFT_SIZE] + g_lateFre
 6779              		.loc 2 540 79 discriminator 2 view .LVU2027
 6780 0442 90ED007A 		vldr.32	s14, [r0]
 541:EchoBridgeWithUSB.cpp ****             }
 6781              		.loc 2 541 87 discriminator 2 view .LVU2028
 6782 0446 02F58050 		add	r0, r2, #4096
 539:EchoBridgeWithUSB.cpp ****                 g_lateOutputBuffer[i] = g_lateOutputBuffer[i + LATE_FFT_SIZE] + g_lateFreqReal[i];
 6783              		.loc 2 539 34 discriminator 2 view .LVU2029
 6784 044a B3F5806F 		cmp	r3, #1024
 541:EchoBridgeWithUSB.cpp ****             }
 6785              		.loc 2 541 89 discriminator 2 view .LVU2030
 6786 044e D0ED007A 		vldr.32	s15, [r0]
ARM GAS  /tmp/cch2Dr4w.s 			page 192


 540:EchoBridgeWithUSB.cpp ****                 g_lateOutputBufferRight[i] = g_lateOutputBufferRight[i + LATE_FFT_SIZE] + g_lateFre
 6787              		.loc 2 540 79 discriminator 2 view .LVU2031
 6788 0452 37EE267A 		vadd.f32	s14, s14, s13
 541:EchoBridgeWithUSB.cpp ****             }
 6789              		.loc 2 541 89 discriminator 2 view .LVU2032
 6790 0456 77EEA67A 		vadd.f32	s15, s15, s13
 540:EchoBridgeWithUSB.cpp ****                 g_lateOutputBufferRight[i] = g_lateOutputBufferRight[i + LATE_FFT_SIZE] + g_lateFre
 6791              		.loc 2 540 39 discriminator 2 view .LVU2033
 6792 045a A1EC017A 		vstmia.32	r1!, {s14}
 541:EchoBridgeWithUSB.cpp ****             }
 6793              		.loc 2 541 17 is_stmt 1 discriminator 2 view .LVU2034
 541:EchoBridgeWithUSB.cpp ****             }
 6794              		.loc 2 541 44 is_stmt 0 discriminator 2 view .LVU2035
 6795 045e E2EC017A 		vstmia.32	r2!, {s15}
 539:EchoBridgeWithUSB.cpp ****                 g_lateOutputBuffer[i] = g_lateOutputBuffer[i + LATE_FFT_SIZE] + g_lateFreqReal[i];
 6796              		.loc 2 539 13 is_stmt 1 discriminator 2 view .LVU2036
 6797              	.LVL589:
 539:EchoBridgeWithUSB.cpp ****                 g_lateOutputBuffer[i] = g_lateOutputBuffer[i + LATE_FFT_SIZE] + g_lateFreqReal[i];
 6798              		.loc 2 539 34 discriminator 2 view .LVU2037
 6799 0462 E9D1     		bne	.L369
 6800              	.LBE794:
 545:EchoBridgeWithUSB.cpp ****             memset(g_lateOutputBufferRight + LATE_FFT_SIZE, 0, LATE_FFT_SIZE * sizeof(float));
 6801              		.loc 2 545 13 view .LVU2038
 545:EchoBridgeWithUSB.cpp ****             memset(g_lateOutputBufferRight + LATE_FFT_SIZE, 0, LATE_FFT_SIZE * sizeof(float));
 6802              		.loc 2 545 19 is_stmt 0 view .LVU2039
 6803 0464 4FF48052 		mov	r2, #4096
 6804 0468 0021     		movs	r1, #0
 6805 046a 1048     		ldr	r0, .L380+44
 6806 046c FFF7FEFF 		bl	memset
 6807              	.LVL590:
 546:EchoBridgeWithUSB.cpp ****         }
 6808              		.loc 2 546 13 is_stmt 1 view .LVU2040
 546:EchoBridgeWithUSB.cpp ****         }
 6809              		.loc 2 546 19 is_stmt 0 view .LVU2041
 6810 0470 4FF48052 		mov	r2, #4096
 6811 0474 0021     		movs	r1, #0
 6812 0476 0E48     		ldr	r0, .L380+48
 6813 0478 FFF7FEFF 		bl	memset
 6814              	.LVL591:
 6815              	.LBE781:
 6816 047c 23E6     		b	.L366
 6817              	.L381:
 6818 047e 00BF     		.align	2
 6819              	.L380:
 6820 0480 00000000 		.word	g_lateInputBuffer
 6821 0484 00000000 		.word	g_lateTimeIn
 6822 0488 00000000 		.word	g_lateTimeOut
 6823 048c 00000000 		.word	g_lateFreqReal
 6824 0490 00000000 		.word	g_lateFreqImag
 6825 0494 00000000 		.word	g_lateIrFreqImag
 6826 0498 00000000 		.word	g_lateInputBufferRight
 6827 049c 00000000 		.word	g_lateIrFreqRealRight
 6828 04a0 00000000 		.word	g_lateIrFreqImagRight
 6829 04a4 00000000 		.word	g_lateOutputBuffer
 6830 04a8 00000000 		.word	g_lateOutputBufferRight
 6831 04ac 00100000 		.word	g_lateOutputBuffer+4096
 6832 04b0 00100000 		.word	g_lateOutputBufferRight+4096
ARM GAS  /tmp/cch2Dr4w.s 			page 193


 6833 04b4 00000000 		.word	g_lateIrFreqReal
 6834              	.LBE818:
 6835              		.cfi_endproc
 6836              	.LFE5518:
 6838              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 6839              		.align	1
 6840              		.global	_Z13AudioCallbackPKPKfPPfj
 6841              		.syntax unified
 6842              		.thumb
 6843              		.thumb_func
 6844              		.fpu fpv5-d16
 6846              	_Z13AudioCallbackPKPKfPPfj:
 6847              	.LVL592:
 6848              	.LFB5519:
 593:EchoBridgeWithUSB.cpp ****     // Process each sample
 6849              		.loc 2 593 93 is_stmt 1 view -0
 6850              		.cfi_startproc
 6851              		@ args = 0, pretend = 0, frame = 8
 6852              		@ frame_needed = 0, uses_anonymous_args = 0
 595:EchoBridgeWithUSB.cpp ****         // Get input samples
 6853              		.loc 2 595 5 view .LVU2043
 593:EchoBridgeWithUSB.cpp ****     // Process each sample
 6854              		.loc 2 593 93 is_stmt 0 view .LVU2044
 6855 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 6856              		.cfi_def_cfa_offset 32
 6857              		.cfi_offset 4, -24
 6858              		.cfi_offset 5, -20
 6859              		.cfi_offset 6, -16
 6860              		.cfi_offset 7, -12
 6861              		.cfi_offset 8, -8
 6862              		.cfi_offset 14, -4
 593:EchoBridgeWithUSB.cpp ****     // Process each sample
 6863              		.loc 2 593 93 view .LVU2045
 6864 0004 0646     		mov	r6, r0
 6865 0006 0D46     		mov	r5, r1
 6866 0008 1746     		mov	r7, r2
 6867              	.LBB819:
 595:EchoBridgeWithUSB.cpp ****         // Get input samples
 6868              		.loc 2 595 17 view .LVU2046
 6869 000a 0024     		movs	r4, #0
 6870              	.LVL593:
 6871              	.L389:
 595:EchoBridgeWithUSB.cpp ****         // Get input samples
 6872              		.loc 2 595 26 is_stmt 1 discriminator 1 view .LVU2047
 6873 000c BC42     		cmp	r4, r7
 6874 000e 39D0     		beq	.L382
 6875              	.LBB820:
 597:EchoBridgeWithUSB.cpp ****         float inR = in[1][i];
 6876              		.loc 2 597 9 view .LVU2048
 597:EchoBridgeWithUSB.cpp ****         float inR = in[1][i];
 6877              		.loc 2 597 15 is_stmt 0 view .LVU2049
 6878 0010 3368     		ldr	r3, [r6]
 6879 0012 4FEA8408 		lsl	r8, r4, #2
 6880 0016 03EB8403 		add	r3, r3, r4, lsl #2
 6881 001a 93ED000A 		vldr.32	s0, [r3]
 6882              	.LVL594:
 598:EchoBridgeWithUSB.cpp ****         
ARM GAS  /tmp/cch2Dr4w.s 			page 194


 6883              		.loc 2 598 9 is_stmt 1 view .LVU2050
 598:EchoBridgeWithUSB.cpp ****         
 6884              		.loc 2 598 15 is_stmt 0 view .LVU2051
 6885 001e 7368     		ldr	r3, [r6, #4]
 6886 0020 03EB8403 		add	r3, r3, r4, lsl #2
 6887 0024 D3ED000A 		vldr.32	s1, [r3]
 6888              	.LVL595:
 601:EchoBridgeWithUSB.cpp ****             isStereoInput = true;
 6889              		.loc 2 601 9 is_stmt 1 view .LVU2052
 601:EchoBridgeWithUSB.cpp ****             isStereoInput = true;
 6890              		.loc 2 601 13 is_stmt 0 view .LVU2053
 6891 0028 184B     		ldr	r3, .L391
 601:EchoBridgeWithUSB.cpp ****             isStereoInput = true;
 6892              		.loc 2 601 28 view .LVU2054
 6893 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6894 002c 62B9     		cbnz	r2, .L384
 6895              	.LVL596:
 6896              	.LBB821:
 6897              	.LBI821:
 6898              		.file 14 "/usr/include/newlib/c++/10.3.1/cmath"
   1:/usr/include/newlib/c++/10.3.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/include/newlib/c++/10.3.1/cmath **** 
   3:/usr/include/newlib/c++/10.3.1/cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/10.3.1/cmath **** //
   5:/usr/include/newlib/c++/10.3.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/10.3.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/10.3.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/10.3.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/10.3.1/cmath **** // any later version.
  10:/usr/include/newlib/c++/10.3.1/cmath **** 
  11:/usr/include/newlib/c++/10.3.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/10.3.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/10.3.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/10.3.1/cmath **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/10.3.1/cmath **** 
  16:/usr/include/newlib/c++/10.3.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/10.3.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/10.3.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/10.3.1/cmath **** 
  20:/usr/include/newlib/c++/10.3.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/10.3.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/10.3.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/10.3.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/10.3.1/cmath **** 
  25:/usr/include/newlib/c++/10.3.1/cmath **** /** @file include/cmath
  26:/usr/include/newlib/c++/10.3.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/include/newlib/c++/10.3.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/include/newlib/c++/10.3.1/cmath ****  *
  29:/usr/include/newlib/c++/10.3.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/include/newlib/c++/10.3.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/include/newlib/c++/10.3.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/include/newlib/c++/10.3.1/cmath ****  *  as macros in C).
  33:/usr/include/newlib/c++/10.3.1/cmath ****  */
  34:/usr/include/newlib/c++/10.3.1/cmath **** 
  35:/usr/include/newlib/c++/10.3.1/cmath **** //
  36:/usr/include/newlib/c++/10.3.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/include/newlib/c++/10.3.1/cmath **** //
ARM GAS  /tmp/cch2Dr4w.s 			page 195


  38:/usr/include/newlib/c++/10.3.1/cmath **** 
  39:/usr/include/newlib/c++/10.3.1/cmath **** #pragma GCC system_header
  40:/usr/include/newlib/c++/10.3.1/cmath **** 
  41:/usr/include/newlib/c++/10.3.1/cmath **** #include <bits/c++config.h>
  42:/usr/include/newlib/c++/10.3.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/include/newlib/c++/10.3.1/cmath **** #include <ext/type_traits.h>
  44:/usr/include/newlib/c++/10.3.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/include/newlib/c++/10.3.1/cmath **** #include <math.h>
  46:/usr/include/newlib/c++/10.3.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/include/newlib/c++/10.3.1/cmath **** #include <bits/std_abs.h>
  48:/usr/include/newlib/c++/10.3.1/cmath **** 
  49:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/include/newlib/c++/10.3.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/include/newlib/c++/10.3.1/cmath **** 
  52:/usr/include/newlib/c++/10.3.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/include/newlib/c++/10.3.1/cmath **** #undef div
  54:/usr/include/newlib/c++/10.3.1/cmath **** #undef acos
  55:/usr/include/newlib/c++/10.3.1/cmath **** #undef asin
  56:/usr/include/newlib/c++/10.3.1/cmath **** #undef atan
  57:/usr/include/newlib/c++/10.3.1/cmath **** #undef atan2
  58:/usr/include/newlib/c++/10.3.1/cmath **** #undef ceil
  59:/usr/include/newlib/c++/10.3.1/cmath **** #undef cos
  60:/usr/include/newlib/c++/10.3.1/cmath **** #undef cosh
  61:/usr/include/newlib/c++/10.3.1/cmath **** #undef exp
  62:/usr/include/newlib/c++/10.3.1/cmath **** #undef fabs
  63:/usr/include/newlib/c++/10.3.1/cmath **** #undef floor
  64:/usr/include/newlib/c++/10.3.1/cmath **** #undef fmod
  65:/usr/include/newlib/c++/10.3.1/cmath **** #undef frexp
  66:/usr/include/newlib/c++/10.3.1/cmath **** #undef ldexp
  67:/usr/include/newlib/c++/10.3.1/cmath **** #undef log
  68:/usr/include/newlib/c++/10.3.1/cmath **** #undef log10
  69:/usr/include/newlib/c++/10.3.1/cmath **** #undef modf
  70:/usr/include/newlib/c++/10.3.1/cmath **** #undef pow
  71:/usr/include/newlib/c++/10.3.1/cmath **** #undef sin
  72:/usr/include/newlib/c++/10.3.1/cmath **** #undef sinh
  73:/usr/include/newlib/c++/10.3.1/cmath **** #undef sqrt
  74:/usr/include/newlib/c++/10.3.1/cmath **** #undef tan
  75:/usr/include/newlib/c++/10.3.1/cmath **** #undef tanh
  76:/usr/include/newlib/c++/10.3.1/cmath **** 
  77:/usr/include/newlib/c++/10.3.1/cmath **** extern "C++"
  78:/usr/include/newlib/c++/10.3.1/cmath **** {
  79:/usr/include/newlib/c++/10.3.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/include/newlib/c++/10.3.1/cmath **** {
  81:/usr/include/newlib/c++/10.3.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/include/newlib/c++/10.3.1/cmath **** 
  83:/usr/include/newlib/c++/10.3.1/cmath ****   using ::acos;
  84:/usr/include/newlib/c++/10.3.1/cmath **** 
  85:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/include/newlib/c++/10.3.1/cmath ****   acos(float __x)
  88:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/include/newlib/c++/10.3.1/cmath **** 
  90:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/include/newlib/c++/10.3.1/cmath ****   acos(long double __x)
  92:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/include/newlib/c++/10.3.1/cmath **** #endif
  94:/usr/include/newlib/c++/10.3.1/cmath **** 
ARM GAS  /tmp/cch2Dr4w.s 			page 196


  95:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
  96:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
  99:/usr/include/newlib/c++/10.3.1/cmath ****     acos(_Tp __x)
 100:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/include/newlib/c++/10.3.1/cmath **** 
 102:/usr/include/newlib/c++/10.3.1/cmath ****   using ::asin;
 103:/usr/include/newlib/c++/10.3.1/cmath **** 
 104:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/include/newlib/c++/10.3.1/cmath ****   asin(float __x)
 107:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/include/newlib/c++/10.3.1/cmath **** 
 109:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/include/newlib/c++/10.3.1/cmath ****   asin(long double __x)
 111:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 113:/usr/include/newlib/c++/10.3.1/cmath **** 
 114:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 115:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 118:/usr/include/newlib/c++/10.3.1/cmath ****     asin(_Tp __x)
 119:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/include/newlib/c++/10.3.1/cmath **** 
 121:/usr/include/newlib/c++/10.3.1/cmath ****   using ::atan;
 122:/usr/include/newlib/c++/10.3.1/cmath **** 
 123:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/include/newlib/c++/10.3.1/cmath ****   atan(float __x)
 126:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/include/newlib/c++/10.3.1/cmath **** 
 128:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/include/newlib/c++/10.3.1/cmath ****   atan(long double __x)
 130:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 132:/usr/include/newlib/c++/10.3.1/cmath **** 
 133:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 134:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 137:/usr/include/newlib/c++/10.3.1/cmath ****     atan(_Tp __x)
 138:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/include/newlib/c++/10.3.1/cmath **** 
 140:/usr/include/newlib/c++/10.3.1/cmath ****   using ::atan2;
 141:/usr/include/newlib/c++/10.3.1/cmath **** 
 142:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/include/newlib/c++/10.3.1/cmath ****   atan2(float __y, float __x)
 145:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/include/newlib/c++/10.3.1/cmath **** 
 147:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/include/newlib/c++/10.3.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 151:/usr/include/newlib/c++/10.3.1/cmath **** 
ARM GAS  /tmp/cch2Dr4w.s 			page 197


 152:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/include/newlib/c++/10.3.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/include/newlib/c++/10.3.1/cmath ****     {
 157:/usr/include/newlib/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/include/newlib/c++/10.3.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/include/newlib/c++/10.3.1/cmath ****     }
 160:/usr/include/newlib/c++/10.3.1/cmath **** 
 161:/usr/include/newlib/c++/10.3.1/cmath ****   using ::ceil;
 162:/usr/include/newlib/c++/10.3.1/cmath **** 
 163:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/include/newlib/c++/10.3.1/cmath ****   ceil(float __x)
 166:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/include/newlib/c++/10.3.1/cmath **** 
 168:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/include/newlib/c++/10.3.1/cmath ****   ceil(long double __x)
 170:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 172:/usr/include/newlib/c++/10.3.1/cmath **** 
 173:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 174:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 177:/usr/include/newlib/c++/10.3.1/cmath ****     ceil(_Tp __x)
 178:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/include/newlib/c++/10.3.1/cmath **** 
 180:/usr/include/newlib/c++/10.3.1/cmath ****   using ::cos;
 181:/usr/include/newlib/c++/10.3.1/cmath **** 
 182:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/include/newlib/c++/10.3.1/cmath ****   cos(float __x)
 185:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/include/newlib/c++/10.3.1/cmath **** 
 187:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/include/newlib/c++/10.3.1/cmath ****   cos(long double __x)
 189:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 191:/usr/include/newlib/c++/10.3.1/cmath **** 
 192:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 193:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 196:/usr/include/newlib/c++/10.3.1/cmath ****     cos(_Tp __x)
 197:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/include/newlib/c++/10.3.1/cmath **** 
 199:/usr/include/newlib/c++/10.3.1/cmath ****   using ::cosh;
 200:/usr/include/newlib/c++/10.3.1/cmath **** 
 201:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/include/newlib/c++/10.3.1/cmath ****   cosh(float __x)
 204:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/include/newlib/c++/10.3.1/cmath **** 
 206:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/include/newlib/c++/10.3.1/cmath ****   cosh(long double __x)
 208:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_coshl(__x); }
ARM GAS  /tmp/cch2Dr4w.s 			page 198


 209:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 210:/usr/include/newlib/c++/10.3.1/cmath **** 
 211:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 212:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 215:/usr/include/newlib/c++/10.3.1/cmath ****     cosh(_Tp __x)
 216:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/include/newlib/c++/10.3.1/cmath **** 
 218:/usr/include/newlib/c++/10.3.1/cmath ****   using ::exp;
 219:/usr/include/newlib/c++/10.3.1/cmath **** 
 220:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/include/newlib/c++/10.3.1/cmath ****   exp(float __x)
 223:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/include/newlib/c++/10.3.1/cmath **** 
 225:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/include/newlib/c++/10.3.1/cmath ****   exp(long double __x)
 227:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 229:/usr/include/newlib/c++/10.3.1/cmath **** 
 230:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 231:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 234:/usr/include/newlib/c++/10.3.1/cmath ****     exp(_Tp __x)
 235:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/include/newlib/c++/10.3.1/cmath **** 
 237:/usr/include/newlib/c++/10.3.1/cmath ****   using ::fabs;
 238:/usr/include/newlib/c++/10.3.1/cmath **** 
 239:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/include/newlib/c++/10.3.1/cmath ****   fabs(float __x)
 6899              		.loc 14 241 3 is_stmt 1 discriminator 1 view .LVU2055
 6900              	.LBB822:
 242:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 6901              		.loc 14 242 5 discriminator 1 view .LVU2056
 6902              		.loc 14 242 5 is_stmt 0 discriminator 1 view .LVU2057
 6903              	.LBE822:
 6904              	.LBE821:
 601:EchoBridgeWithUSB.cpp ****             isStereoInput = true;
 6905              		.loc 2 601 35 discriminator 1 view .LVU2058
 6906 002e 70EE607A 		vsub.f32	s15, s0, s1
 601:EchoBridgeWithUSB.cpp ****             isStereoInput = true;
 6907              		.loc 2 601 28 discriminator 1 view .LVU2059
 6908 0032 9FED177A 		vldr.32	s14, .L391+4
 6909              	.LBB824:
 6910              	.LBB823:
 6911              		.loc 14 242 31 discriminator 1 view .LVU2060
 6912 0036 F0EEE77A 		vabs.f32	s15, s15
 6913              	.LBE823:
 6914              	.LBE824:
 601:EchoBridgeWithUSB.cpp ****             isStereoInput = true;
 6915              		.loc 2 601 28 discriminator 1 view .LVU2061
 6916 003a F4EEC77A 		vcmpe.f32	s15, s14
 6917 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 602:EchoBridgeWithUSB.cpp ****             // No LED indicator for stereo mode in Hothouse pedal (only 2 LEDs available)
ARM GAS  /tmp/cch2Dr4w.s 			page 199


 6918              		.loc 2 602 13 is_stmt 1 discriminator 1 view .LVU2062
 602:EchoBridgeWithUSB.cpp ****             // No LED indicator for stereo mode in Hothouse pedal (only 2 LEDs available)
 6919              		.loc 2 602 27 is_stmt 0 discriminator 1 view .LVU2063
 6920 0042 C4BF     		itt	gt
 6921 0044 0122     		movgt	r2, #1
 6922 0046 1A70     		strbgt	r2, [r3]
 6923              	.L384:
 607:EchoBridgeWithUSB.cpp ****         
 6924              		.loc 2 607 9 is_stmt 1 view .LVU2064
 609:EchoBridgeWithUSB.cpp ****             // Bypass mode
 6925              		.loc 2 609 9 view .LVU2065
 6926 0048 124B     		ldr	r3, .L391+8
 6927 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6928 004c 6BB1     		cbz	r3, .L386
 611:EchoBridgeWithUSB.cpp ****             outR = inR;
 6929              		.loc 2 611 13 view .LVU2066
 611:EchoBridgeWithUSB.cpp ****             outR = inR;
 6930              		.loc 2 611 18 is_stmt 0 view .LVU2067
 6931 004e 8DED000A 		vstr.32	s0, [sp]
 612:EchoBridgeWithUSB.cpp ****         } else if (freeze) {
 6932              		.loc 2 612 13 is_stmt 1 view .LVU2068
 612:EchoBridgeWithUSB.cpp ****         } else if (freeze) {
 6933              		.loc 2 612 18 is_stmt 0 view .LVU2069
 6934 0052 CDED010A 		vstr.32	s1, [sp, #4]
 6935              	.LVL597:
 6936              	.L387:
 622:EchoBridgeWithUSB.cpp ****         out[1][i] = outR;
 6937              		.loc 2 622 9 is_stmt 1 discriminator 2 view .LVU2070
 622:EchoBridgeWithUSB.cpp ****         out[1][i] = outR;
 6938              		.loc 2 622 19 is_stmt 0 discriminator 2 view .LVU2071
 6939 0056 2B68     		ldr	r3, [r5]
 6940              	.LBE820:
 595:EchoBridgeWithUSB.cpp ****         // Get input samples
 6941              		.loc 2 595 5 discriminator 2 view .LVU2072
 6942 0058 0134     		adds	r4, r4, #1
 6943              	.LVL598:
 6944              	.LBB825:
 622:EchoBridgeWithUSB.cpp ****         out[1][i] = outR;
 6945              		.loc 2 622 19 discriminator 2 view .LVU2073
 6946 005a 009A     		ldr	r2, [sp]	@ float
 6947 005c 4344     		add	r3, r3, r8
 6948 005e 1A60     		str	r2, [r3]	@ float
 623:EchoBridgeWithUSB.cpp ****     }
 6949              		.loc 2 623 9 is_stmt 1 discriminator 2 view .LVU2074
 623:EchoBridgeWithUSB.cpp ****     }
 6950              		.loc 2 623 19 is_stmt 0 discriminator 2 view .LVU2075
 6951 0060 6B68     		ldr	r3, [r5, #4]
 6952 0062 019A     		ldr	r2, [sp, #4]	@ float
 6953 0064 4344     		add	r3, r3, r8
 6954 0066 1A60     		str	r2, [r3]	@ float
 6955              	.LBE825:
 595:EchoBridgeWithUSB.cpp ****         // Get input samples
 6956              		.loc 2 595 5 is_stmt 1 discriminator 2 view .LVU2076
 6957              	.LVL599:
 595:EchoBridgeWithUSB.cpp ****         // Get input samples
 6958              		.loc 2 595 5 is_stmt 0 discriminator 2 view .LVU2077
 6959 0068 D0E7     		b	.L389
ARM GAS  /tmp/cch2Dr4w.s 			page 200


 6960              	.LVL600:
 6961              	.L386:
 6962              	.LBB826:
 613:EchoBridgeWithUSB.cpp ****             // Freeze mode - only output reverb tail
 6963              		.loc 2 613 16 is_stmt 1 view .LVU2078
 6964 006a 0B4B     		ldr	r3, .L391+12
 615:EchoBridgeWithUSB.cpp ****         } else {
 6965              		.loc 2 615 27 is_stmt 0 view .LVU2079
 6966 006c 01AA     		add	r2, sp, #4
 6967 006e 6946     		mov	r1, sp
 613:EchoBridgeWithUSB.cpp ****             // Freeze mode - only output reverb tail
 6968              		.loc 2 613 16 view .LVU2080
 6969 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6970 0072 1BB1     		cbz	r3, .L388
 615:EchoBridgeWithUSB.cpp ****         } else {
 6971              		.loc 2 615 13 is_stmt 1 view .LVU2081
 615:EchoBridgeWithUSB.cpp ****         } else {
 6972              		.loc 2 615 27 is_stmt 0 view .LVU2082
 6973 0074 DFED090A 		vldr.32	s1, .L391+16
 6974              	.LVL601:
 615:EchoBridgeWithUSB.cpp ****         } else {
 6975              		.loc 2 615 27 view .LVU2083
 6976 0078 B0EE600A 		vmov.f32	s0, s1
 6977              	.LVL602:
 6978              	.L388:
 618:EchoBridgeWithUSB.cpp ****         }
 6979              		.loc 2 618 13 is_stmt 1 view .LVU2084
 618:EchoBridgeWithUSB.cpp ****         }
 6980              		.loc 2 618 27 is_stmt 0 view .LVU2085
 6981 007c 0848     		ldr	r0, .L391+20
 6982 007e FFF7FEFF 		bl	_ZN28PartitionedConvolutionReverb7ProcessEffPfS0_
 6983              	.LVL603:
 618:EchoBridgeWithUSB.cpp ****         }
 6984              		.loc 2 618 27 view .LVU2086
 6985 0082 E8E7     		b	.L387
 6986              	.L382:
 618:EchoBridgeWithUSB.cpp ****         }
 6987              		.loc 2 618 27 view .LVU2087
 6988              	.LBE826:
 6989              	.LBE819:
 625:EchoBridgeWithUSB.cpp **** 
 6990              		.loc 2 625 1 view .LVU2088
 6991 0084 02B0     		add	sp, sp, #8
 6992              		.cfi_def_cfa_offset 24
 6993              		@ sp needed
 6994 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6995              	.LVL604:
 6996              	.L392:
 625:EchoBridgeWithUSB.cpp **** 
 6997              		.loc 2 625 1 view .LVU2089
 6998 008a 00BF     		.align	2
 6999              	.L391:
 7000 008c 00000000 		.word	.LANCHOR8
 7001 0090 0AD7233C 		.word	1008981770
 7002 0094 00000000 		.word	.LANCHOR2
 7003 0098 00000000 		.word	.LANCHOR0
 7004 009c 00000000 		.word	0
ARM GAS  /tmp/cch2Dr4w.s 			page 201


 7005 00a0 00000000 		.word	reverb
 7006              		.cfi_endproc
 7007              	.LFE5519:
 7009              		.section	.text.startup._GLOBAL__sub_I__ZN8IRLoader14LoadIRCallbackE,"ax",%progbits
 7010              		.align	1
 7011              		.syntax unified
 7012              		.thumb
 7013              		.thumb_func
 7014              		.fpu fpv5-d16
 7016              	_GLOBAL__sub_I__ZN8IRLoader14LoadIRCallbackE:
 7017              	.LFB6142:
 787:EchoBridgeWithUSB.cpp ****     }
 788:EchoBridgeWithUSB.cpp **** }
 7018              		.loc 2 788 1 is_stmt 1 view -0
 7019              		.cfi_startproc
 7020              		@ args = 0, pretend = 0, frame = 0
 7021              		@ frame_needed = 0, uses_anonymous_args = 0
 7022              	.LBB887:
 7023              	.LBI887:
 7024              		.loc 2 788 1 view .LVU2091
 7025              	.LVL605:
 7026              	.LBB888:
 7027              	.LBB889:
 7028              	.LBI889:
  42:hothouse.h    ****     
 7029              		.loc 3 42 5 view .LVU2092
 7030              	.LBB890:
 7031              	.LBB891:
 7032              	.LBB892:
 7033              	.LBI892:
  21:/home/ubuntu/DaisyExamples/libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 7034              		.loc 4 21 5 view .LVU2093
 7035              	.LBB893:
 7036              	.LBB894:
 7037              	.LBI894:
 7038              		.file 15 "/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
   4:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
   6:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** #include <cstdint>
   7:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
   9:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
  19:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** namespace daisy
  20:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** {
  21:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** /** @addtogroup serial
ARM GAS  /tmp/cch2Dr4w.s 			page 202


  22:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** @{
  23:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** */
  24:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
  25:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** /** 
  26:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** */
  30:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** class QSPIHandle
  31:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** {
  32:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****   public:
  33:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     enum Result
  34:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     {
  35:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         OK = 0,
  36:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         ERR
  37:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     };
  38:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
  39:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****          * 
  43:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****          */
  48:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     enum Status
  49:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     {
  50:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     };
  55:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
  56:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     struct Config
  58:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     {
  59:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         enum Device
  61:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         {
  62:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         };
  66:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
  67:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         /** 
  68:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Modes of operation.
  69:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         */
  74:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         enum Mode
  75:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         {
  76:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             MODE_LAST,
ARM GAS  /tmp/cch2Dr4w.s 			page 203


  79:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         };
  80:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
  81:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         struct
  83:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         {
  84:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         } pin_config;
  91:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
  92:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Device device;
  93:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Mode   mode;
  94:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     };
  95:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
  96:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** 
  97:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         */
 101:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
 103:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
 106:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** 
 109:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         */
 113:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     Result DeInit();
 114:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
 115:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** 
 116:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         */
 123:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
 125:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** 
 126:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         */
 132:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
 134:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** 
 135:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
ARM GAS  /tmp/cch2Dr4w.s 			page 204


 136:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         */
 142:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
 144:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /**  
 145:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****         */
 150:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
 152:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****      *  \returns Status
 154:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****      */
 155:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
 157:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****      * 
 161:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     */
 164:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h **** 
 166:/home/ubuntu/DaisyExamples/libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 7039              		.loc 15 166 5 view .LVU2094
 7040              	.LBE894:
 7041              	.LBE893:
 7042              	.LBE892:
 7043              	.LBE891:
 7044              	.LBE890:
 7045              	.LBE889:
 7046              	.LBE888:
 7047              	.LBE887:
 7048              		.loc 2 788 1 is_stmt 0 view .LVU2095
 7049 0000 38B5     		push	{r3, r4, r5, lr}
 7050              		.cfi_def_cfa_offset 16
 7051              		.cfi_offset 3, -16
 7052              		.cfi_offset 4, -12
 7053              		.cfi_offset 5, -8
 7054              		.cfi_offset 14, -4
 7055              	.LBB967:
 7056              	.LBB964:
 7057              	.LBB921:
 7058              	.LBB919:
 7059              	.LBB917:
 7060              	.LBB915:
 7061              	.LBB913:
 7062              	.LBB899:
 7063              	.LBB895:
 7064              	.LBB896:
ARM GAS  /tmp/cch2Dr4w.s 			page 205


 7065              		.loc 15 166 34 view .LVU2096
 7066 0002 0024     		movs	r4, #0
 7067 0004 4E4D     		ldr	r5, .L398+24
 7068              	.LBE896:
 7069              	.LBE895:
 7070              	.LBE899:
 7071              	.LBE913:
 7072              	.LBE915:
  42:hothouse.h    ****     
 7073              		.loc 3 42 16 view .LVU2097
 7074 0006 1822     		movs	r2, #24
 7075 0008 2146     		mov	r1, r4
 7076 000a 05F15800 		add	r0, r5, #88
 7077              	.LBE917:
 7078              	.LBE919:
 7079              	.LBE921:
 7080              	.LBE964:
 7081              	.LBE967:
 7082              		.loc 2 788 1 view .LVU2098
 7083 000e 2DED048B 		vpush.64	{d8, d9}
 7084              		.cfi_def_cfa_offset 32
 7085              		.cfi_offset 80, -32
 7086              		.cfi_offset 81, -28
 7087              		.cfi_offset 82, -24
 7088              		.cfi_offset 83, -20
 7089              	.LBB968:
 7090              	.LBB965:
 7091              	.LBB922:
 7092              	.LBB920:
 7093              	.LBB918:
 7094              	.LBB916:
 7095              	.LBB914:
 7096              	.LBB900:
 7097              	.LBB898:
 7098              	.LBB897:
 7099              		.loc 15 166 34 view .LVU2099
 7100 0012 2C60     		str	r4, [r5]
 7101              	.LVL606:
 7102              		.loc 15 166 34 view .LVU2100
 7103              	.LBE897:
 7104              	.LBE898:
 7105              	.LBE900:
 7106              	.LBB901:
 7107              	.LBI901:
  95:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 7108              		.loc 8 95 5 is_stmt 1 view .LVU2101
 7109              	.LBB902:
 7110              	.LBB903:
  95:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 7111              		.loc 8 95 35 is_stmt 0 view .LVU2102
 7112 0014 6C61     		str	r4, [r5, #20]
 7113              	.LVL607:
  95:/home/ubuntu/DaisyExamples/libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 7114              		.loc 8 95 35 view .LVU2103
 7115              	.LBE903:
 7116              	.LBE902:
 7117              	.LBE901:
ARM GAS  /tmp/cch2Dr4w.s 			page 206


 7118              	.LBB904:
 7119              	.LBI904:
 109:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 7120              		.loc 7 109 5 is_stmt 1 view .LVU2104
 109:/home/ubuntu/DaisyExamples/libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 7121              		.loc 7 109 5 is_stmt 0 view .LVU2105
 7122              	.LBE904:
 7123              	.LBB905:
 7124              	.LBI905:
 7125              		.file 16 "/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** #pragma once
   2:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** 
   5:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** 
   7:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** namespace daisy
   8:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** {
   9:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  ** 
  12:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  **
  15:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  **
  17:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****  ***/
  21:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** class DacHandle
  22:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** {
  23:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****   public:
  24:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     enum class Result
  26:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     {
  27:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         OK,
  28:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         ERR,
  29:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     };
  30:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** 
  31:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     enum class Channel
  33:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     {
  34:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         ONE,
  35:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         TWO,
  36:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         BOTH,
  37:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     };
  38:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** 
  39:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****      **
  41:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****      **
  43:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****      ***/
  46:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     enum class Mode
  47:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     {
ARM GAS  /tmp/cch2Dr4w.s 			page 207


  48:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         POLLING,
  49:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         DMA,
  50:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     };
  51:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** 
  52:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****      ***/
  56:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     enum class BitDepth
  57:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     {
  58:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         BITS_8,
  59:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         BITS_12
  60:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     };
  61:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** 
  62:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     enum class BufferState
  64:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     {
  65:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         ENABLED,
  66:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         DISABLED,
  67:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     };
  68:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** 
  69:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     struct Config
  71:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     {
  72:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** 
  78:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         Channel     chn;
  79:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         Mode        mode;
  80:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     };
  83:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h **** 
  84:/home/ubuntu/DaisyExamples/libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 7126              		.loc 16 84 5 is_stmt 1 view .LVU2106
 7127              	.LBB906:
 7128              	.LBB907:
 7129              		.loc 16 84 33 is_stmt 0 view .LVU2107
 7130 0016 2C62     		str	r4, [r5, #32]
 7131              	.LVL608:
 7132              		.loc 16 84 33 view .LVU2108
 7133              	.LBE907:
 7134              	.LBE906:
 7135              	.LBE905:
 7136              	.LBB908:
 7137              	.LBI908:
  40:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** 
 7138              		.loc 6 40 5 is_stmt 1 view .LVU2109
  40:/home/ubuntu/DaisyExamples/libDaisy/src/hid/usb.h **** 
 7139              		.loc 6 40 5 is_stmt 0 view .LVU2110
 7140              	.LBE908:
 7141              	.LBB909:
 7142              	.LBI909:
  96:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     ~System() {}
ARM GAS  /tmp/cch2Dr4w.s 			page 208


 7143              		.loc 5 96 5 is_stmt 1 view .LVU2111
  96:/home/ubuntu/DaisyExamples/libDaisy/src/sys/system.h ****     ~System() {}
 7144              		.loc 5 96 5 is_stmt 0 view .LVU2112
 7145              	.LBE909:
 7146              	.LBB910:
 7147              	.LBI910:
 7148              		.file 17 "/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h"
   1:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** #pragma once
   2:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** 
   5:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** 
   7:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** namespace daisy
   8:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** {
   9:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** /** 
  10:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * 
  14:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *
  18:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * 
  21:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  * 
  23:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****  */
  42:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** class SaiHandle
  43:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** {
  44:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****   public:
  45:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****     struct Config
  47:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****     {
  48:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         enum class Peripheral
  50:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         {
ARM GAS  /tmp/cch2Dr4w.s 			page 209


  51:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_1,
  52:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_2,
  53:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         };
  54:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** 
  55:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         enum class SampleRate
  57:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         {
  58:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         };
  64:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** 
  65:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         enum class BitDepth
  67:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         {
  68:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         };
  72:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** 
  73:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****          */
  77:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         enum class Sync
  78:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         {
  79:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             MASTER,
  80:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             SLAVE,
  81:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         };
  82:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** 
  83:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         enum class Direction
  85:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         {
  86:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             TRANSMIT,
  87:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             RECEIVE,
  88:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         };
  89:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** 
  90:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         Peripheral periph;
  91:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         struct
  92:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         {
  93:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         } pin_config;
  95:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         SampleRate sr;
  96:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****     };
 100:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** 
 101:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****     enum class Result
 103:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****     {
 104:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         OK,
 105:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****         ERR,
 106:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****     };
 107:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h **** 
ARM GAS  /tmp/cch2Dr4w.s 			page 210


 108:/home/ubuntu/DaisyExamples/libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 7149              		.loc 17 108 5 is_stmt 1 view .LVU2113
 7150              	.LBB911:
 7151              	.LBB912:
 7152              		.loc 17 108 33 is_stmt 0 view .LVU2114
 7153 0018 EC63     		str	r4, [r5, #60]
 7154              	.LVL609:
 7155              		.loc 17 108 33 view .LVU2115
 7156              	.LBE912:
 7157              	.LBE911:
 7158              	.LBE910:
 7159              	.LBE914:
 7160              	.LBE916:
  42:hothouse.h    ****     
 7161              		.loc 3 42 16 view .LVU2116
 7162 001a FFF7FEFF 		bl	memset
 7163              	.LVL610:
  42:hothouse.h    ****     
 7164              		.loc 3 42 16 is_stmt 1 view .LVU2117
  42:hothouse.h    ****     
 7165              		.loc 3 42 16 view .LVU2118
  42:hothouse.h    ****     
 7166              		.loc 3 42 16 is_stmt 0 view .LVU2119
 7167              	.LBE918:
 7168              	.LBE920:
 7169              	.LBE922:
  14:EchoBridgeWithUSB.cpp **** 
 7170              		.loc 2 14 10 view .LVU2120
 7171 001e 494A     		ldr	r2, .L398+28
 7172 0020 4949     		ldr	r1, .L398+32
 7173 0022 2846     		mov	r0, r5
 7174 0024 FFF7FEFF 		bl	__aeabi_atexit
 7175              	.LVL611:
 7176              	.LBB923:
 7177              	.LBI923:
  15:IRLoader.h    ****     
 7178              		.loc 10 15 5 is_stmt 1 view .LVU2121
 7179              	.LBB924:
 7180              	.LBB925:
  15:IRLoader.h    ****     
 7181              		.loc 10 15 48 is_stmt 0 view .LVU2122
 7182 0028 484B     		ldr	r3, .L398+36
 7183              	.LBE925:
 7184              	.LBE924:
 7185              	.LBE923:
 7186              	.LBB928:
 7187              	.LBB929:
 7188              	.LBB930:
 209:EchoBridgeWithUSB.cpp ****     {
 7189              		.loc 2 209 27 view .LVU2123
 7190 002a 494D     		ldr	r5, .L398+40
 7191              	.LBE930:
 7192              	.LBE929:
 7193              	.LBE928:
  20:EchoBridgeWithUSB.cpp **** Led led2;  // LED 2 - Used for bypass status
 7194              		.loc 2 20 5 view .LVU2124
 7195 002c 454A     		ldr	r2, .L398+28
ARM GAS  /tmp/cch2Dr4w.s 			page 211


 7196 002e 4949     		ldr	r1, .L398+44
 7197              	.LBB960:
 7198              	.LBB927:
 7199              	.LBB926:
  15:IRLoader.h    ****     
 7200              		.loc 10 15 48 view .LVU2125
 7201 0030 1C60     		str	r4, [r3]
 7202 0032 1C71     		strb	r4, [r3, #4]
 7203              	.LVL612:
  15:IRLoader.h    ****     
 7204              		.loc 10 15 48 view .LVU2126
 7205              	.LBE926:
 7206              	.LBE927:
 7207              	.LBE960:
 7208              	.LBB961:
 7209              	.LBI961:
  24:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     ~Led() {}
 7210              		.loc 1 24 5 is_stmt 1 view .LVU2127
  24:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     ~Led() {}
 7211              		.loc 1 24 5 is_stmt 0 view .LVU2128
 7212              	.LBE961:
  20:EchoBridgeWithUSB.cpp **** Led led2;  // LED 2 - Used for bypass status
 7213              		.loc 2 20 5 view .LVU2129
 7214 0034 4848     		ldr	r0, .L398+48
 7215 0036 FFF7FEFF 		bl	__aeabi_atexit
 7216              	.LVL613:
 7217              	.LBB962:
 7218              	.LBI962:
  24:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     ~Led() {}
 7219              		.loc 1 24 5 is_stmt 1 view .LVU2130
  24:/home/ubuntu/DaisyExamples/libDaisy/src/hid/led.h ****     ~Led() {}
 7220              		.loc 1 24 5 is_stmt 0 view .LVU2131
 7221              	.LBE962:
  21:EchoBridgeWithUSB.cpp **** 
 7222              		.loc 2 21 5 view .LVU2132
 7223 003a 424A     		ldr	r2, .L398+28
 7224 003c 4549     		ldr	r1, .L398+44
 7225 003e 4748     		ldr	r0, .L398+52
 7226 0040 FFF7FEFF 		bl	__aeabi_atexit
 7227              	.LVL614:
 7228              	.LBB963:
 7229              	.LBI928:
 194:EchoBridgeWithUSB.cpp ****         irBuffer(nullptr),
 7230              		.loc 2 194 5 is_stmt 1 view .LVU2133
 7231              	.LBB959:
 7232              	.LBB958:
 209:EchoBridgeWithUSB.cpp ****     {
 7233              		.loc 2 209 27 is_stmt 0 view .LVU2134
 7234 0044 AC60     		str	r4, [r5, #8]
 7235              	.LVL615:
 7236              	.LBB931:
 7237              	.LBI931:
  12:shy_fft.h     ****         // Precompute twiddle factors
 7238              		.loc 12 12 5 is_stmt 1 view .LVU2135
 7239              	.LBB932:
 7240              	.LBB933:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
ARM GAS  /tmp/cch2Dr4w.s 			page 212


 7241              		.loc 12 14 30 view .LVU2136
 7242              	.LBE933:
 7243              	.LBE932:
 7244              	.LBE931:
 209:EchoBridgeWithUSB.cpp ****     {
 7245              		.loc 2 209 27 is_stmt 0 view .LVU2137
 7246 0046 C5E90044 		strd	r4, r4, [r5]
 7247 004a 0C35     		adds	r5, r5, #12
 7248              	.LVL616:
 7249              	.L394:
 7250              	.LBB943:
 7251              	.LBB942:
 7252              	.LBB941:
 7253              	.LBB934:
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7254              		.loc 12 15 35 view .LVU2138
 7255 004c 07EE904A 		vmov	s15, r4	@ int
 7256              	.LBE934:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7257              		.loc 12 14 9 view .LVU2139
 7258 0050 0134     		adds	r4, r4, #1
 7259              	.LVL617:
 7260              	.LBB939:
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7261              		.loc 12 15 35 view .LVU2140
 7262 0052 B8EEE70B 		vcvt.f64.s32	d0, s15
 7263 0056 9FED349B 		vldr.64	d9, .L398
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7264              		.loc 12 15 39 view .LVU2141
 7265 005a 9FED357B 		vldr.64	d7, .L398+8
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7266              		.loc 12 15 35 view .LVU2142
 7267 005e 20EE090B 		vmul.f64	d0, d0, d9
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7268              		.loc 12 15 39 view .LVU2143
 7269 0062 20EE070B 		vmul.f64	d0, d0, d7
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7270              		.loc 12 15 15 view .LVU2144
 7271 0066 B7EEC08B 		vcvt.f32.f64	s16, d0
 7272              	.LVL618:
 7273              	.LBB935:
 7274              	.LBI935:
 184:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 7275              		.loc 14 184 3 is_stmt 1 view .LVU2145
 7276              	.LBB936:
 185:/usr/include/newlib/c++/10.3.1/cmath **** 
 7277              		.loc 14 185 5 view .LVU2146
 185:/usr/include/newlib/c++/10.3.1/cmath **** 
 7278              		.loc 14 185 26 is_stmt 0 view .LVU2147
 7279 006a B0EE480A 		vmov.f32	s0, s16
 7280 006e FFF7FEFF 		bl	cosf
 7281              	.LVL619:
 185:/usr/include/newlib/c++/10.3.1/cmath **** 
 7282              		.loc 14 185 26 view .LVU2148
 7283              	.LBE936:
 7284              	.LBE935:
  16:shy_fft.h     ****             twiddles_imag_[i] = sin(angle);
ARM GAS  /tmp/cch2Dr4w.s 			page 213


 7285              		.loc 12 16 31 view .LVU2149
 7286 0072 A5EC010A 		vstmia.32	r5!, {s0}
 7287              	.LVL620:
 7288              	.LBB937:
 7289              	.LBI937:
 243:/usr/include/newlib/c++/10.3.1/cmath **** 
 244:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/include/newlib/c++/10.3.1/cmath ****   fabs(long double __x)
 246:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 248:/usr/include/newlib/c++/10.3.1/cmath **** 
 249:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 250:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 253:/usr/include/newlib/c++/10.3.1/cmath ****     fabs(_Tp __x)
 254:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/include/newlib/c++/10.3.1/cmath **** 
 256:/usr/include/newlib/c++/10.3.1/cmath ****   using ::floor;
 257:/usr/include/newlib/c++/10.3.1/cmath **** 
 258:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/include/newlib/c++/10.3.1/cmath ****   floor(float __x)
 261:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/include/newlib/c++/10.3.1/cmath **** 
 263:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/include/newlib/c++/10.3.1/cmath ****   floor(long double __x)
 265:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 267:/usr/include/newlib/c++/10.3.1/cmath **** 
 268:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 269:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 272:/usr/include/newlib/c++/10.3.1/cmath ****     floor(_Tp __x)
 273:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/include/newlib/c++/10.3.1/cmath **** 
 275:/usr/include/newlib/c++/10.3.1/cmath ****   using ::fmod;
 276:/usr/include/newlib/c++/10.3.1/cmath **** 
 277:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/include/newlib/c++/10.3.1/cmath ****   fmod(float __x, float __y)
 280:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/include/newlib/c++/10.3.1/cmath **** 
 282:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/include/newlib/c++/10.3.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 286:/usr/include/newlib/c++/10.3.1/cmath **** 
 287:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/include/newlib/c++/10.3.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/include/newlib/c++/10.3.1/cmath ****     {
 292:/usr/include/newlib/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/include/newlib/c++/10.3.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/include/newlib/c++/10.3.1/cmath ****     }
ARM GAS  /tmp/cch2Dr4w.s 			page 214


 295:/usr/include/newlib/c++/10.3.1/cmath **** 
 296:/usr/include/newlib/c++/10.3.1/cmath ****   using ::frexp;
 297:/usr/include/newlib/c++/10.3.1/cmath **** 
 298:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/include/newlib/c++/10.3.1/cmath ****   inline float
 300:/usr/include/newlib/c++/10.3.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/include/newlib/c++/10.3.1/cmath **** 
 303:/usr/include/newlib/c++/10.3.1/cmath ****   inline long double
 304:/usr/include/newlib/c++/10.3.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 307:/usr/include/newlib/c++/10.3.1/cmath **** 
 308:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 309:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 312:/usr/include/newlib/c++/10.3.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/include/newlib/c++/10.3.1/cmath **** 
 315:/usr/include/newlib/c++/10.3.1/cmath ****   using ::ldexp;
 316:/usr/include/newlib/c++/10.3.1/cmath **** 
 317:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/include/newlib/c++/10.3.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/include/newlib/c++/10.3.1/cmath **** 
 322:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/include/newlib/c++/10.3.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 326:/usr/include/newlib/c++/10.3.1/cmath **** 
 327:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 328:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 331:/usr/include/newlib/c++/10.3.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/include/newlib/c++/10.3.1/cmath **** 
 334:/usr/include/newlib/c++/10.3.1/cmath ****   using ::log;
 335:/usr/include/newlib/c++/10.3.1/cmath **** 
 336:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/include/newlib/c++/10.3.1/cmath ****   log(float __x)
 339:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/include/newlib/c++/10.3.1/cmath **** 
 341:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/include/newlib/c++/10.3.1/cmath ****   log(long double __x)
 343:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 345:/usr/include/newlib/c++/10.3.1/cmath **** 
 346:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 347:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 350:/usr/include/newlib/c++/10.3.1/cmath ****     log(_Tp __x)
 351:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_log(__x); }
ARM GAS  /tmp/cch2Dr4w.s 			page 215


 352:/usr/include/newlib/c++/10.3.1/cmath **** 
 353:/usr/include/newlib/c++/10.3.1/cmath ****   using ::log10;
 354:/usr/include/newlib/c++/10.3.1/cmath **** 
 355:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/include/newlib/c++/10.3.1/cmath ****   log10(float __x)
 358:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/include/newlib/c++/10.3.1/cmath **** 
 360:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/include/newlib/c++/10.3.1/cmath ****   log10(long double __x)
 362:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 364:/usr/include/newlib/c++/10.3.1/cmath **** 
 365:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp>
 366:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/include/newlib/c++/10.3.1/cmath ****                                     double>::__type
 369:/usr/include/newlib/c++/10.3.1/cmath ****     log10(_Tp __x)
 370:/usr/include/newlib/c++/10.3.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/include/newlib/c++/10.3.1/cmath **** 
 372:/usr/include/newlib/c++/10.3.1/cmath ****   using ::modf;
 373:/usr/include/newlib/c++/10.3.1/cmath **** 
 374:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/include/newlib/c++/10.3.1/cmath ****   inline float
 376:/usr/include/newlib/c++/10.3.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/include/newlib/c++/10.3.1/cmath **** 
 379:/usr/include/newlib/c++/10.3.1/cmath ****   inline long double
 380:/usr/include/newlib/c++/10.3.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 383:/usr/include/newlib/c++/10.3.1/cmath **** 
 384:/usr/include/newlib/c++/10.3.1/cmath ****   using ::pow;
 385:/usr/include/newlib/c++/10.3.1/cmath **** 
 386:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/include/newlib/c++/10.3.1/cmath ****   pow(float __x, float __y)
 389:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/include/newlib/c++/10.3.1/cmath **** 
 391:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/include/newlib/c++/10.3.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/include/newlib/c++/10.3.1/cmath **** 
 395:/usr/include/newlib/c++/10.3.1/cmath **** #if __cplusplus < 201103L
 396:/usr/include/newlib/c++/10.3.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/include/newlib/c++/10.3.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/include/newlib/c++/10.3.1/cmath ****   inline double
 399:/usr/include/newlib/c++/10.3.1/cmath ****   pow(double __x, int __i)
 400:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/include/newlib/c++/10.3.1/cmath **** 
 402:/usr/include/newlib/c++/10.3.1/cmath ****   inline float
 403:/usr/include/newlib/c++/10.3.1/cmath ****   pow(float __x, int __n)
 404:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/include/newlib/c++/10.3.1/cmath **** 
 406:/usr/include/newlib/c++/10.3.1/cmath ****   inline long double
 407:/usr/include/newlib/c++/10.3.1/cmath ****   pow(long double __x, int __n)
 408:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_powil(__x, __n); }
ARM GAS  /tmp/cch2Dr4w.s 			page 216


 409:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 410:/usr/include/newlib/c++/10.3.1/cmath **** #endif
 411:/usr/include/newlib/c++/10.3.1/cmath **** 
 412:/usr/include/newlib/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/include/newlib/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/include/newlib/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/include/newlib/c++/10.3.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/include/newlib/c++/10.3.1/cmath ****     {
 417:/usr/include/newlib/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/include/newlib/c++/10.3.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/include/newlib/c++/10.3.1/cmath ****     }
 420:/usr/include/newlib/c++/10.3.1/cmath **** 
 421:/usr/include/newlib/c++/10.3.1/cmath ****   using ::sin;
 422:/usr/include/newlib/c++/10.3.1/cmath **** 
 423:/usr/include/newlib/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/include/newlib/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/include/newlib/c++/10.3.1/cmath ****   sin(float __x)
 7290              		.loc 14 425 3 is_stmt 1 view .LVU2150
 7291              	.LBB938:
 426:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_sinf(__x); }
 7292              		.loc 14 426 5 view .LVU2151
 7293              		.loc 14 426 26 is_stmt 0 view .LVU2152
 7294 0076 B0EE480A 		vmov.f32	s0, s16
 7295 007a FFF7FEFF 		bl	sinf
 7296              	.LVL621:
 7297              		.loc 14 426 26 view .LVU2153
 7298              	.LBE938:
 7299              	.LBE937:
 7300              	.LBE939:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7301              		.loc 12 14 30 view .LVU2154
 7302 007e 202C     		cmp	r4, #32
 7303              	.LBB940:
  17:shy_fft.h     ****         }
 7304              		.loc 12 17 31 view .LVU2155
 7305 0080 85ED1F0A 		vstr.32	s0, [r5, #124]
 7306              	.LBE940:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7307              		.loc 12 14 9 is_stmt 1 view .LVU2156
 7308              	.LVL622:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7309              		.loc 12 14 30 view .LVU2157
 7310 0084 E2D1     		bne	.L394
 7311              	.LVL623:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7312              		.loc 12 14 30 is_stmt 0 view .LVU2158
 7313              	.LBE941:
 7314              	.LBE942:
 7315              	.LBE943:
 7316              	.LBB944:
 7317              	.LBI944:
  12:shy_fft.h     ****         // Precompute twiddle factors
 7318              		.loc 12 12 5 is_stmt 1 view .LVU2159
 7319              	.LBB945:
 7320              	.LBB946:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7321              		.loc 12 14 30 view .LVU2160
ARM GAS  /tmp/cch2Dr4w.s 			page 217


 7322 0086 364D     		ldr	r5, .L398+56
 7323              	.LVL624:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7324              		.loc 12 14 21 is_stmt 0 view .LVU2161
 7325 0088 0024     		movs	r4, #0
 7326              	.LVL625:
 7327              	.L395:
 7328              	.LBB947:
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7329              		.loc 12 15 35 view .LVU2162
 7330 008a 07EE904A 		vmov	s15, r4	@ int
 7331              	.LBE947:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7332              		.loc 12 14 9 view .LVU2163
 7333 008e 0134     		adds	r4, r4, #1
 7334              	.LVL626:
 7335              	.LBB952:
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7336              		.loc 12 15 35 view .LVU2164
 7337 0090 B8EEE70B 		vcvt.f64.s32	d0, s15
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7338              		.loc 12 15 39 view .LVU2165
 7339 0094 9FED287B 		vldr.64	d7, .L398+16
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7340              		.loc 12 15 35 view .LVU2166
 7341 0098 20EE090B 		vmul.f64	d0, d0, d9
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7342              		.loc 12 15 39 view .LVU2167
 7343 009c 20EE070B 		vmul.f64	d0, d0, d7
  15:shy_fft.h     ****             twiddles_real_[i] = cos(angle);
 7344              		.loc 12 15 15 view .LVU2168
 7345 00a0 B7EEC08B 		vcvt.f32.f64	s16, d0
 7346              	.LVL627:
 7347              	.LBB948:
 7348              	.LBI948:
 184:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 7349              		.loc 14 184 3 is_stmt 1 view .LVU2169
 7350              	.LBB949:
 185:/usr/include/newlib/c++/10.3.1/cmath **** 
 7351              		.loc 14 185 5 view .LVU2170
 185:/usr/include/newlib/c++/10.3.1/cmath **** 
 7352              		.loc 14 185 26 is_stmt 0 view .LVU2171
 7353 00a4 B0EE480A 		vmov.f32	s0, s16
 7354 00a8 FFF7FEFF 		bl	cosf
 7355              	.LVL628:
 185:/usr/include/newlib/c++/10.3.1/cmath **** 
 7356              		.loc 14 185 26 view .LVU2172
 7357              	.LBE949:
 7358              	.LBE948:
  16:shy_fft.h     ****             twiddles_imag_[i] = sin(angle);
 7359              		.loc 12 16 31 view .LVU2173
 7360 00ac A5EC010A 		vstmia.32	r5!, {s0}
 7361              	.LVL629:
 7362              	.LBB950:
 7363              	.LBI950:
 425:/usr/include/newlib/c++/10.3.1/cmath ****   { return __builtin_sinf(__x); }
 7364              		.loc 14 425 3 is_stmt 1 view .LVU2174
ARM GAS  /tmp/cch2Dr4w.s 			page 218


 7365              	.LBB951:
 7366              		.loc 14 426 5 view .LVU2175
 7367              		.loc 14 426 26 is_stmt 0 view .LVU2176
 7368 00b0 B0EE480A 		vmov.f32	s0, s16
 7369 00b4 FFF7FEFF 		bl	sinf
 7370              	.LVL630:
 7371              		.loc 14 426 26 view .LVU2177
 7372              	.LBE951:
 7373              	.LBE950:
  17:shy_fft.h     ****         }
 7374              		.loc 12 17 31 view .LVU2178
 7375 00b8 05F2FC73 		addw	r3, r5, #2044
 7376              	.LBE952:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7377              		.loc 12 14 30 view .LVU2179
 7378 00bc B4F5007F 		cmp	r4, #512
 7379              	.LBB953:
  17:shy_fft.h     ****         }
 7380              		.loc 12 17 31 view .LVU2180
 7381 00c0 83ED000A 		vstr.32	s0, [r3]
 7382              	.LBE953:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7383              		.loc 12 14 9 is_stmt 1 view .LVU2181
 7384              	.LVL631:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7385              		.loc 12 14 30 view .LVU2182
 7386 00c4 E1D1     		bne	.L395
 7387              	.LVL632:
  14:shy_fft.h     ****             T angle = -2.0 * M_PI * i / N;
 7388              		.loc 12 14 30 is_stmt 0 view .LVU2183
 7389              	.LBE946:
 7390              	.LBE945:
 7391              	.LBE944:
 209:EchoBridgeWithUSB.cpp ****     {
 7392              		.loc 2 209 27 view .LVU2184
 7393 00c6 274C     		ldr	r4, .L398+60
 7394 00c8 4FF07C52 		mov	r2, #1056964608
 7395 00cc 2649     		ldr	r1, .L398+64
 7396 00ce 0023     		movs	r3, #0
 7397 00d0 C4F81C22 		str	r2, [r4, #540]	@ float
 7398 00d4 0022     		movs	r2, #0
 7399 00d6 C4F82812 		str	r1, [r4, #552]	@ float
 7400 00da C4F82022 		str	r2, [r4, #544]	@ float
 7401 00de 4FF07E52 		mov	r2, #1065353216
 7402 00e2 2249     		ldr	r1, .L398+68
 7403 00e4 C4F82422 		str	r2, [r4, #548]	@ float
 7404 00e8 C4F83022 		str	r2, [r4, #560]	@ float
 7405 00ec 204A     		ldr	r2, .L398+72
 7406 00ee C4F82C12 		str	r1, [r4, #556]	@ float
 7407 00f2 C4F83422 		str	r2, [r4, #564]	@ float
 7408 00f6 84F83832 		strb	r3, [r4, #568]
 7409              	.LVL633:
 7410              	.LBB954:
 7411              	.LBI954:
  29:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 7412              		.loc 9 29 5 is_stmt 1 view .LVU2185
  29:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     ~Svf() {}
ARM GAS  /tmp/cch2Dr4w.s 			page 219


 7413              		.loc 9 29 5 is_stmt 0 view .LVU2186
 7414              	.LBE954:
 7415              	.LBB955:
 7416              	.LBI955:
  29:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 7417              		.loc 9 29 5 is_stmt 1 view .LVU2187
  29:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 7418              		.loc 9 29 5 is_stmt 0 view .LVU2188
 7419              	.LBE955:
 7420              	.LBB956:
 7421              	.LBI956:
  29:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 7422              		.loc 9 29 5 is_stmt 1 view .LVU2189
  29:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 7423              		.loc 9 29 5 is_stmt 0 view .LVU2190
 7424              	.LBE956:
 7425              	.LBB957:
 7426              	.LBI957:
  29:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 7427              		.loc 9 29 5 is_stmt 1 view .LVU2191
  29:/home/ubuntu/DaisyExamples/DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 7428              		.loc 9 29 5 is_stmt 0 view .LVU2192
 7429              	.LBE957:
 212:EchoBridgeWithUSB.cpp ****         lateFft.Init();
 7430              		.loc 2 212 9 is_stmt 1 view .LVU2193
 212:EchoBridgeWithUSB.cpp ****         lateFft.Init();
 7431              		.loc 2 212 22 is_stmt 0 view .LVU2194
 7432 00fa 1E48     		ldr	r0, .L398+76
 209:EchoBridgeWithUSB.cpp ****     {
 7433              		.loc 2 209 27 view .LVU2195
 7434 00fc C4E98333 		strd	r3, r3, [r4, #524]
 7435 0100 C4E98533 		strd	r3, r3, [r4, #532]
 212:EchoBridgeWithUSB.cpp ****         lateFft.Init();
 7436              		.loc 2 212 22 view .LVU2196
 7437 0104 FFF7FEFF 		bl	_ZN6ShyFFTIfLj64EE4InitEv
 7438              	.LVL634:
 213:EchoBridgeWithUSB.cpp ****     }
 7439              		.loc 2 213 9 is_stmt 1 view .LVU2197
 213:EchoBridgeWithUSB.cpp ****     }
 7440              		.loc 2 213 21 is_stmt 0 view .LVU2198
 7441 0108 1548     		ldr	r0, .L398+56
 7442 010a FFF7FEFF 		bl	_ZN6ShyFFTIfLj1024EE4InitEv
 7443              	.LVL635:
 213:EchoBridgeWithUSB.cpp ****     }
 7444              		.loc 2 213 21 view .LVU2199
 7445              	.LBE958:
 7446              	.LBE959:
 7447              	.LBE963:
 590:EchoBridgeWithUSB.cpp **** 
 7448              		.loc 2 590 30 view .LVU2200
 7449 010e A4F54050 		sub	r0, r4, #12288
 7450 0112 0C4A     		ldr	r2, .L398+28
 7451 0114 1849     		ldr	r1, .L398+80
 7452              	.LBE965:
 7453              	.LBE968:
 7454              		.loc 2 788 1 view .LVU2201
 7455 0116 BDEC048B 		vldm	sp!, {d8-d9}
ARM GAS  /tmp/cch2Dr4w.s 			page 220


 7456              		.cfi_restore 82
 7457              		.cfi_restore 83
 7458              		.cfi_restore 80
 7459              		.cfi_restore 81
 7460              		.cfi_def_cfa_offset 16
 7461 011a BDE83840 		pop	{r3, r4, r5, lr}
 7462              		.cfi_restore 14
 7463              		.cfi_restore 5
 7464              		.cfi_restore 4
 7465              		.cfi_restore 3
 7466              		.cfi_def_cfa_offset 0
 7467              	.LBB969:
 7468              	.LBB966:
 590:EchoBridgeWithUSB.cpp **** 
 7469              		.loc 2 590 30 view .LVU2202
 7470 011e FFF7FEBF 		b	__aeabi_atexit
 7471              	.LVL636:
 7472              	.L399:
 7473 0122 00BFAFF3 		.align	3
 7473      0080
 7474              	.L398:
 7475 0128 182D4454 		.word	1413754136
 7476 012c FB2119C0 		.word	-1072094725
 7477 0130 00000000 		.word	0
 7478 0134 0000903F 		.word	1066401792
 7479 0138 00000000 		.word	0
 7480 013c 0000503F 		.word	1062207488
 7481 0140 00000000 		.word	.LANCHOR7
 7482 0144 00000000 		.word	__dso_handle
 7483 0148 00000000 		.word	_ZN16clevelandmusicco8HothouseD1Ev
 7484 014c 00000000 		.word	.LANCHOR5
 7485 0150 00000000 		.word	reverb
 7486 0154 00000000 		.word	_ZN5daisy3LedD1Ev
 7487 0158 00000000 		.word	.LANCHOR1
 7488 015c 00000000 		.word	.LANCHOR3
 7489 0160 0C020000 		.word	reverb+524
 7490 0164 00300000 		.word	reverb+12288
 7491 0168 0000C842 		.word	1120403456
 7492 016c 00401C46 		.word	1176256512
 7493 0170 00803B47 		.word	1195081728
 7494 0174 0C000000 		.word	reverb+12
 7495 0178 00000000 		.word	_ZN28PartitionedConvolutionReverbD1Ev
 7496              	.LBE966:
 7497              	.LBE969:
 7498              		.cfi_endproc
 7499              	.LFE6142:
 7501              		.section	.init_array,"aw",%init_array
 7502              		.align	2
 7503 0000 00000000 		.word	_GLOBAL__sub_I__ZN8IRLoader14LoadIRCallbackE(target1)
 7504              		.global	reverb
 7505              		.global	g_predelayBufferRight
 7506              		.global	g_predelayBuffer
 7507              		.global	g_lateIrFreqImagRight
 7508              		.global	g_lateIrFreqRealRight
 7509              		.global	g_lateIrFreqImag
 7510              		.global	g_lateIrFreqReal
 7511              		.global	g_lateFreqImag
ARM GAS  /tmp/cch2Dr4w.s 			page 221


 7512              		.global	g_lateFreqReal
 7513              		.global	g_lateTimeOut
 7514              		.global	g_lateTimeIn
 7515              		.global	g_lateOutputBufferRight
 7516              		.global	g_lateOutputBuffer
 7517              		.global	g_lateInputBufferRight
 7518              		.global	g_lateInputBuffer
 7519              		.global	isStereoInput
 7520              		.global	irLoaded
 7521              		.global	usbMounted
 7522              		.global	freeze
 7523              		.global	bypass
 7524              		.global	led2
 7525              		.global	led1
 7526              		.global	irLoader
 7527              		.global	hw
 7528              		.global	_ZN8IRLoader14LoadIRCallbackE
 7529              		.section	.bss._ZN8IRLoader14LoadIRCallbackE,"aw",%nobits
 7530              		.align	2
 7531              		.set	.LANCHOR4,. + 0
 7534              	_ZN8IRLoader14LoadIRCallbackE:
 7535 0000 00000000 		.space	4
 7536              		.section	.bss.freeze,"aw",%nobits
 7537              		.set	.LANCHOR0,. + 0
 7540              	freeze:
 7541 0000 00       		.space	1
 7542              		.section	.bss.hw,"aw",%nobits
 7543              		.align	2
 7544              		.set	.LANCHOR7,. + 0
 7547              	hw:
 7548 0000 00000000 		.space	268
 7548      00000000 
 7548      00000000 
 7548      00000000 
 7548      00000000 
 7549              		.section	.bss.irLoaded,"aw",%nobits
 7550              		.set	.LANCHOR6,. + 0
 7553              	irLoaded:
 7554 0000 00       		.space	1
 7555              		.section	.bss.irLoader,"aw",%nobits
 7556              		.align	2
 7557              		.set	.LANCHOR5,. + 0
 7560              	irLoader:
 7561 0000 00000000 		.space	8
 7561      00000000 
 7562              		.section	.bss.isStereoInput,"aw",%nobits
 7563              		.set	.LANCHOR8,. + 0
 7566              	isStereoInput:
 7567 0000 00       		.space	1
 7568              		.section	.bss.led1,"aw",%nobits
 7569              		.align	2
 7570              		.set	.LANCHOR1,. + 0
 7573              	led1:
 7574 0000 00000000 		.space	28
 7574      00000000 
 7574      00000000 
 7574      00000000 
ARM GAS  /tmp/cch2Dr4w.s 			page 222


 7574      00000000 
 7575              		.section	.bss.led2,"aw",%nobits
 7576              		.align	2
 7577              		.set	.LANCHOR3,. + 0
 7580              	led2:
 7581 0000 00000000 		.space	28
 7581      00000000 
 7581      00000000 
 7581      00000000 
 7581      00000000 
 7582              		.section	.bss.reverb,"aw",%nobits
 7583              		.align	2
 7586              	reverb:
 7587 0000 00000000 		.space	13164
 7587      00000000 
 7587      00000000 
 7587      00000000 
 7587      00000000 
 7588              		.section	.bss.usbMounted,"aw",%nobits
 7591              	usbMounted:
 7592 0000 00       		.space	1
 7593              		.section	.data.bypass,"aw"
 7594              		.set	.LANCHOR2,. + 0
 7597              	bypass:
 7598 0000 01       		.byte	1
 7599              		.section	.sdram_bss,"aw"
 7600              		.align	2
 7603              	g_predelayBufferRight:
 7604 0000 00000000 		.space	96000
 7604      00000000 
 7604      00000000 
 7604      00000000 
 7604      00000000 
 7607              	g_predelayBuffer:
 7608 17700 00000000 		.space	96000
 7608      00000000 
 7608      00000000 
 7608      00000000 
 7608      00000000 
 7611              	g_lateIrFreqImagRight:
 7612 2ee00 00000000 		.space	4096
 7612      00000000 
 7612      00000000 
 7612      00000000 
 7612      00000000 
 7615              	g_lateIrFreqRealRight:
 7616 2fe00 00000000 		.space	4096
 7616      00000000 
 7616      00000000 
 7616      00000000 
 7616      00000000 
 7619              	g_lateIrFreqImag:
 7620 30e00 00000000 		.space	4096
 7620      00000000 
 7620      00000000 
 7620      00000000 
 7620      00000000 
ARM GAS  /tmp/cch2Dr4w.s 			page 223


 7623              	g_lateIrFreqReal:
 7624 31e00 00000000 		.space	4096
 7624      00000000 
 7624      00000000 
 7624      00000000 
 7624      00000000 
 7627              	g_lateFreqImag:
 7628 32e00 00000000 		.space	4096
 7628      00000000 
 7628      00000000 
 7628      00000000 
 7628      00000000 
 7631              	g_lateFreqReal:
 7632 33e00 00000000 		.space	4096
 7632      00000000 
 7632      00000000 
 7632      00000000 
 7632      00000000 
 7635              	g_lateTimeOut:
 7636 34e00 00000000 		.space	4096
 7636      00000000 
 7636      00000000 
 7636      00000000 
 7636      00000000 
 7639              	g_lateTimeIn:
 7640 35e00 00000000 		.space	4096
 7640      00000000 
 7640      00000000 
 7640      00000000 
 7640      00000000 
 7643              	g_lateOutputBufferRight:
 7644 36e00 00000000 		.space	8192
 7644      00000000 
 7644      00000000 
 7644      00000000 
 7644      00000000 
 7647              	g_lateOutputBuffer:
 7648 38e00 00000000 		.space	8192
 7648      00000000 
 7648      00000000 
 7648      00000000 
 7648      00000000 
 7651              	g_lateInputBufferRight:
 7652 3ae00 00000000 		.space	4096
 7652      00000000 
 7652      00000000 
 7652      00000000 
 7652      00000000 
 7655              	g_lateInputBuffer:
 7656 3be00 00000000 		.space	4096
 7656      00000000 
 7656      00000000 
 7656      00000000 
 7656      00000000 
 7657              		.text
 7658              	.Letext0:
 7659              		.file 18 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
ARM GAS  /tmp/cch2Dr4w.s 			page 224


 7660              		.file 19 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 7661              		.file 20 "/usr/include/newlib/c++/10.3.1/bits/std_abs.h"
 7662              		.file 21 "/usr/include/newlib/c++/10.3.1/cstdint"
 7663              		.file 22 "/usr/include/newlib/c++/10.3.1/cstdlib"
 7664              		.file 23 "/usr/include/newlib/c++/10.3.1/type_traits"
 7665              		.file 24 "/usr/include/newlib/c++/10.3.1/debug/debug.h"
 7666              		.file 25 "/usr/include/newlib/c++/10.3.1/cwchar"
 7667              		.file 26 "/usr/include/newlib/c++/10.3.1/bits/stl_pair.h"
 7668              		.file 27 "/usr/include/newlib/c++/10.3.1/bits/exception_ptr.h"
 7669              		.file 28 "/usr/include/newlib/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 7670              		.file 29 "/usr/include/newlib/c++/10.3.1/clocale"
 7671              		.file 30 "/usr/include/newlib/c++/10.3.1/cstdio"
 7672              		.file 31 "/usr/include/newlib/c++/10.3.1/bits/basic_string.h"
 7673              		.file 32 "/usr/include/newlib/c++/10.3.1/complex"
 7674              		.file 33 "/usr/include/newlib/c++/10.3.1/bits/stl_iterator.h"
 7675              		.file 34 "/usr/include/newlib/c++/10.3.1/bits/algorithmfwd.h"
 7676              		.file 35 "/usr/include/newlib/c++/10.3.1/cstring"
 7677              		.file 36 "/usr/include/newlib/c++/10.3.1/cstdarg"
 7678              		.file 37 "/usr/include/newlib/c++/10.3.1/cwctype"
 7679              		.file 38 "/usr/include/newlib/c++/10.3.1/bits/predefined_ops.h"
 7680              		.file 39 "/usr/include/newlib/sys/_types.h"
 7681              		.file 40 "/usr/include/newlib/sys/reent.h"
 7682              		.file 41 "/usr/include/newlib/sys/lock.h"
 7683              		.file 42 "/usr/include/newlib/math.h"
 7684              		.file 43 "/usr/include/newlib/stdlib.h"
 7685              		.file 44 "/usr/include/newlib/c++/10.3.1/math.h"
 7686              		.file 45 "/home/ubuntu/DaisyExamples/DaisySP/Source/Control/adenv.h"
 7687              		.file 46 "/home/ubuntu/DaisyExamples/DaisySP/Source/Utility/dsp.h"
 7688              		.file 47 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 7689              		.file 48 "/usr/include/newlib/wchar.h"
 7690              		.file 49 "/usr/include/newlib/locale.h"
 7691              		.file 50 "/usr/include/newlib/stdio.h"
 7692              		.file 51 "/usr/include/newlib/c++/10.3.1/stdlib.h"
 7693              		.file 52 "/usr/include/newlib/string.h"
 7694              		.file 53 "/home/ubuntu/DaisyExamples/libDaisy/src/daisy_core.h"
 7695              		.file 54 "/home/ubuntu/DaisyExamples/libDaisy/src/per/tim.h"
 7696              		.file 55 "/home/ubuntu/DaisyExamples/libDaisy/src/util/wav_format.h"
 7697              		.file 56 "/home/ubuntu/DaisyExamples/libDaisy/src/dev/max11300.h"
 7698              		.file 57 "/home/ubuntu/DaisyExamples/libDaisy/src/per/gpio.h"
 7699              		.file 58 "/home/ubuntu/DaisyExamples/libDaisy/src/dev/sdram.h"
 7700              		.file 59 "/home/ubuntu/DaisyExamples/libDaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 7701              		.file 60 "/home/ubuntu/DaisyExamples/libDaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 7702              		.file 61 "/home/ubuntu/DaisyExamples/libDaisy/src/dev/sr_595.h"
 7703              		.file 62 "/usr/include/newlib/wctype.h"
 7704              		.file 63 "/usr/include/newlib/c++/10.3.1/new"
 7705              		.file 64 "<built-in>"
ARM GAS  /tmp/cch2Dr4w.s 			page 225


DEFINED SYMBOLS
                            *ABS*:0000000000000000 EchoBridgeWithUSB.cpp
     /tmp/cch2Dr4w.s:17     .text._ZN5daisy3LedD2Ev:0000000000000000 $t
     /tmp/cch2Dr4w.s:25     .text._ZN5daisy3LedD2Ev:0000000000000000 _ZN5daisy3LedD2Ev
     /tmp/cch2Dr4w.s:25     .text._ZN5daisy3LedD2Ev:0000000000000000 _ZN5daisy3LedD1Ev
     /tmp/cch2Dr4w.s:42     .text._Z11HandleKnob1f:0000000000000000 $t
     /tmp/cch2Dr4w.s:49     .text._Z11HandleKnob1f:0000000000000000 _Z11HandleKnob1f
     /tmp/cch2Dr4w.s:76     .text._Z11HandleKnob1f:0000000000000008 $d
     /tmp/cch2Dr4w.s:7586   .bss.reverb:0000000000000000 reverb
     /tmp/cch2Dr4w.s:81     .text._Z11HandleKnob2f:0000000000000000 $t
     /tmp/cch2Dr4w.s:88     .text._Z11HandleKnob2f:0000000000000000 _Z11HandleKnob2f
     /tmp/cch2Dr4w.s:144    .text._Z11HandleKnob2f:0000000000000038 $d
     /tmp/cch2Dr4w.s:151    .text._Z11HandleKnob5f:0000000000000000 $t
     /tmp/cch2Dr4w.s:158    .text._Z11HandleKnob5f:0000000000000000 _Z11HandleKnob5f
     /tmp/cch2Dr4w.s:192    .text._Z11HandleKnob5f:000000000000000c $d
     /tmp/cch2Dr4w.s:197    .text._Z11HandleKnob6f:0000000000000000 $t
     /tmp/cch2Dr4w.s:204    .text._Z11HandleKnob6f:0000000000000000 _Z11HandleKnob6f
     /tmp/cch2Dr4w.s:218    .text._ZN16clevelandmusicco8HothouseD2Ev:0000000000000000 $t
     /tmp/cch2Dr4w.s:225    .text._ZN16clevelandmusicco8HothouseD2Ev:0000000000000000 _ZN16clevelandmusicco8HothouseD2Ev
     /tmp/cch2Dr4w.s:225    .text._ZN16clevelandmusicco8HothouseD2Ev:0000000000000000 _ZN16clevelandmusicco8HothouseD1Ev
     /tmp/cch2Dr4w.s:271    .text._ZN28PartitionedConvolutionReverbD2Ev:0000000000000000 $t
     /tmp/cch2Dr4w.s:278    .text._ZN28PartitionedConvolutionReverbD2Ev:0000000000000000 _ZN28PartitionedConvolutionReverbD2Ev
     /tmp/cch2Dr4w.s:278    .text._ZN28PartitionedConvolutionReverbD2Ev:0000000000000000 _ZN28PartitionedConvolutionReverbD1Ev
     /tmp/cch2Dr4w.s:353    .text._Z17HandleFootswitch1b:0000000000000000 $t
     /tmp/cch2Dr4w.s:360    .text._Z17HandleFootswitch1b:0000000000000000 _Z17HandleFootswitch1b
     /tmp/cch2Dr4w.s:406    .text._Z17HandleFootswitch1b:0000000000000024 $d
     /tmp/cch2Dr4w.s:413    .text._Z17HandleFootswitch2b:0000000000000000 $t
     /tmp/cch2Dr4w.s:420    .text._Z17HandleFootswitch2b:0000000000000000 _Z17HandleFootswitch2b
     /tmp/cch2Dr4w.s:466    .text._Z17HandleFootswitch2b:0000000000000024 $d
     /tmp/cch2Dr4w.s:486    .text._ZN8IRLoader12LoadStereoIREv.isra.0:0000000000000000 $t
     /tmp/cch2Dr4w.s:492    .text._ZN8IRLoader12LoadStereoIREv.isra.0:0000000000000000 _ZN8IRLoader12LoadStereoIREv.isra.0
     /tmp/cch2Dr4w.s:1118   .text._ZN8IRLoader12LoadStereoIREv.isra.0:00000000000002c0 $d
     /tmp/cch2Dr4w.s:1134   .text._ZN8IRLoader12LoadStereoIREv.isra.0:00000000000002e4 $t
     /tmp/cch2Dr4w.s:1428   .text._ZN8IRLoader12LoadStereoIREv.isra.0:000000000000042c $d
     /tmp/cch2Dr4w.s:1436   .text._ZN8IRLoader10LoadMonoIREv.isra.0:0000000000000000 $t
     /tmp/cch2Dr4w.s:1442   .text._ZN8IRLoader10LoadMonoIREv.isra.0:0000000000000000 _ZN8IRLoader10LoadMonoIREv.isra.0
     /tmp/cch2Dr4w.s:1982   .text._ZN8IRLoader10LoadMonoIREv.isra.0:0000000000000260 $d
     /tmp/cch2Dr4w.s:1995   .text._ZN16clevelandmusicco8Hothouse4InitEv:0000000000000000 $t
     /tmp/cch2Dr4w.s:2002   .text._ZN16clevelandmusicco8Hothouse4InitEv:0000000000000000 _ZN16clevelandmusicco8Hothouse4InitEv
     /tmp/cch2Dr4w.s:2282   .text._ZN16clevelandmusicco8Hothouse4InitEv:0000000000000130 $d
     /tmp/cch2Dr4w.s:2287   .text._ZN16clevelandmusicco8Hothouse18ProcessAllControlsEv:0000000000000000 $t
     /tmp/cch2Dr4w.s:2294   .text._ZN16clevelandmusicco8Hothouse18ProcessAllControlsEv:0000000000000000 _ZN16clevelandmusicco8Hothouse18ProcessAllControlsEv
     /tmp/cch2Dr4w.s:2573   .text._ZN16clevelandmusicco8Hothouse18ProcessAllControlsEv:0000000000000108 $d
     /tmp/cch2Dr4w.s:2584   .text._ZN8IRLoader6LoadIREv:0000000000000000 $t
     /tmp/cch2Dr4w.s:2591   .text._ZN8IRLoader6LoadIREv:0000000000000000 _ZN8IRLoader6LoadIREv
     /tmp/cch2Dr4w.s:2652   .text._Z26HandleFootswitch1LongPressv:0000000000000000 $t
     /tmp/cch2Dr4w.s:2659   .text._Z26HandleFootswitch1LongPressv:0000000000000000 _Z26HandleFootswitch1LongPressv
     /tmp/cch2Dr4w.s:2794   .text._Z26HandleFootswitch1LongPressv:0000000000000088 $d
     /tmp/cch2Dr4w.s:2806   .text._ZN28PartitionedConvolutionReverb13UpdateFiltersEv:0000000000000000 $t
     /tmp/cch2Dr4w.s:2813   .text._ZN28PartitionedConvolutionReverb13UpdateFiltersEv:0000000000000000 _ZN28PartitionedConvolutionReverb13UpdateFiltersEv
     /tmp/cch2Dr4w.s:2939   .text._ZN28PartitionedConvolutionReverb13UpdateFiltersEv:00000000000000ac $d
     /tmp/cch2Dr4w.s:2944   .text._Z11HandleKnob4f:0000000000000000 $t
     /tmp/cch2Dr4w.s:2951   .text._Z11HandleKnob4f:0000000000000000 _Z11HandleKnob4f
     /tmp/cch2Dr4w.s:3086   .text._Z11HandleKnob4f:000000000000005c $d
     /tmp/cch2Dr4w.s:3094   .text._ZN6ShyFFTIfLj64EE6DirectEPKfPf:0000000000000000 $t
     /tmp/cch2Dr4w.s:3101   .text._ZN6ShyFFTIfLj64EE6DirectEPKfPf:0000000000000000 _ZN6ShyFFTIfLj64EE6DirectEPKfPf
     /tmp/cch2Dr4w.s:3263   .text._ZN6ShyFFTIfLj64EE6DirectEPKfPf:0000000000000090 $d
ARM GAS  /tmp/cch2Dr4w.s 			page 226


     /tmp/cch2Dr4w.s:3268   .text._ZN6ShyFFTIfLj1024EE6DirectEPKfPf:0000000000000000 $t
     /tmp/cch2Dr4w.s:3275   .text._ZN6ShyFFTIfLj1024EE6DirectEPKfPf:0000000000000000 _ZN6ShyFFTIfLj1024EE6DirectEPKfPf
     /tmp/cch2Dr4w.s:3437   .text._ZN6ShyFFTIfLj1024EE6DirectEPKfPf:0000000000000098 $d
     /tmp/cch2Dr4w.s:3442   .text._ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv:0000000000000000 $t
     /tmp/cch2Dr4w.s:3449   .text._ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv:0000000000000000 _ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv
     /tmp/cch2Dr4w.s:3806   .text._ZN28PartitionedConvolutionReverb23UpdateIRFrequencyDomainEv:00000000000001f4 $d
     /tmp/cch2Dr4w.s:7623   .sdram_bss:0000000000031e00 g_lateIrFreqReal
     /tmp/cch2Dr4w.s:7619   .sdram_bss:0000000000030e00 g_lateIrFreqImag
     /tmp/cch2Dr4w.s:7615   .sdram_bss:000000000002fe00 g_lateIrFreqRealRight
     /tmp/cch2Dr4w.s:7611   .sdram_bss:000000000002ee00 g_lateIrFreqImagRight
     /tmp/cch2Dr4w.s:7635   .sdram_bss:0000000000034e00 g_lateTimeOut
     /tmp/cch2Dr4w.s:3815   .text._Z26HandleFootswitch2LongPressv:0000000000000000 $t
     /tmp/cch2Dr4w.s:3822   .text._Z26HandleFootswitch2LongPressv:0000000000000000 _Z26HandleFootswitch2LongPressv
     /tmp/cch2Dr4w.s:4002   .text._Z26HandleFootswitch2LongPressv:0000000000000080 $d
     /tmp/cch2Dr4w.s:4012   .text._Z14LoadIRCallbackPfS_j:0000000000000000 $t
     /tmp/cch2Dr4w.s:4019   .text._Z14LoadIRCallbackPfS_j:0000000000000000 _Z14LoadIRCallbackPfS_j
     /tmp/cch2Dr4w.s:4253   .text._Z14LoadIRCallbackPfS_j:00000000000000b0 $d
     /tmp/cch2Dr4w.s:4261   .text._Z11HandleKnob3f:0000000000000000 $t
     /tmp/cch2Dr4w.s:4268   .text._Z11HandleKnob3f:0000000000000000 _Z11HandleKnob3f
     /tmp/cch2Dr4w.s:4315   .text._Z11HandleKnob3f:0000000000000020 $d
     /tmp/cch2Dr4w.s:4320   .text._ZN6ShyFFTIfLj64EE4InitEv:0000000000000000 $t
     /tmp/cch2Dr4w.s:4327   .text._ZN6ShyFFTIfLj64EE4InitEv:0000000000000000 _ZN6ShyFFTIfLj64EE4InitEv
     /tmp/cch2Dr4w.s:4413   .text._ZN6ShyFFTIfLj1024EE4InitEv:0000000000000000 $t
     /tmp/cch2Dr4w.s:4420   .text._ZN6ShyFFTIfLj1024EE4InitEv:0000000000000000 _ZN6ShyFFTIfLj1024EE4InitEv
     /tmp/cch2Dr4w.s:4505   .text._ZN28PartitionedConvolutionReverb4InitEf:0000000000000000 $t
     /tmp/cch2Dr4w.s:4512   .text._ZN28PartitionedConvolutionReverb4InitEf:0000000000000000 _ZN28PartitionedConvolutionReverb4InitEf
     /tmp/cch2Dr4w.s:4659   .text._ZN28PartitionedConvolutionReverb4InitEf:00000000000000dc $d
     /tmp/cch2Dr4w.s:7655   .sdram_bss:000000000003be00 g_lateInputBuffer
     /tmp/cch2Dr4w.s:7651   .sdram_bss:000000000003ae00 g_lateInputBufferRight
     /tmp/cch2Dr4w.s:7647   .sdram_bss:0000000000038e00 g_lateOutputBuffer
     /tmp/cch2Dr4w.s:7643   .sdram_bss:0000000000036e00 g_lateOutputBufferRight
     /tmp/cch2Dr4w.s:7607   .sdram_bss:0000000000017700 g_predelayBuffer
     /tmp/cch2Dr4w.s:7603   .sdram_bss:0000000000000000 g_predelayBufferRight
     /tmp/cch2Dr4w.s:4673   .text.startup.main:0000000000000000 $t
     /tmp/cch2Dr4w.s:4680   .text.startup.main:0000000000000000 main
     /tmp/cch2Dr4w.s:5082   .text.startup.main:0000000000000128 $d
     /tmp/cch2Dr4w.s:6846   .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
     /tmp/cch2Dr4w.s:5109   .text._ZN6ShyFFTIfLj64EE7ComplexEPfS1_j:0000000000000000 $t
     /tmp/cch2Dr4w.s:5116   .text._ZN6ShyFFTIfLj64EE7ComplexEPfS1_j:0000000000000000 _ZN6ShyFFTIfLj64EE7ComplexEPfS1_j
     /tmp/cch2Dr4w.s:5398   .text._ZN6ShyFFTIfLj64EE7InverseEPfS1_j:0000000000000000 $t
     /tmp/cch2Dr4w.s:5405   .text._ZN6ShyFFTIfLj64EE7InverseEPfS1_j:0000000000000000 _ZN6ShyFFTIfLj64EE7InverseEPfS1_j
     /tmp/cch2Dr4w.s:5484   .text._ZN6ShyFFTIfLj1024EE7ComplexEPfS1_j:0000000000000000 $t
     /tmp/cch2Dr4w.s:5491   .text._ZN6ShyFFTIfLj1024EE7ComplexEPfS1_j:0000000000000000 _ZN6ShyFFTIfLj1024EE7ComplexEPfS1_j
     /tmp/cch2Dr4w.s:5782   .text._ZN6ShyFFTIfLj1024EE7InverseEPfS1_j:0000000000000000 $t
     /tmp/cch2Dr4w.s:5789   .text._ZN6ShyFFTIfLj1024EE7InverseEPfS1_j:0000000000000000 _ZN6ShyFFTIfLj1024EE7InverseEPfS1_j
     /tmp/cch2Dr4w.s:5868   .text._ZN28PartitionedConvolutionReverb7ProcessEffPfS0_:0000000000000000 $t
     /tmp/cch2Dr4w.s:5875   .text._ZN28PartitionedConvolutionReverb7ProcessEffPfS0_:0000000000000000 _ZN28PartitionedConvolutionReverb7ProcessEffPfS0_
     /tmp/cch2Dr4w.s:6550   .text._ZN28PartitionedConvolutionReverb7ProcessEffPfS0_:000000000000031c $d
     /tmp/cch2Dr4w.s:6565   .text._ZN28PartitionedConvolutionReverb7ProcessEffPfS0_:000000000000033c $t
     /tmp/cch2Dr4w.s:6820   .text._ZN28PartitionedConvolutionReverb7ProcessEffPfS0_:0000000000000480 $d
     /tmp/cch2Dr4w.s:7639   .sdram_bss:0000000000035e00 g_lateTimeIn
     /tmp/cch2Dr4w.s:7631   .sdram_bss:0000000000033e00 g_lateFreqReal
     /tmp/cch2Dr4w.s:7627   .sdram_bss:0000000000032e00 g_lateFreqImag
     /tmp/cch2Dr4w.s:6839   .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
     /tmp/cch2Dr4w.s:7000   .text._Z13AudioCallbackPKPKfPPfj:000000000000008c $d
     /tmp/cch2Dr4w.s:7010   .text.startup._GLOBAL__sub_I__ZN8IRLoader14LoadIRCallbackE:0000000000000000 $t
     /tmp/cch2Dr4w.s:7016   .text.startup._GLOBAL__sub_I__ZN8IRLoader14LoadIRCallbackE:0000000000000000 _GLOBAL__sub_I__ZN8IRLoader14LoadIRCallbackE
ARM GAS  /tmp/cch2Dr4w.s 			page 227


     /tmp/cch2Dr4w.s:7475   .text.startup._GLOBAL__sub_I__ZN8IRLoader14LoadIRCallbackE:0000000000000128 $d
     /tmp/cch2Dr4w.s:7502   .init_array:0000000000000000 $d
     /tmp/cch2Dr4w.s:7566   .bss.isStereoInput:0000000000000000 isStereoInput
     /tmp/cch2Dr4w.s:7553   .bss.irLoaded:0000000000000000 irLoaded
     /tmp/cch2Dr4w.s:7591   .bss.usbMounted:0000000000000000 usbMounted
     /tmp/cch2Dr4w.s:7540   .bss.freeze:0000000000000000 freeze
     /tmp/cch2Dr4w.s:7597   .data.bypass:0000000000000000 bypass
     /tmp/cch2Dr4w.s:7580   .bss.led2:0000000000000000 led2
     /tmp/cch2Dr4w.s:7573   .bss.led1:0000000000000000 led1
     /tmp/cch2Dr4w.s:7560   .bss.irLoader:0000000000000000 irLoader
     /tmp/cch2Dr4w.s:7547   .bss.hw:0000000000000000 hw
     /tmp/cch2Dr4w.s:7534   .bss._ZN8IRLoader14LoadIRCallbackE:0000000000000000 _ZN8IRLoader14LoadIRCallbackE
     /tmp/cch2Dr4w.s:7530   .bss._ZN8IRLoader14LoadIRCallbackE:0000000000000000 $d
     /tmp/cch2Dr4w.s:7541   .bss.freeze:0000000000000000 $d
     /tmp/cch2Dr4w.s:7543   .bss.hw:0000000000000000 $d
     /tmp/cch2Dr4w.s:7554   .bss.irLoaded:0000000000000000 $d
     /tmp/cch2Dr4w.s:7556   .bss.irLoader:0000000000000000 $d
     /tmp/cch2Dr4w.s:7567   .bss.isStereoInput:0000000000000000 $d
     /tmp/cch2Dr4w.s:7569   .bss.led1:0000000000000000 $d
     /tmp/cch2Dr4w.s:7576   .bss.led2:0000000000000000 $d
     /tmp/cch2Dr4w.s:7583   .bss.reverb:0000000000000000 $d
     /tmp/cch2Dr4w.s:7592   .bss.usbMounted:0000000000000000 $d
     /tmp/cch2Dr4w.s:7600   .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy3LedD5Ev
                           .group:0000000000000000 _ZN16clevelandmusicco8HothouseD5Ev
                           .group:0000000000000000 _ZN28PartitionedConvolutionReverbD5Ev

UNDEFINED SYMBOLS
_ZdaPv
_ZN5daisy3Led3SetEf
f_open
f_close
f_read
strncmp
_Znaj
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN5daisy6Switch8DebounceEv
_ZN5daisy6System6GetNowEv
_ZN5daisy6System5DelayEm
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp3Svf8SetDriveEf
memset
memcpy
_ZN7daisysp3Svf4InitEf
_ZN5daisy3Led4InitE12dsy_gpio_pinbf
_Znwj
_ZN5daisy13USBHostHandle4InitENS0_6ConfigE
ARM GAS  /tmp/cch2Dr4w.s 			page 228


_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy13USBHostHandle7ProcessEv
f_mount
_ZN5daisy3Led6UpdateEv
_ZN7daisysp3Svf7ProcessEf
memmove
__aeabi_atexit
cosf
sinf
__dso_handle
